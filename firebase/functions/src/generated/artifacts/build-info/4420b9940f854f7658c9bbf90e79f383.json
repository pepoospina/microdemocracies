{"id":"4420b9940f854f7658c9bbf90e79f383","_format":"hh-sol-build-info-1","solcVersion":"0.8.6","solcLongVersion":"0.8.6+commit.11564f7e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/Registry.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"prb-math/contracts/PRBMathUD60x18.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\n\n/**\n * @title Registry\n */\n\ncontract Registry is Context, IERC721, IERC721Metadata {\n    using PRBMathUD60x18 for uint256;\n\n    uint256 public PENDING_PERIOD = 180 days;\n    uint256 public VOTING_PERIOD = 15 days;\n    uint256 public QUIET_ENDING_PERIOD = 2 days;\n\n    uint256 public FOUNDERS_VOUCHER = type(uint256).max;\n    string internal baseURI = \"ipfs://\";\n    string internal _symbol;\n    string internal _name;\n\n    struct Vouch {\n        string personCid;\n        uint256 vouchDate;\n    }\n\n    struct Vouches {\n        uint256 number;\n        mapping(uint256 => Vouch) vouches;\n    }\n\n    struct Account {\n        address account;    \n        uint256 voucher;\n        bool valid;\n        uint256 timesChallenged;\n    }\n\n    struct Challenge {\n        bool executed;\n        int8 lastOutcome;\n        uint256 creationDate;\n        uint256 endDate;\n        mapping(uint256 => int8) votes;\n        uint256 nVoted;\n        uint256 nFor;\n    }\n\n    mapping(uint256 => Vouches) vouches;\n\n    /** \n     * two mappings hold the address to token id relationship,\n     * but this is a one-to-one relationship. TokenIds\n     * are preferred as they can be memorized by users.\n     */\n    mapping(uint256 => Account) accounts;\n    mapping(address => uint256) owned;\n\n    mapping(uint256 => Challenge[]) challenges;\n\n    uint256 __totalSupply; // sum of currenlty valid accounts\n    uint256 public _nEntries; // sequential number that increments with every vouch (and gives the tokenId)\n\n    event VouchEvent(uint256 indexed from, uint256 indexed to, string personCid);\n    event InvalidatedAccountEvent(uint256 indexed tokenId);\n    event InvalidatedByChallenge(uint256 indexed tokenId);\n    event InvalidatedByInvalidVoucher(uint256 indexed tokenId);\n\n    event ChallengeEvent(uint256 indexed tokenId);\n    event ChallengeExecuted(uint256 tokenId, int8 outcome);        \n    event VoteEvent(uint256 indexed voterTokenId, uint256 tokenId, int8 vote);\n    event InvalidatedVoteEvent(uint256 indexed tokenId, uint256 indexed voterTokenId);\n    event VotingPeriodExtendedEvent(uint256 newEndDate);\n\n    /** Errors */\n    error ErrorAccountSolidified();\n    error CantChallengeInvalidAccount();\n    error ChallangeAlreadyActive();    \n    error ErrorVoteOnOwnChallenge();\n    error ErrorChallangeAlreadyExecuted();\n    error ErrorChallangeNotActive();\n    error ErrorVotingPeriodEnded();\n    error ErrorVoterCantVote();\n    error ErrorAlreadyVoted();\n    error ErrorVoucherIsValid();\n    error ErrorVoucherNotValid();\n    error ErrorAccountNotValid();\n    error ErrorVoteNotFound();\n    error ErrorVoterValid();\n    error VoucherNoLongerInvalid();\n    error AccountAlreadyOwnsOneToken();\n    error UnexpectedExecutedCondition();\n\n    /***************\n    EXTERNAL FUNCTIONS\n    ***************/\n    constructor(string memory __symbol, string memory __name, address[] memory addresses, string[] memory foundersCids) {\n        _symbol = __symbol;\n        _name = __name;\n        __totalSupply = 0;\n        _nEntries = 0;\n        for (uint8 ix = 0; ix < addresses.length; ix++) {\n            /** special case of founder vouchers being a dumb token ID */\n            accounts[FOUNDERS_VOUCHER].valid = true;\n            _vouch(FOUNDERS_VOUCHER, addresses[ix], foundersCids[ix]);\n        }\n    }\n\n    /** \n     * The msgSender must be a valid account in the registry and vouch\n     * for the provided account and personCid pair\n     */\n    function vouch(address account, string calldata personCid) external {\n        uint256 vouchTokenId = _tokenIdOf(_msgSender());\n        _vouch(vouchTokenId, account, personCid);\n    }\n\n    function getCurrentChallenge(uint256 _tokenId) internal returns (Challenge storage) {\n        uint256 timesChallenged = accounts[_tokenId].timesChallenged;\n        \n        if (challenges[_tokenId].length != timesChallenged + 1) {\n            /** the currentChallenge must be the last challenge in the array, \n             * the first time is read it does not exist so we create it */\n            challenges[_tokenId].push();\n        }\n        \n        return challenges[_tokenId][timesChallenged];\n    }\n\n    function challenge(uint256 _tokenId) external {\n        if(isSolidified(_tokenId)) {\n            revert ErrorAccountSolidified();\n        }\n\n        if(!accounts[_tokenId].valid) {\n            revert CantChallengeInvalidAccount();\n        }\n\n        Challenge storage _challenge = getCurrentChallenge(_tokenId);\n        if(_challenge.creationDate > 0) revert ChallangeAlreadyActive();\n        if(_challenge.executed) revert UnexpectedExecutedCondition();\n\n        _challenge.creationDate = block.timestamp;\n        _challenge.endDate = block.timestamp + VOTING_PERIOD;\n        _challenge.lastOutcome = -1;\n\n        emit ChallengeEvent(_tokenId);\n    }\n\n    function vote(uint256 _tokenId, int8 _vote) external {\n        uint256 voterTokenId = _tokenIdOf(_msgSender());\n        Challenge storage _challenge = getCurrentChallenge(_tokenId);\n        \n        if(_challenge.creationDate == 0) revert ErrorChallangeNotActive();\n        if(_challenge.executed) revert ErrorChallangeAlreadyExecuted();\n        if(block.timestamp > _challenge.endDate) revert ErrorVotingPeriodEnded();\n        if(!canVote(voterTokenId, _tokenId)) revert ErrorVoterCantVote();\n        if(_challenge.votes[voterTokenId] != 0) revert ErrorAlreadyVoted();\n\n        _challenge.votes[voterTokenId] = _vote == 1 ? int8(1) : int8(-1);\n        _challenge.nVoted += 1;\n        _challenge.nFor += _vote == 1 ? 1 : 0;\n\n        emit VoteEvent(voterTokenId, _tokenId, _vote);\n\n        _executeVote(_challenge, _tokenId);\n    }\n\n    function executeVote(uint256 _tokenId) external {\n        Challenge storage _challenge = getCurrentChallenge(_tokenId);\n        _executeVote(_challenge, _tokenId);\n    }\n\n    function invalidateInvalidVoucher(uint256 tokenId) external {\n        uint256 voucherTokenId = accounts[tokenId].voucher;\n        if(accounts[voucherTokenId].valid) revert ErrorVoucherIsValid();\n\n        emit InvalidatedByInvalidVoucher(tokenId);\n        _invalidateAccount(tokenId);\n    }\n\n    function invalidateVote(uint256 _tokenId, uint256 _voterTokenId) external {\n        Challenge storage _challenge = getCurrentChallenge(_tokenId);\n        _invalidateVote(_tokenId, _challenge, _voterTokenId);\n    }\n\n    /***************\n    VIEW FUNCTIONS\n    ***************/\n    function totalSupply() external view returns (uint256) {\n        return _totalSupply();\n    }\n\n    function _totalSupply() internal view returns (uint256) {\n        return __totalSupply;\n    }\n\n    function getTokenPersonCid(uint256 tokenId) public view returns (string memory) {\n        uint256 voucherTokenId = accounts[tokenId].voucher;\n        return vouches[voucherTokenId].vouches[tokenId].personCid;\n    }\n\n    function getTotalVoters(uint256 _tokenId) public view returns (uint256) {\n        uint256 voucherTokenId = accounts[_tokenId].voucher;\n        Vouches storage _vouches = vouches[voucherTokenId];\n\n        /**\n         * The number of vouches for valid accounts minus the voted account plus the voucher\n         * number = _vouches.number - 1 + 1\n         */\n        uint256 number = _vouches.number;\n\n        /** special case for the founder accounts where the voucher cannot vote */\n        if (voucherTokenId == FOUNDERS_VOUCHER) {\n            number = _vouches.number - 1;\n        }\n\n        return number;\n    }\n\n    /** \n     * A tokenId can vote if\n     * - The voter account is valid\n     * - AND either\n     * - voterTokenId was vouched by voucherTokenId (which is the voucher of the challenged tokenId)\n     * - OR the voterTokenId is the voucherTokenId themselves.\n     * \n     * The FOUNDERS_VOUCHER can, in theory vote on founders challenges, but no address owns that \n     * token and so no problem\n     * */\n    function canVote(uint256 voterTokenId, uint256 challengedTokenId) public view returns (bool) {\n        if (voterTokenId == challengedTokenId) return false;\n        if (voterTokenId == 0) return false;\n\n        uint256 voucherTokenId = accounts[challengedTokenId].voucher;\n        if(!accounts[voucherTokenId].valid) revert VoucherNoLongerInvalid();\n\n        bool isInCircle = accounts[voterTokenId].voucher == voucherTokenId || voterTokenId == voucherTokenId;\n\n        if (accounts[voterTokenId].valid && isInCircle) return true;\n        \n        return false;\n    }\n\n    function isSolidified(uint256 tokenId) public view returns (bool) {\n        Account memory account = accounts[tokenId];\n        uint256 vouchDate = vouches[account.voucher].vouches[tokenId].vouchDate;\n\n        bool isPending = vouchDate == 0 || block.timestamp <= vouchDate + PENDING_PERIOD;\n        return !isPending && account.valid;\n    }\n\n    function tokenIdOf(address owner) external view returns(uint256){\n        return _tokenIdOf(owner);\n    }\n\n    function _tokenIdOf(address owner) internal view returns(uint256){\n        return owned[owner];\n    }\n\n    function balanceOf(address account) public view override returns (uint256 balance) {\n        return _balanceOf(account);\n    }\n\n    function _balanceOf(address account) internal view returns (uint256 balance) {\n        uint256 tokenId = _tokenIdOf(account);\n        return tokenId != 0 && accounts[tokenId].valid ? 1 : 0;\n    }\n\n    function ownerOf(uint256 tokenId) external view override returns (address owner) {\n        return _ownerOf(tokenId); \n    }\n\n    function _ownerOf(uint256 tokenId) internal view returns (address owner) {\n        return accounts[tokenId].account; \n    }\n\n    function getChallenge(uint256 tokenId) external view returns (uint256 creationDate, uint256 endDate, int8 lastOutcome, uint256 nVoted, uint256 nFor, bool executed) {\n        uint256 challengeIndex = accounts[tokenId].timesChallenged;\n        return this.getSpecificChallenge(tokenId, challengeIndex);\n    }\n\n    function getChallengeVote(uint256 tokenId, uint256 voterTokenId) external view returns (int8) {\n        uint256 challengeIndex = accounts[tokenId].timesChallenged;\n        return this.getSpecificChallengeVote(tokenId, voterTokenId, challengeIndex);\n    }\n\n    function getSpecificChallenge(uint256 tokenId, uint256 challengeIndex) external view returns (uint256 creationDate, uint256 endDate, int8 lastOutcome, uint256 nVoted, uint256 nFor, bool executed) {\n        Challenge storage _challenge = challenges[tokenId][challengeIndex];\n        return (_challenge.creationDate, _challenge.endDate, _challenge.lastOutcome, _challenge.nVoted, _challenge.nFor, _challenge.executed);\n    }\n\n    function getSpecificChallengeVote(uint256 tokenId, uint256 voterTokenId, uint256 challengeIndex) external view returns (int8) {\n        Challenge storage _challenge = challenges[tokenId][challengeIndex];\n        return _challenge.votes[voterTokenId];\n    }\n\n    function getVoucherVouchesNumber(uint256 voucherTokenId) public view returns (uint256) {\n        Vouches storage _vouches = vouches[voucherTokenId];\n        return _vouches.number;\n    }\n\n    function getTokenVouch(uint256 tokenId) public view returns (Vouch memory) {\n        uint256 voucher = accounts[tokenId].voucher;\n        return vouches[voucher].vouches[tokenId];\n    }\n\n    function getAccount(uint256 tokenId) public view returns (Account memory) {\n        return accounts[tokenId];\n    }\n\n    function nextTokenId() internal returns (uint256) {\n        return ++_nEntries;\n    }\n\n    /***************\n    INTERNAL FUNCTIONS\n    ***************/\n\n    /** Claiming is always enabled (effectively possible only when a non-zero approved merkleRoot is set) */\n    function _vouch(uint256 _voucherTokenId, address _account, string memory _personCid) internal {\n        uint256 _tokenId = nextTokenId();\n        if(!accounts[_voucherTokenId].valid) revert ErrorVoucherNotValid();\n        if (owned[_account] != 0) revert AccountAlreadyOwnsOneToken();\n        \n        Vouches storage tokenVouches = vouches[_voucherTokenId];\n        Vouch storage __vouch = tokenVouches.vouches[_tokenId];\n\n        /** \n         * Store the vouch data, validate and store the account data, set the owned mapping and update the \n         * total number of vouches and entries in the registry\n         */\n        __vouch.personCid = _personCid;\n        __vouch.vouchDate = block.timestamp;\n\n        accounts[_tokenId].account = _account;\n        accounts[_tokenId].voucher = _voucherTokenId;\n        accounts[_tokenId].valid = true;\n\n        owned[_account] = _tokenId;\n\n        tokenVouches.number += 1;\n        __totalSupply += 1;\n\n        emit Transfer(address(0), _account, _tokenId);\n        emit VouchEvent(_voucherTokenId, _tokenId, _personCid);\n    }\n\n    function _invalidateAccount(uint256 tokenId) internal {\n        Account storage account = accounts[tokenId];\n\n        if (!account.valid) revert ErrorAccountNotValid();\n        \n        /** \n         * invalidate and remove the one-to-one relationship\n         * between the accounts and the owned mappings\n         */\n        account.valid = false;\n        \n        owned[account.account] = 0;\n        account.account = address(0);\n\n        /** decrease the number of valid members of the circle */\n        vouches[account.voucher].number -= 1;\n        /** decrease the number of total entries in the registry */\n        __totalSupply -= 1;\n\n        emit InvalidatedAccountEvent(tokenId);\n    }\n\n    function _executeVote(Challenge storage _challenge, uint256 _tokenId) internal {\n        bool executed = false;\n        uint256 activeRatio = 0;\n        uint256 relRatio = 0;\n\n        /** \n         * keep track of outcome changes, if outcome changed recently,\n         * extend the voting period\n         */\n        if (_challenge.nVoted > 0) {\n            relRatio = _challenge.nFor.mul(uint256(1e18).div(_challenge.nVoted.mul(1e18)));\n        }\n\n        int8 currentOutcome = relRatio >= 0.5e18 ? int8(1) : int8(-1);\n        \n        /** Initialize the lastoutcome */\n        if (_challenge.lastOutcome != currentOutcome) {\n            _challenge.lastOutcome = currentOutcome;\n            \n            uint256 timeRemaining = _challenge.endDate - block.timestamp;\n\n            if(timeRemaining < QUIET_ENDING_PERIOD) {\n                uint256 newEndDate = _challenge.endDate + (QUIET_ENDING_PERIOD - timeRemaining);\n                emit VotingPeriodExtendedEvent(newEndDate);\n                _challenge.endDate = newEndDate;\n            }\n        }\n\n        /** if challenge still pending */\n        if (block.timestamp <= _challenge.endDate) {\n            /** vote period not ended, the challenge is settled with absolute majority */\n            uint256 totalVoters = getTotalVoters(_tokenId);\n            activeRatio = _challenge.nFor.mul(uint256(1e18).div(totalVoters.mul(1e18)));\n        } else {\n            /** time period ended, the challenge is settled with relative majority */\n            executed = true;\n            activeRatio = relRatio;\n        }\n\n        int8 outcome = activeRatio >= 0.5e18 ? int8(1) : int8(-1);\n\n        if (outcome == int8(1)) {\n            executed = true;\n            emit InvalidatedByChallenge(_tokenId);\n            _invalidateAccount(_tokenId);\n        }\n\n        if(executed) {\n            emit ChallengeExecuted(_tokenId, outcome);\n            _challenge.executed = true;\n            accounts[_tokenId].timesChallenged++;\n        }\n    }\n\n    /**\n     * Votes must be manually invalidated when a voter passes from valid to invalid. Automatic invalidation consume storage and this seems good enough\n     * A voter should call \"vote\" to invalidate an account and \"_invalidateVote\" on all the open challenges of the recently invalidated account.\n     */\n    function _invalidateVote(uint256 tokenId, Challenge storage _challenge, uint256 voterTokenId) internal {\n        if(_challenge.votes[voterTokenId] == 0) revert ErrorVoteNotFound();\n        if(accounts[voterTokenId].valid) revert ErrorVoterValid();\n\n        /** decrease the total number of voters */\n        _challenge.nVoted -= 1;\n\n        /** delete the positive vote of the invalid voter*/\n        if (_challenge.votes[voterTokenId] == 1) {\n            _challenge.nFor -= 1;\n        }\n\n        emit InvalidatedVoteEvent(tokenId, voterTokenId);\n    }\n\n    function supportsInterface(bytes4 interfaceId) external view override returns (bool) {}\n\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external override {}\n\n    function safeTransferFrom(address from, address to, uint256 tokenId) external override {}\n\n    function transferFrom(address from, address to, uint256 tokenId) external override {}\n\n    function approve(address to, uint256 tokenId) external override {}\n\n    function setApprovalForAll(address operator, bool approved) external override {}\n\n    function getApproved(uint256) external view override returns (address operator) {\n        return address(0);\n    }\n\n    function isApprovedForAll(address, address) external view override returns (bool) {\n        return false;\n    }\n\n    function name() external view override returns (string memory) {\n        return _name;\n    }\n\n    function symbol() external view override returns (string memory) {\n        return _symbol;\n    }\n\n    function tokenURI(uint256 tokenId) external view override returns (string memory) {\n        uint256 voucherTokenId = accounts[tokenId].voucher;\n        string memory cid = vouches[voucherTokenId].vouches[tokenId].personCid;\n        return string(abi.encodePacked(baseURI, cid)); \n    }\n}\n"},"prb-math/contracts/PRBMath.sol":{"content":"// SPDX-License-Identifier: Unlicense\npragma solidity >=0.8.4;\n\n/// @notice Emitted when the result overflows uint256.\nerror PRBMath__MulDivFixedPointOverflow(uint256 prod1);\n\n/// @notice Emitted when the result overflows uint256.\nerror PRBMath__MulDivOverflow(uint256 prod1, uint256 denominator);\n\n/// @notice Emitted when one of the inputs is type(int256).min.\nerror PRBMath__MulDivSignedInputTooSmall();\n\n/// @notice Emitted when the intermediary absolute result overflows int256.\nerror PRBMath__MulDivSignedOverflow(uint256 rAbs);\n\n/// @notice Emitted when the input is MIN_SD59x18.\nerror PRBMathSD59x18__AbsInputTooSmall();\n\n/// @notice Emitted when ceiling a number overflows SD59x18.\nerror PRBMathSD59x18__CeilOverflow(int256 x);\n\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\nerror PRBMathSD59x18__DivInputTooSmall();\n\n/// @notice Emitted when one of the intermediary unsigned results overflows SD59x18.\nerror PRBMathSD59x18__DivOverflow(uint256 rAbs);\n\n/// @notice Emitted when the input is greater than 133.084258667509499441.\nerror PRBMathSD59x18__ExpInputTooBig(int256 x);\n\n/// @notice Emitted when the input is greater than 192.\nerror PRBMathSD59x18__Exp2InputTooBig(int256 x);\n\n/// @notice Emitted when flooring a number underflows SD59x18.\nerror PRBMathSD59x18__FloorUnderflow(int256 x);\n\n/// @notice Emitted when converting a basic integer to the fixed-point format overflows SD59x18.\nerror PRBMathSD59x18__FromIntOverflow(int256 x);\n\n/// @notice Emitted when converting a basic integer to the fixed-point format underflows SD59x18.\nerror PRBMathSD59x18__FromIntUnderflow(int256 x);\n\n/// @notice Emitted when the product of the inputs is negative.\nerror PRBMathSD59x18__GmNegativeProduct(int256 x, int256 y);\n\n/// @notice Emitted when multiplying the inputs overflows SD59x18.\nerror PRBMathSD59x18__GmOverflow(int256 x, int256 y);\n\n/// @notice Emitted when the input is less than or equal to zero.\nerror PRBMathSD59x18__LogInputTooSmall(int256 x);\n\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\nerror PRBMathSD59x18__MulInputTooSmall();\n\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\nerror PRBMathSD59x18__MulOverflow(uint256 rAbs);\n\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\nerror PRBMathSD59x18__PowuOverflow(uint256 rAbs);\n\n/// @notice Emitted when the input is negative.\nerror PRBMathSD59x18__SqrtNegativeInput(int256 x);\n\n/// @notice Emitted when the calculating the square root overflows SD59x18.\nerror PRBMathSD59x18__SqrtOverflow(int256 x);\n\n/// @notice Emitted when addition overflows UD60x18.\nerror PRBMathUD60x18__AddOverflow(uint256 x, uint256 y);\n\n/// @notice Emitted when ceiling a number overflows UD60x18.\nerror PRBMathUD60x18__CeilOverflow(uint256 x);\n\n/// @notice Emitted when the input is greater than 133.084258667509499441.\nerror PRBMathUD60x18__ExpInputTooBig(uint256 x);\n\n/// @notice Emitted when the input is greater than 192.\nerror PRBMathUD60x18__Exp2InputTooBig(uint256 x);\n\n/// @notice Emitted when converting a basic integer to the fixed-point format format overflows UD60x18.\nerror PRBMathUD60x18__FromUintOverflow(uint256 x);\n\n/// @notice Emitted when multiplying the inputs overflows UD60x18.\nerror PRBMathUD60x18__GmOverflow(uint256 x, uint256 y);\n\n/// @notice Emitted when the input is less than 1.\nerror PRBMathUD60x18__LogInputTooSmall(uint256 x);\n\n/// @notice Emitted when the calculating the square root overflows UD60x18.\nerror PRBMathUD60x18__SqrtOverflow(uint256 x);\n\n/// @notice Emitted when subtraction underflows UD60x18.\nerror PRBMathUD60x18__SubUnderflow(uint256 x, uint256 y);\n\n/// @dev Common mathematical functions used in both PRBMathSD59x18 and PRBMathUD60x18. Note that this shared library\n/// does not always assume the signed 59.18-decimal fixed-point or the unsigned 60.18-decimal fixed-point\n/// representation. When it does not, it is explicitly mentioned in the NatSpec documentation.\nlibrary PRBMath {\n    /// STRUCTS ///\n\n    struct SD59x18 {\n        int256 value;\n    }\n\n    struct UD60x18 {\n        uint256 value;\n    }\n\n    /// STORAGE ///\n\n    /// @dev How many trailing decimals can be represented.\n    uint256 internal constant SCALE = 1e18;\n\n    /// @dev Largest power of two divisor of SCALE.\n    uint256 internal constant SCALE_LPOTD = 262144;\n\n    /// @dev SCALE inverted mod 2^256.\n    uint256 internal constant SCALE_INVERSE =\n        78156646155174841979727994598816262306175212592076161876661_508869554232690281;\n\n    /// FUNCTIONS ///\n\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\n    /// @dev Has to use 192.64-bit fixed-point numbers.\n    /// See https://ethereum.stackexchange.com/a/96594/24693.\n    /// @param x The exponent as an unsigned 192.64-bit fixed-point number.\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\n    function exp2(uint256 x) internal pure returns (uint256 result) {\n        unchecked {\n            // Start from 0.5 in the 192.64-bit fixed-point format.\n            result = 0x800000000000000000000000000000000000000000000000;\n\n            // Multiply the result by root(2, 2^-i) when the bit at position i is 1. None of the intermediary results overflows\n            // because the initial result is 2^191 and all magic factors are less than 2^65.\n            if (x & 0x8000000000000000 > 0) {\n                result = (result * 0x16A09E667F3BCC909) >> 64;\n            }\n            if (x & 0x4000000000000000 > 0) {\n                result = (result * 0x1306FE0A31B7152DF) >> 64;\n            }\n            if (x & 0x2000000000000000 > 0) {\n                result = (result * 0x1172B83C7D517ADCE) >> 64;\n            }\n            if (x & 0x1000000000000000 > 0) {\n                result = (result * 0x10B5586CF9890F62A) >> 64;\n            }\n            if (x & 0x800000000000000 > 0) {\n                result = (result * 0x1059B0D31585743AE) >> 64;\n            }\n            if (x & 0x400000000000000 > 0) {\n                result = (result * 0x102C9A3E778060EE7) >> 64;\n            }\n            if (x & 0x200000000000000 > 0) {\n                result = (result * 0x10163DA9FB33356D8) >> 64;\n            }\n            if (x & 0x100000000000000 > 0) {\n                result = (result * 0x100B1AFA5ABCBED61) >> 64;\n            }\n            if (x & 0x80000000000000 > 0) {\n                result = (result * 0x10058C86DA1C09EA2) >> 64;\n            }\n            if (x & 0x40000000000000 > 0) {\n                result = (result * 0x1002C605E2E8CEC50) >> 64;\n            }\n            if (x & 0x20000000000000 > 0) {\n                result = (result * 0x100162F3904051FA1) >> 64;\n            }\n            if (x & 0x10000000000000 > 0) {\n                result = (result * 0x1000B175EFFDC76BA) >> 64;\n            }\n            if (x & 0x8000000000000 > 0) {\n                result = (result * 0x100058BA01FB9F96D) >> 64;\n            }\n            if (x & 0x4000000000000 > 0) {\n                result = (result * 0x10002C5CC37DA9492) >> 64;\n            }\n            if (x & 0x2000000000000 > 0) {\n                result = (result * 0x1000162E525EE0547) >> 64;\n            }\n            if (x & 0x1000000000000 > 0) {\n                result = (result * 0x10000B17255775C04) >> 64;\n            }\n            if (x & 0x800000000000 > 0) {\n                result = (result * 0x1000058B91B5BC9AE) >> 64;\n            }\n            if (x & 0x400000000000 > 0) {\n                result = (result * 0x100002C5C89D5EC6D) >> 64;\n            }\n            if (x & 0x200000000000 > 0) {\n                result = (result * 0x10000162E43F4F831) >> 64;\n            }\n            if (x & 0x100000000000 > 0) {\n                result = (result * 0x100000B1721BCFC9A) >> 64;\n            }\n            if (x & 0x80000000000 > 0) {\n                result = (result * 0x10000058B90CF1E6E) >> 64;\n            }\n            if (x & 0x40000000000 > 0) {\n                result = (result * 0x1000002C5C863B73F) >> 64;\n            }\n            if (x & 0x20000000000 > 0) {\n                result = (result * 0x100000162E430E5A2) >> 64;\n            }\n            if (x & 0x10000000000 > 0) {\n                result = (result * 0x1000000B172183551) >> 64;\n            }\n            if (x & 0x8000000000 > 0) {\n                result = (result * 0x100000058B90C0B49) >> 64;\n            }\n            if (x & 0x4000000000 > 0) {\n                result = (result * 0x10000002C5C8601CC) >> 64;\n            }\n            if (x & 0x2000000000 > 0) {\n                result = (result * 0x1000000162E42FFF0) >> 64;\n            }\n            if (x & 0x1000000000 > 0) {\n                result = (result * 0x10000000B17217FBB) >> 64;\n            }\n            if (x & 0x800000000 > 0) {\n                result = (result * 0x1000000058B90BFCE) >> 64;\n            }\n            if (x & 0x400000000 > 0) {\n                result = (result * 0x100000002C5C85FE3) >> 64;\n            }\n            if (x & 0x200000000 > 0) {\n                result = (result * 0x10000000162E42FF1) >> 64;\n            }\n            if (x & 0x100000000 > 0) {\n                result = (result * 0x100000000B17217F8) >> 64;\n            }\n            if (x & 0x80000000 > 0) {\n                result = (result * 0x10000000058B90BFC) >> 64;\n            }\n            if (x & 0x40000000 > 0) {\n                result = (result * 0x1000000002C5C85FE) >> 64;\n            }\n            if (x & 0x20000000 > 0) {\n                result = (result * 0x100000000162E42FF) >> 64;\n            }\n            if (x & 0x10000000 > 0) {\n                result = (result * 0x1000000000B17217F) >> 64;\n            }\n            if (x & 0x8000000 > 0) {\n                result = (result * 0x100000000058B90C0) >> 64;\n            }\n            if (x & 0x4000000 > 0) {\n                result = (result * 0x10000000002C5C860) >> 64;\n            }\n            if (x & 0x2000000 > 0) {\n                result = (result * 0x1000000000162E430) >> 64;\n            }\n            if (x & 0x1000000 > 0) {\n                result = (result * 0x10000000000B17218) >> 64;\n            }\n            if (x & 0x800000 > 0) {\n                result = (result * 0x1000000000058B90C) >> 64;\n            }\n            if (x & 0x400000 > 0) {\n                result = (result * 0x100000000002C5C86) >> 64;\n            }\n            if (x & 0x200000 > 0) {\n                result = (result * 0x10000000000162E43) >> 64;\n            }\n            if (x & 0x100000 > 0) {\n                result = (result * 0x100000000000B1721) >> 64;\n            }\n            if (x & 0x80000 > 0) {\n                result = (result * 0x10000000000058B91) >> 64;\n            }\n            if (x & 0x40000 > 0) {\n                result = (result * 0x1000000000002C5C8) >> 64;\n            }\n            if (x & 0x20000 > 0) {\n                result = (result * 0x100000000000162E4) >> 64;\n            }\n            if (x & 0x10000 > 0) {\n                result = (result * 0x1000000000000B172) >> 64;\n            }\n            if (x & 0x8000 > 0) {\n                result = (result * 0x100000000000058B9) >> 64;\n            }\n            if (x & 0x4000 > 0) {\n                result = (result * 0x10000000000002C5D) >> 64;\n            }\n            if (x & 0x2000 > 0) {\n                result = (result * 0x1000000000000162E) >> 64;\n            }\n            if (x & 0x1000 > 0) {\n                result = (result * 0x10000000000000B17) >> 64;\n            }\n            if (x & 0x800 > 0) {\n                result = (result * 0x1000000000000058C) >> 64;\n            }\n            if (x & 0x400 > 0) {\n                result = (result * 0x100000000000002C6) >> 64;\n            }\n            if (x & 0x200 > 0) {\n                result = (result * 0x10000000000000163) >> 64;\n            }\n            if (x & 0x100 > 0) {\n                result = (result * 0x100000000000000B1) >> 64;\n            }\n            if (x & 0x80 > 0) {\n                result = (result * 0x10000000000000059) >> 64;\n            }\n            if (x & 0x40 > 0) {\n                result = (result * 0x1000000000000002C) >> 64;\n            }\n            if (x & 0x20 > 0) {\n                result = (result * 0x10000000000000016) >> 64;\n            }\n            if (x & 0x10 > 0) {\n                result = (result * 0x1000000000000000B) >> 64;\n            }\n            if (x & 0x8 > 0) {\n                result = (result * 0x10000000000000006) >> 64;\n            }\n            if (x & 0x4 > 0) {\n                result = (result * 0x10000000000000003) >> 64;\n            }\n            if (x & 0x2 > 0) {\n                result = (result * 0x10000000000000001) >> 64;\n            }\n            if (x & 0x1 > 0) {\n                result = (result * 0x10000000000000001) >> 64;\n            }\n\n            // We're doing two things at the same time:\n            //\n            //   1. Multiply the result by 2^n + 1, where \"2^n\" is the integer part and the one is added to account for\n            //      the fact that we initially set the result to 0.5. This is accomplished by subtracting from 191\n            //      rather than 192.\n            //   2. Convert the result to the unsigned 60.18-decimal fixed-point format.\n            //\n            // This works because 2^(191-ip) = 2^ip / 2^191, where \"ip\" is the integer part \"2^n\".\n            result *= SCALE;\n            result >>= (191 - (x >> 64));\n        }\n    }\n\n    /// @notice Finds the zero-based index of the first one in the binary representation of x.\n    /// @dev See the note on msb in the \"Find First Set\" Wikipedia article https://en.wikipedia.org/wiki/Find_first_set\n    /// @param x The uint256 number for which to find the index of the most significant bit.\n    /// @return msb The index of the most significant bit as an uint256.\n    function mostSignificantBit(uint256 x) internal pure returns (uint256 msb) {\n        if (x >= 2**128) {\n            x >>= 128;\n            msb += 128;\n        }\n        if (x >= 2**64) {\n            x >>= 64;\n            msb += 64;\n        }\n        if (x >= 2**32) {\n            x >>= 32;\n            msb += 32;\n        }\n        if (x >= 2**16) {\n            x >>= 16;\n            msb += 16;\n        }\n        if (x >= 2**8) {\n            x >>= 8;\n            msb += 8;\n        }\n        if (x >= 2**4) {\n            x >>= 4;\n            msb += 4;\n        }\n        if (x >= 2**2) {\n            x >>= 2;\n            msb += 2;\n        }\n        if (x >= 2**1) {\n            // No need to shift x any more.\n            msb += 1;\n        }\n    }\n\n    /// @notice Calculates floor(x*y÷denominator) with full precision.\n    ///\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv.\n    ///\n    /// Requirements:\n    /// - The denominator cannot be zero.\n    /// - The result must fit within uint256.\n    ///\n    /// Caveats:\n    /// - This function does not work with fixed-point numbers.\n    ///\n    /// @param x The multiplicand as an uint256.\n    /// @param y The multiplier as an uint256.\n    /// @param denominator The divisor as an uint256.\n    /// @return result The result as an uint256.\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n        // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = prod1 * 2^256 + prod0.\n        uint256 prod0; // Least significant 256 bits of the product\n        uint256 prod1; // Most significant 256 bits of the product\n        assembly {\n            let mm := mulmod(x, y, not(0))\n            prod0 := mul(x, y)\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n        }\n\n        // Handle non-overflow cases, 256 by 256 division.\n        if (prod1 == 0) {\n            unchecked {\n                result = prod0 / denominator;\n            }\n            return result;\n        }\n\n        // Make sure the result is less than 2^256. Also prevents denominator == 0.\n        if (prod1 >= denominator) {\n            revert PRBMath__MulDivOverflow(prod1, denominator);\n        }\n\n        ///////////////////////////////////////////////\n        // 512 by 256 division.\n        ///////////////////////////////////////////////\n\n        // Make division exact by subtracting the remainder from [prod1 prod0].\n        uint256 remainder;\n        assembly {\n            // Compute remainder using mulmod.\n            remainder := mulmod(x, y, denominator)\n\n            // Subtract 256 bit number from 512 bit number.\n            prod1 := sub(prod1, gt(remainder, prod0))\n            prod0 := sub(prod0, remainder)\n        }\n\n        // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n        // See https://cs.stackexchange.com/q/138556/92363.\n        unchecked {\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 lpotdod = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by lpotdod.\n                denominator := div(denominator, lpotdod)\n\n                // Divide [prod1 prod0] by lpotdod.\n                prod0 := div(prod0, lpotdod)\n\n                // Flip lpotdod such that it is 2^256 / lpotdod. If lpotdod is zero, then it becomes one.\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * lpotdod;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /// @notice Calculates floor(x*y÷1e18) with full precision.\n    ///\n    /// @dev Variant of \"mulDiv\" with constant folding, i.e. in which the denominator is always 1e18. Before returning the\n    /// final result, we add 1 if (x * y) % SCALE >= HALF_SCALE. Without this, 6.6e-19 would be truncated to 0 instead of\n    /// being rounded to 1e-18.  See \"Listing 6\" and text above it at https://accu.org/index.php/journals/1717.\n    ///\n    /// Requirements:\n    /// - The result must fit within uint256.\n    ///\n    /// Caveats:\n    /// - The body is purposely left uncommented; see the NatSpec comments in \"PRBMath.mulDiv\" to understand how this works.\n    /// - It is assumed that the result can never be type(uint256).max when x and y solve the following two equations:\n    ///     1. x * y = type(uint256).max * SCALE\n    ///     2. (x * y) % SCALE >= SCALE / 2\n    ///\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\n    function mulDivFixedPoint(uint256 x, uint256 y) internal pure returns (uint256 result) {\n        uint256 prod0;\n        uint256 prod1;\n        assembly {\n            let mm := mulmod(x, y, not(0))\n            prod0 := mul(x, y)\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n        }\n\n        if (prod1 >= SCALE) {\n            revert PRBMath__MulDivFixedPointOverflow(prod1);\n        }\n\n        uint256 remainder;\n        uint256 roundUpUnit;\n        assembly {\n            remainder := mulmod(x, y, SCALE)\n            roundUpUnit := gt(remainder, 499999999999999999)\n        }\n\n        if (prod1 == 0) {\n            unchecked {\n                result = (prod0 / SCALE) + roundUpUnit;\n                return result;\n            }\n        }\n\n        assembly {\n            result := add(\n                mul(\n                    or(\n                        div(sub(prod0, remainder), SCALE_LPOTD),\n                        mul(sub(prod1, gt(remainder, prod0)), add(div(sub(0, SCALE_LPOTD), SCALE_LPOTD), 1))\n                    ),\n                    SCALE_INVERSE\n                ),\n                roundUpUnit\n            )\n        }\n    }\n\n    /// @notice Calculates floor(x*y÷denominator) with full precision.\n    ///\n    /// @dev An extension of \"mulDiv\" for signed numbers. Works by computing the signs and the absolute values separately.\n    ///\n    /// Requirements:\n    /// - None of the inputs can be type(int256).min.\n    /// - The result must fit within int256.\n    ///\n    /// @param x The multiplicand as an int256.\n    /// @param y The multiplier as an int256.\n    /// @param denominator The divisor as an int256.\n    /// @return result The result as an int256.\n    function mulDivSigned(\n        int256 x,\n        int256 y,\n        int256 denominator\n    ) internal pure returns (int256 result) {\n        if (x == type(int256).min || y == type(int256).min || denominator == type(int256).min) {\n            revert PRBMath__MulDivSignedInputTooSmall();\n        }\n\n        // Get hold of the absolute values of x, y and the denominator.\n        uint256 ax;\n        uint256 ay;\n        uint256 ad;\n        unchecked {\n            ax = x < 0 ? uint256(-x) : uint256(x);\n            ay = y < 0 ? uint256(-y) : uint256(y);\n            ad = denominator < 0 ? uint256(-denominator) : uint256(denominator);\n        }\n\n        // Compute the absolute value of (x*y)÷denominator. The result must fit within int256.\n        uint256 rAbs = mulDiv(ax, ay, ad);\n        if (rAbs > uint256(type(int256).max)) {\n            revert PRBMath__MulDivSignedOverflow(rAbs);\n        }\n\n        // Get the signs of x, y and the denominator.\n        uint256 sx;\n        uint256 sy;\n        uint256 sd;\n        assembly {\n            sx := sgt(x, sub(0, 1))\n            sy := sgt(y, sub(0, 1))\n            sd := sgt(denominator, sub(0, 1))\n        }\n\n        // XOR over sx, sy and sd. This is checking whether there are one or three negative signs in the inputs.\n        // If yes, the result should be negative.\n        result = sx ^ sy ^ sd == 0 ? -int256(rAbs) : int256(rAbs);\n    }\n\n    /// @notice Calculates the square root of x, rounding down.\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\n    ///\n    /// Caveats:\n    /// - This function does not work with fixed-point numbers.\n    ///\n    /// @param x The uint256 number for which to calculate the square root.\n    /// @return result The result as an uint256.\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\n        if (x == 0) {\n            return 0;\n        }\n\n        // Set the initial guess to the least power of two that is greater than or equal to sqrt(x).\n        uint256 xAux = uint256(x);\n        result = 1;\n        if (xAux >= 0x100000000000000000000000000000000) {\n            xAux >>= 128;\n            result <<= 64;\n        }\n        if (xAux >= 0x10000000000000000) {\n            xAux >>= 64;\n            result <<= 32;\n        }\n        if (xAux >= 0x100000000) {\n            xAux >>= 32;\n            result <<= 16;\n        }\n        if (xAux >= 0x10000) {\n            xAux >>= 16;\n            result <<= 8;\n        }\n        if (xAux >= 0x100) {\n            xAux >>= 8;\n            result <<= 4;\n        }\n        if (xAux >= 0x10) {\n            xAux >>= 4;\n            result <<= 2;\n        }\n        if (xAux >= 0x8) {\n            result <<= 1;\n        }\n\n        // The operations can never overflow because the result is max 2^127 when it enters this block.\n        unchecked {\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1; // Seven iterations should be enough\n            uint256 roundedDownResult = x / result;\n            return result >= roundedDownResult ? roundedDownResult : result;\n        }\n    }\n}\n"},"prb-math/contracts/PRBMathUD60x18.sol":{"content":"// SPDX-License-Identifier: Unlicense\npragma solidity >=0.8.4;\n\nimport \"./PRBMath.sol\";\n\n/// @title PRBMathUD60x18\n/// @author Paul Razvan Berg\n/// @notice Smart contract library for advanced fixed-point math that works with uint256 numbers considered to have 18\n/// trailing decimals. We call this number representation unsigned 60.18-decimal fixed-point, since there can be up to 60\n/// digits in the integer part and up to 18 decimals in the fractional part. The numbers are bound by the minimum and the\n/// maximum values permitted by the Solidity type uint256.\nlibrary PRBMathUD60x18 {\n    /// @dev Half the SCALE number.\n    uint256 internal constant HALF_SCALE = 5e17;\n\n    /// @dev log2(e) as an unsigned 60.18-decimal fixed-point number.\n    uint256 internal constant LOG2_E = 1_442695040888963407;\n\n    /// @dev The maximum value an unsigned 60.18-decimal fixed-point number can have.\n    uint256 internal constant MAX_UD60x18 =\n        115792089237316195423570985008687907853269984665640564039457_584007913129639935;\n\n    /// @dev The maximum whole value an unsigned 60.18-decimal fixed-point number can have.\n    uint256 internal constant MAX_WHOLE_UD60x18 =\n        115792089237316195423570985008687907853269984665640564039457_000000000000000000;\n\n    /// @dev How many trailing decimals can be represented.\n    uint256 internal constant SCALE = 1e18;\n\n    /// @notice Calculates the arithmetic average of x and y, rounding down.\n    /// @param x The first operand as an unsigned 60.18-decimal fixed-point number.\n    /// @param y The second operand as an unsigned 60.18-decimal fixed-point number.\n    /// @return result The arithmetic average as an unsigned 60.18-decimal fixed-point number.\n    function avg(uint256 x, uint256 y) internal pure returns (uint256 result) {\n        // The operations can never overflow.\n        unchecked {\n            // The last operand checks if both x and y are odd and if that is the case, we add 1 to the result. We need\n            // to do this because if both numbers are odd, the 0.5 remainder gets truncated twice.\n            result = (x >> 1) + (y >> 1) + (x & y & 1);\n        }\n    }\n\n    /// @notice Yields the least unsigned 60.18 decimal fixed-point number greater than or equal to x.\n    ///\n    /// @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\n    /// See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\n    ///\n    /// Requirements:\n    /// - x must be less than or equal to MAX_WHOLE_UD60x18.\n    ///\n    /// @param x The unsigned 60.18-decimal fixed-point number to ceil.\n    /// @param result The least integer greater than or equal to x, as an unsigned 60.18-decimal fixed-point number.\n    function ceil(uint256 x) internal pure returns (uint256 result) {\n        if (x > MAX_WHOLE_UD60x18) {\n            revert PRBMathUD60x18__CeilOverflow(x);\n        }\n        assembly {\n            // Equivalent to \"x % SCALE\" but faster.\n            let remainder := mod(x, SCALE)\n\n            // Equivalent to \"SCALE - remainder\" but faster.\n            let delta := sub(SCALE, remainder)\n\n            // Equivalent to \"x + delta * (remainder > 0 ? 1 : 0)\" but faster.\n            result := add(x, mul(delta, gt(remainder, 0)))\n        }\n    }\n\n    /// @notice Divides two unsigned 60.18-decimal fixed-point numbers, returning a new unsigned 60.18-decimal fixed-point number.\n    ///\n    /// @dev Uses mulDiv to enable overflow-safe multiplication and division.\n    ///\n    /// Requirements:\n    /// - The denominator cannot be zero.\n    ///\n    /// @param x The numerator as an unsigned 60.18-decimal fixed-point number.\n    /// @param y The denominator as an unsigned 60.18-decimal fixed-point number.\n    /// @param result The quotient as an unsigned 60.18-decimal fixed-point number.\n    function div(uint256 x, uint256 y) internal pure returns (uint256 result) {\n        result = PRBMath.mulDiv(x, SCALE, y);\n    }\n\n    /// @notice Returns Euler's number as an unsigned 60.18-decimal fixed-point number.\n    /// @dev See https://en.wikipedia.org/wiki/E_(mathematical_constant).\n    function e() internal pure returns (uint256 result) {\n        result = 2_718281828459045235;\n    }\n\n    /// @notice Calculates the natural exponent of x.\n    ///\n    /// @dev Based on the insight that e^x = 2^(x * log2(e)).\n    ///\n    /// Requirements:\n    /// - All from \"log2\".\n    /// - x must be less than 133.084258667509499441.\n    ///\n    /// @param x The exponent as an unsigned 60.18-decimal fixed-point number.\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\n    function exp(uint256 x) internal pure returns (uint256 result) {\n        // Without this check, the value passed to \"exp2\" would be greater than 192.\n        if (x >= 133_084258667509499441) {\n            revert PRBMathUD60x18__ExpInputTooBig(x);\n        }\n\n        // Do the fixed-point multiplication inline to save gas.\n        unchecked {\n            uint256 doubleScaleProduct = x * LOG2_E;\n            result = exp2((doubleScaleProduct + HALF_SCALE) / SCALE);\n        }\n    }\n\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\n    ///\n    /// @dev See https://ethereum.stackexchange.com/q/79903/24693.\n    ///\n    /// Requirements:\n    /// - x must be 192 or less.\n    /// - The result must fit within MAX_UD60x18.\n    ///\n    /// @param x The exponent as an unsigned 60.18-decimal fixed-point number.\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\n    function exp2(uint256 x) internal pure returns (uint256 result) {\n        // 2^192 doesn't fit within the 192.64-bit format used internally in this function.\n        if (x >= 192e18) {\n            revert PRBMathUD60x18__Exp2InputTooBig(x);\n        }\n\n        unchecked {\n            // Convert x to the 192.64-bit fixed-point format.\n            uint256 x192x64 = (x << 64) / SCALE;\n\n            // Pass x to the PRBMath.exp2 function, which uses the 192.64-bit fixed-point number representation.\n            result = PRBMath.exp2(x192x64);\n        }\n    }\n\n    /// @notice Yields the greatest unsigned 60.18 decimal fixed-point number less than or equal to x.\n    /// @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\n    /// See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\n    /// @param x The unsigned 60.18-decimal fixed-point number to floor.\n    /// @param result The greatest integer less than or equal to x, as an unsigned 60.18-decimal fixed-point number.\n    function floor(uint256 x) internal pure returns (uint256 result) {\n        assembly {\n            // Equivalent to \"x % SCALE\" but faster.\n            let remainder := mod(x, SCALE)\n\n            // Equivalent to \"x - remainder * (remainder > 0 ? 1 : 0)\" but faster.\n            result := sub(x, mul(remainder, gt(remainder, 0)))\n        }\n    }\n\n    /// @notice Yields the excess beyond the floor of x.\n    /// @dev Based on the odd function definition https://en.wikipedia.org/wiki/Fractional_part.\n    /// @param x The unsigned 60.18-decimal fixed-point number to get the fractional part of.\n    /// @param result The fractional part of x as an unsigned 60.18-decimal fixed-point number.\n    function frac(uint256 x) internal pure returns (uint256 result) {\n        assembly {\n            result := mod(x, SCALE)\n        }\n    }\n\n    /// @notice Converts a number from basic integer form to unsigned 60.18-decimal fixed-point representation.\n    ///\n    /// @dev Requirements:\n    /// - x must be less than or equal to MAX_UD60x18 divided by SCALE.\n    ///\n    /// @param x The basic integer to convert.\n    /// @param result The same number in unsigned 60.18-decimal fixed-point representation.\n    function fromUint(uint256 x) internal pure returns (uint256 result) {\n        unchecked {\n            if (x > MAX_UD60x18 / SCALE) {\n                revert PRBMathUD60x18__FromUintOverflow(x);\n            }\n            result = x * SCALE;\n        }\n    }\n\n    /// @notice Calculates geometric mean of x and y, i.e. sqrt(x * y), rounding down.\n    ///\n    /// @dev Requirements:\n    /// - x * y must fit within MAX_UD60x18, lest it overflows.\n    ///\n    /// @param x The first operand as an unsigned 60.18-decimal fixed-point number.\n    /// @param y The second operand as an unsigned 60.18-decimal fixed-point number.\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\n    function gm(uint256 x, uint256 y) internal pure returns (uint256 result) {\n        if (x == 0) {\n            return 0;\n        }\n\n        unchecked {\n            // Checking for overflow this way is faster than letting Solidity do it.\n            uint256 xy = x * y;\n            if (xy / x != y) {\n                revert PRBMathUD60x18__GmOverflow(x, y);\n            }\n\n            // We don't need to multiply by the SCALE here because the x*y product had already picked up a factor of SCALE\n            // during multiplication. See the comments within the \"sqrt\" function.\n            result = PRBMath.sqrt(xy);\n        }\n    }\n\n    /// @notice Calculates 1 / x, rounding toward zero.\n    ///\n    /// @dev Requirements:\n    /// - x cannot be zero.\n    ///\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the inverse.\n    /// @return result The inverse as an unsigned 60.18-decimal fixed-point number.\n    function inv(uint256 x) internal pure returns (uint256 result) {\n        unchecked {\n            // 1e36 is SCALE * SCALE.\n            result = 1e36 / x;\n        }\n    }\n\n    /// @notice Calculates the natural logarithm of x.\n    ///\n    /// @dev Based on the insight that ln(x) = log2(x) / log2(e).\n    ///\n    /// Requirements:\n    /// - All from \"log2\".\n    ///\n    /// Caveats:\n    /// - All from \"log2\".\n    /// - This doesn't return exactly 1 for 2.718281828459045235, for that we would need more fine-grained precision.\n    ///\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the natural logarithm.\n    /// @return result The natural logarithm as an unsigned 60.18-decimal fixed-point number.\n    function ln(uint256 x) internal pure returns (uint256 result) {\n        // Do the fixed-point multiplication inline to save gas. This is overflow-safe because the maximum value that log2(x)\n        // can return is 196205294292027477728.\n        unchecked {\n            result = (log2(x) * SCALE) / LOG2_E;\n        }\n    }\n\n    /// @notice Calculates the common logarithm of x.\n    ///\n    /// @dev First checks if x is an exact power of ten and it stops if yes. If it's not, calculates the common\n    /// logarithm based on the insight that log10(x) = log2(x) / log2(10).\n    ///\n    /// Requirements:\n    /// - All from \"log2\".\n    ///\n    /// Caveats:\n    /// - All from \"log2\".\n    ///\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the common logarithm.\n    /// @return result The common logarithm as an unsigned 60.18-decimal fixed-point number.\n    function log10(uint256 x) internal pure returns (uint256 result) {\n        if (x < SCALE) {\n            revert PRBMathUD60x18__LogInputTooSmall(x);\n        }\n\n        // Note that the \"mul\" in this block is the assembly multiplication operation, not the \"mul\" function defined\n        // in this contract.\n        // prettier-ignore\n        assembly {\n            switch x\n            case 1 { result := mul(SCALE, sub(0, 18)) }\n            case 10 { result := mul(SCALE, sub(1, 18)) }\n            case 100 { result := mul(SCALE, sub(2, 18)) }\n            case 1000 { result := mul(SCALE, sub(3, 18)) }\n            case 10000 { result := mul(SCALE, sub(4, 18)) }\n            case 100000 { result := mul(SCALE, sub(5, 18)) }\n            case 1000000 { result := mul(SCALE, sub(6, 18)) }\n            case 10000000 { result := mul(SCALE, sub(7, 18)) }\n            case 100000000 { result := mul(SCALE, sub(8, 18)) }\n            case 1000000000 { result := mul(SCALE, sub(9, 18)) }\n            case 10000000000 { result := mul(SCALE, sub(10, 18)) }\n            case 100000000000 { result := mul(SCALE, sub(11, 18)) }\n            case 1000000000000 { result := mul(SCALE, sub(12, 18)) }\n            case 10000000000000 { result := mul(SCALE, sub(13, 18)) }\n            case 100000000000000 { result := mul(SCALE, sub(14, 18)) }\n            case 1000000000000000 { result := mul(SCALE, sub(15, 18)) }\n            case 10000000000000000 { result := mul(SCALE, sub(16, 18)) }\n            case 100000000000000000 { result := mul(SCALE, sub(17, 18)) }\n            case 1000000000000000000 { result := 0 }\n            case 10000000000000000000 { result := SCALE }\n            case 100000000000000000000 { result := mul(SCALE, 2) }\n            case 1000000000000000000000 { result := mul(SCALE, 3) }\n            case 10000000000000000000000 { result := mul(SCALE, 4) }\n            case 100000000000000000000000 { result := mul(SCALE, 5) }\n            case 1000000000000000000000000 { result := mul(SCALE, 6) }\n            case 10000000000000000000000000 { result := mul(SCALE, 7) }\n            case 100000000000000000000000000 { result := mul(SCALE, 8) }\n            case 1000000000000000000000000000 { result := mul(SCALE, 9) }\n            case 10000000000000000000000000000 { result := mul(SCALE, 10) }\n            case 100000000000000000000000000000 { result := mul(SCALE, 11) }\n            case 1000000000000000000000000000000 { result := mul(SCALE, 12) }\n            case 10000000000000000000000000000000 { result := mul(SCALE, 13) }\n            case 100000000000000000000000000000000 { result := mul(SCALE, 14) }\n            case 1000000000000000000000000000000000 { result := mul(SCALE, 15) }\n            case 10000000000000000000000000000000000 { result := mul(SCALE, 16) }\n            case 100000000000000000000000000000000000 { result := mul(SCALE, 17) }\n            case 1000000000000000000000000000000000000 { result := mul(SCALE, 18) }\n            case 10000000000000000000000000000000000000 { result := mul(SCALE, 19) }\n            case 100000000000000000000000000000000000000 { result := mul(SCALE, 20) }\n            case 1000000000000000000000000000000000000000 { result := mul(SCALE, 21) }\n            case 10000000000000000000000000000000000000000 { result := mul(SCALE, 22) }\n            case 100000000000000000000000000000000000000000 { result := mul(SCALE, 23) }\n            case 1000000000000000000000000000000000000000000 { result := mul(SCALE, 24) }\n            case 10000000000000000000000000000000000000000000 { result := mul(SCALE, 25) }\n            case 100000000000000000000000000000000000000000000 { result := mul(SCALE, 26) }\n            case 1000000000000000000000000000000000000000000000 { result := mul(SCALE, 27) }\n            case 10000000000000000000000000000000000000000000000 { result := mul(SCALE, 28) }\n            case 100000000000000000000000000000000000000000000000 { result := mul(SCALE, 29) }\n            case 1000000000000000000000000000000000000000000000000 { result := mul(SCALE, 30) }\n            case 10000000000000000000000000000000000000000000000000 { result := mul(SCALE, 31) }\n            case 100000000000000000000000000000000000000000000000000 { result := mul(SCALE, 32) }\n            case 1000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 33) }\n            case 10000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 34) }\n            case 100000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 35) }\n            case 1000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 36) }\n            case 10000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 37) }\n            case 100000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 38) }\n            case 1000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 39) }\n            case 10000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 40) }\n            case 100000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 41) }\n            case 1000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 42) }\n            case 10000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 43) }\n            case 100000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 44) }\n            case 1000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 45) }\n            case 10000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 46) }\n            case 100000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 47) }\n            case 1000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 48) }\n            case 10000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 49) }\n            case 100000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 50) }\n            case 1000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 51) }\n            case 10000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 52) }\n            case 100000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 53) }\n            case 1000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 54) }\n            case 10000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 55) }\n            case 100000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 56) }\n            case 1000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 57) }\n            case 10000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 58) }\n            case 100000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 59) }\n            default {\n                result := MAX_UD60x18\n            }\n        }\n\n        if (result == MAX_UD60x18) {\n            // Do the fixed-point division inline to save gas. The denominator is log2(10).\n            unchecked {\n                result = (log2(x) * SCALE) / 3_321928094887362347;\n            }\n        }\n    }\n\n    /// @notice Calculates the binary logarithm of x.\n    ///\n    /// @dev Based on the iterative approximation algorithm.\n    /// https://en.wikipedia.org/wiki/Binary_logarithm#Iterative_approximation\n    ///\n    /// Requirements:\n    /// - x must be greater than or equal to SCALE, otherwise the result would be negative.\n    ///\n    /// Caveats:\n    /// - The results are nor perfectly accurate to the last decimal, due to the lossy precision of the iterative approximation.\n    ///\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the binary logarithm.\n    /// @return result The binary logarithm as an unsigned 60.18-decimal fixed-point number.\n    function log2(uint256 x) internal pure returns (uint256 result) {\n        if (x < SCALE) {\n            revert PRBMathUD60x18__LogInputTooSmall(x);\n        }\n        unchecked {\n            // Calculate the integer part of the logarithm and add it to the result and finally calculate y = x * 2^(-n).\n            uint256 n = PRBMath.mostSignificantBit(x / SCALE);\n\n            // The integer part of the logarithm as an unsigned 60.18-decimal fixed-point number. The operation can't overflow\n            // because n is maximum 255 and SCALE is 1e18.\n            result = n * SCALE;\n\n            // This is y = x * 2^(-n).\n            uint256 y = x >> n;\n\n            // If y = 1, the fractional part is zero.\n            if (y == SCALE) {\n                return result;\n            }\n\n            // Calculate the fractional part via the iterative approximation.\n            // The \"delta >>= 1\" part is equivalent to \"delta /= 2\", but shifting bits is faster.\n            for (uint256 delta = HALF_SCALE; delta > 0; delta >>= 1) {\n                y = (y * y) / SCALE;\n\n                // Is y^2 > 2 and so in the range [2,4)?\n                if (y >= 2 * SCALE) {\n                    // Add the 2^(-m) factor to the logarithm.\n                    result += delta;\n\n                    // Corresponds to z/2 on Wikipedia.\n                    y >>= 1;\n                }\n            }\n        }\n    }\n\n    /// @notice Multiplies two unsigned 60.18-decimal fixed-point numbers together, returning a new unsigned 60.18-decimal\n    /// fixed-point number.\n    /// @dev See the documentation for the \"PRBMath.mulDivFixedPoint\" function.\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\n    /// @return result The product as an unsigned 60.18-decimal fixed-point number.\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 result) {\n        result = PRBMath.mulDivFixedPoint(x, y);\n    }\n\n    /// @notice Returns PI as an unsigned 60.18-decimal fixed-point number.\n    function pi() internal pure returns (uint256 result) {\n        result = 3_141592653589793238;\n    }\n\n    /// @notice Raises x to the power of y.\n    ///\n    /// @dev Based on the insight that x^y = 2^(log2(x) * y).\n    ///\n    /// Requirements:\n    /// - All from \"exp2\", \"log2\" and \"mul\".\n    ///\n    /// Caveats:\n    /// - All from \"exp2\", \"log2\" and \"mul\".\n    /// - Assumes 0^0 is 1.\n    ///\n    /// @param x Number to raise to given power y, as an unsigned 60.18-decimal fixed-point number.\n    /// @param y Exponent to raise x to, as an unsigned 60.18-decimal fixed-point number.\n    /// @return result x raised to power y, as an unsigned 60.18-decimal fixed-point number.\n    function pow(uint256 x, uint256 y) internal pure returns (uint256 result) {\n        if (x == 0) {\n            result = y == 0 ? SCALE : uint256(0);\n        } else {\n            result = exp2(mul(log2(x), y));\n        }\n    }\n\n    /// @notice Raises x (unsigned 60.18-decimal fixed-point number) to the power of y (basic unsigned integer) using the\n    /// famous algorithm \"exponentiation by squaring\".\n    ///\n    /// @dev See https://en.wikipedia.org/wiki/Exponentiation_by_squaring\n    ///\n    /// Requirements:\n    /// - The result must fit within MAX_UD60x18.\n    ///\n    /// Caveats:\n    /// - All from \"mul\".\n    /// - Assumes 0^0 is 1.\n    ///\n    /// @param x The base as an unsigned 60.18-decimal fixed-point number.\n    /// @param y The exponent as an uint256.\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\n    function powu(uint256 x, uint256 y) internal pure returns (uint256 result) {\n        // Calculate the first iteration of the loop in advance.\n        result = y & 1 > 0 ? x : SCALE;\n\n        // Equivalent to \"for(y /= 2; y > 0; y /= 2)\" but faster.\n        for (y >>= 1; y > 0; y >>= 1) {\n            x = PRBMath.mulDivFixedPoint(x, x);\n\n            // Equivalent to \"y % 2 == 1\" but faster.\n            if (y & 1 > 0) {\n                result = PRBMath.mulDivFixedPoint(result, x);\n            }\n        }\n    }\n\n    /// @notice Returns 1 as an unsigned 60.18-decimal fixed-point number.\n    function scale() internal pure returns (uint256 result) {\n        result = SCALE;\n    }\n\n    /// @notice Calculates the square root of x, rounding down.\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\n    ///\n    /// Requirements:\n    /// - x must be less than MAX_UD60x18 / SCALE.\n    ///\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the square root.\n    /// @return result The result as an unsigned 60.18-decimal fixed-point .\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\n        unchecked {\n            if (x > MAX_UD60x18 / SCALE) {\n                revert PRBMathUD60x18__SqrtOverflow(x);\n            }\n            // Multiply x by the SCALE to account for the factor of SCALE that is picked up when multiplying two unsigned\n            // 60.18-decimal fixed-point numbers together (in this case, those two numbers are both the square root).\n            result = PRBMath.sqrt(x * SCALE);\n        }\n    }\n\n    /// @notice Converts a unsigned 60.18-decimal fixed-point number to basic integer form, rounding down in the process.\n    /// @param x The unsigned 60.18-decimal fixed-point number to convert.\n    /// @return result The same number in basic integer form.\n    function toUint(uint256 x) internal pure returns (uint256 result) {\n        unchecked {\n            result = x / SCALE;\n        }\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/Registry.sol:461:5:\n    |\n461 |     function getApproved(uint256) external view override returns (address operator) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":17253,"file":"contracts/Registry.sol","start":17139},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/Registry.sol:465:5:\n    |\n465 |     function isApprovedForAll(address, address) external view override returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":17370,"file":"contracts/Registry.sol","start":17259},"type":"Warning"}],"sources":{"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[207],"IERC721":[115]},"id":116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":116,"sourceUnit":208,"src":"133:47:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":207,"src":"271:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"271:7:0"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"182:67:0","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":115,"linearizedBaseContracts":[115,207],"name":"IERC721","nameLocation":"260:7:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"285:88:0","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":14,"name":"Transfer","nameLocation":"384:8:0","nodeType":"EventDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:0","nodeType":"VariableDeclaration","scope":14,"src":"393:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:0","nodeType":"VariableDeclaration","scope":14,"src":"415:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:0","nodeType":"VariableDeclaration","scope":14,"src":"435:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:0"},"src":"378:82:0"},{"anonymous":false,"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"466:94:0","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":23,"name":"Approval","nameLocation":"571:8:0","nodeType":"EventDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:0","nodeType":"VariableDeclaration","scope":23,"src":"580:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:0","nodeType":"VariableDeclaration","scope":23,"src":"603:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":21,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:0","nodeType":"VariableDeclaration","scope":23,"src":"629:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:0"},"src":"565:89:0"},{"anonymous":false,"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"660:117:0","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":32,"name":"ApprovalForAll","nameLocation":"788:14:0","nodeType":"EventDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:0","nodeType":"VariableDeclaration","scope":32,"src":"803:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:0","nodeType":"VariableDeclaration","scope":32,"src":"826:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":30,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:0","nodeType":"VariableDeclaration","scope":32,"src":"852:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:0"},"src":"782:85:0"},{"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"873:76:0","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":40,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"owner","nameLocation":"981:5:0","nodeType":"VariableDeclaration","scope":40,"src":"973:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:0"},"returnParameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"balance","nameLocation":"1019:7:0","nodeType":"VariableDeclaration","scope":40,"src":"1011:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:0"},"scope":115,"src":"954:74:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1034:131:0","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":48,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:0","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:0","nodeType":"VariableDeclaration","scope":48,"src":"1187:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:0"},"returnParameters":{"id":47,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"mutability":"mutable","name":"owner","nameLocation":"1235:5:0","nodeType":"VariableDeclaration","scope":48,"src":"1227:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:0"},"scope":115,"src":"1170:72:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"1248:556:0","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":60,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"from","nameLocation":"1843:4:0","nodeType":"VariableDeclaration","scope":60,"src":"1835:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"to","nameLocation":"1857:2:0","nodeType":"VariableDeclaration","scope":60,"src":"1849:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55,"mutability":"mutable","name":"tokenId","nameLocation":"1869:7:0","nodeType":"VariableDeclaration","scope":60,"src":"1861:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"data","nameLocation":"1893:4:0","nodeType":"VariableDeclaration","scope":60,"src":"1878:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":56,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:64:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1907:0:0"},"scope":115,"src":"1809:99:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1914:687:0","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":70,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2615:16:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"from","nameLocation":"2640:4:0","nodeType":"VariableDeclaration","scope":70,"src":"2632:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"to","nameLocation":"2654:2:0","nodeType":"VariableDeclaration","scope":70,"src":"2646:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"tokenId","nameLocation":"2666:7:0","nodeType":"VariableDeclaration","scope":70,"src":"2658:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:43:0"},"returnParameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"2683:0:0"},"scope":115,"src":"2606:78:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"2690:732:0","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":80,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3436:12:0","nodeType":"FunctionDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"from","nameLocation":"3457:4:0","nodeType":"VariableDeclaration","scope":80,"src":"3449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":72,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"to","nameLocation":"3471:2:0","nodeType":"VariableDeclaration","scope":80,"src":"3463:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"tokenId","nameLocation":"3483:7:0","nodeType":"VariableDeclaration","scope":80,"src":"3475:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:43:0"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[],"src":"3500:0:0"},"scope":115,"src":"3427:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"3507:452:0","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":88,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3973:7:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"to","nameLocation":"3989:2:0","nodeType":"VariableDeclaration","scope":88,"src":"3981:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"tokenId","nameLocation":"4001:7:0","nodeType":"VariableDeclaration","scope":88,"src":"3993:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:29:0"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[],"src":"4018:0:0"},"scope":115,"src":"3964:55:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":89,"nodeType":"StructuredDocumentation","src":"4025:309:0","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":96,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4348:17:0","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"operator","nameLocation":"4374:8:0","nodeType":"VariableDeclaration","scope":96,"src":"4366:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"approved","nameLocation":"4389:8:0","nodeType":"VariableDeclaration","scope":96,"src":"4384:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":92,"name":"bool","nodeType":"ElementaryTypeName","src":"4384:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:33:0"},"returnParameters":{"id":95,"nodeType":"ParameterList","parameters":[],"src":"4407:0:0"},"scope":115,"src":"4339:69:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":97,"nodeType":"StructuredDocumentation","src":"4414:139:0","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":104,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4567:11:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4587:7:0","nodeType":"VariableDeclaration","scope":104,"src":"4579:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:17:0"},"returnParameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"operator","nameLocation":"4627:8:0","nodeType":"VariableDeclaration","scope":104,"src":"4619:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"4619:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4618:18:0"},"scope":115,"src":"4558:79:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":105,"nodeType":"StructuredDocumentation","src":"4643:138:0","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":114,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4795:16:0","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"owner","nameLocation":"4820:5:0","nodeType":"VariableDeclaration","scope":114,"src":"4812:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"operator","nameLocation":"4835:8:0","nodeType":"VariableDeclaration","scope":114,"src":"4827:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4811:33:0"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":114,"src":"4868:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":111,"name":"bool","nodeType":"ElementaryTypeName","src":"4868:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4867:6:0"},"scope":115,"src":"4786:88:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":116,"src":"250:4626:0","usedErrors":[]}],"src":"108:4769:0"},"id":0},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC165":[207],"IERC721":[115],"IERC721Enumerable":[146]},"id":147,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":117,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":147,"sourceUnit":116,"src":"154:24:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":120,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":115,"src":"348:7:1"},"id":121,"nodeType":"InheritanceSpecifier","src":"348:7:1"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"180:136:1","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":146,"linearizedBaseContracts":[146,115,207],"name":"IERC721Enumerable","nameLocation":"327:17:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"362:82:1","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":127,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"458:11:1","nodeType":"FunctionDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[],"src":"469:2:1"},"returnParameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":127,"src":"495:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":124,"name":"uint256","nodeType":"ElementaryTypeName","src":"495:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"494:9:1"},"scope":146,"src":"449:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":128,"nodeType":"StructuredDocumentation","src":"510:171:1","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":137,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"695:19:1","nodeType":"FunctionDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"owner","nameLocation":"723:5:1","nodeType":"VariableDeclaration","scope":137,"src":"715:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":132,"mutability":"mutable","name":"index","nameLocation":"738:5:1","nodeType":"VariableDeclaration","scope":137,"src":"730:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"714:30:1"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":137,"src":"768:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":134,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"767:9:1"},"scope":146,"src":"686:91:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"783:164:1","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":145,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"961:12:1","nodeType":"FunctionDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"index","nameLocation":"982:5:1","nodeType":"VariableDeclaration","scope":145,"src":"974:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":139,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:15:1"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":145,"src":"1012:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":142,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1011:9:1"},"scope":146,"src":"952:69:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":147,"src":"317:706:1","usedErrors":[]}],"src":"129:895:1"},"id":1},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[207],"IERC721":[115],"IERC721Metadata":[173]},"id":174,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":148,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":149,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":174,"sourceUnit":116,"src":"137:24:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":151,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":115,"src":"326:7:2"},"id":152,"nodeType":"InheritanceSpecifier","src":"326:7:2"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"163:133:2","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":173,"linearizedBaseContracts":[173,115,207],"name":"IERC721Metadata","nameLocation":"307:15:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"340:58:2","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":158,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:2","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[],"src":"416:2:2"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":158,"src":"442:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":155,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:2"},"scope":173,"src":"403:54:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"463:60:2","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":164,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:2","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"543:2:2"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":164,"src":"569:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":161,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:2"},"scope":173,"src":"528:56:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"590:90:2","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":172,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:2","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:2","nodeType":"VariableDeclaration","scope":172,"src":"703:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:2"},"returnParameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":172,"src":"743:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":169,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:2"},"scope":173,"src":"685:73:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":174,"src":"297:463:2","usedErrors":[]}],"src":"112:649:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[195]},"id":196,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":175,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:3"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"111:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":195,"linearizedBaseContracts":[195],"name":"Context","nameLocation":"626:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":184,"nodeType":"Block","src":"702:34:3","statements":[{"expression":{"expression":{"id":181,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":180,"id":183,"nodeType":"Return","src":"712:17:3"}]},"id":185,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:3","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[],"src":"659:2:3"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":185,"src":"693:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":178,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:3"},"scope":195,"src":"640:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":193,"nodeType":"Block","src":"809:32:3","statements":[{"expression":{"expression":{"id":190,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":189,"id":192,"nodeType":"Return","src":"819:15:3"}]},"id":194,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:3","nodeType":"FunctionDefinition","parameters":{"id":186,"nodeType":"ParameterList","parameters":[],"src":"759:2:3"},"returnParameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":194,"src":"793:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":187,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:3"},"scope":195,"src":"742:99:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":196,"src":"608:235:3","usedErrors":[]}],"src":"86:758:3"},"id":3},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[207]},"id":208,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":197,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"125:279:4","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":207,"linearizedBaseContracts":[207],"name":"IERC165","nameLocation":"415:7:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":199,"nodeType":"StructuredDocumentation","src":"429:340:4","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:4","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:4","nodeType":"VariableDeclaration","scope":206,"src":"801:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":200,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:4"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"844:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:4"},"scope":207,"src":"774:76:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":208,"src":"405:447:4","usedErrors":[]}],"src":"100:753:4"},"id":4},"contracts/Registry.sol":{"ast":{"absolutePath":"contracts/Registry.sol","exportedSymbols":{"Context":[195],"IERC165":[207],"IERC721":[115],"IERC721Enumerable":[146],"IERC721Metadata":[173],"PRBMath":[3698],"PRBMathSD59x18__AbsInputTooSmall":[1829],"PRBMathSD59x18__CeilOverflow":[1834],"PRBMathSD59x18__DivInputTooSmall":[1837],"PRBMathSD59x18__DivOverflow":[1842],"PRBMathSD59x18__Exp2InputTooBig":[1852],"PRBMathSD59x18__ExpInputTooBig":[1847],"PRBMathSD59x18__FloorUnderflow":[1857],"PRBMathSD59x18__FromIntOverflow":[1862],"PRBMathSD59x18__FromIntUnderflow":[1867],"PRBMathSD59x18__GmNegativeProduct":[1874],"PRBMathSD59x18__GmOverflow":[1881],"PRBMathSD59x18__LogInputTooSmall":[1886],"PRBMathSD59x18__MulInputTooSmall":[1889],"PRBMathSD59x18__MulOverflow":[1894],"PRBMathSD59x18__PowuOverflow":[1899],"PRBMathSD59x18__SqrtNegativeInput":[1904],"PRBMathSD59x18__SqrtOverflow":[1909],"PRBMathUD60x18":[4308],"PRBMathUD60x18__AddOverflow":[1916],"PRBMathUD60x18__CeilOverflow":[1921],"PRBMathUD60x18__Exp2InputTooBig":[1931],"PRBMathUD60x18__ExpInputTooBig":[1926],"PRBMathUD60x18__FromUintOverflow":[1936],"PRBMathUD60x18__GmOverflow":[1943],"PRBMathUD60x18__LogInputTooSmall":[1948],"PRBMathUD60x18__SqrtOverflow":[1953],"PRBMathUD60x18__SubUnderflow":[1960],"PRBMath__MulDivFixedPointOverflow":[1811],"PRBMath__MulDivOverflow":[1818],"PRBMath__MulDivSignedInputTooSmall":[1821],"PRBMath__MulDivSignedOverflow":[1826],"Registry":[1804]},"id":1805,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":209,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:5"},{"absolutePath":"prb-math/contracts/PRBMathUD60x18.sol","file":"prb-math/contracts/PRBMathUD60x18.sol","id":210,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1805,"sourceUnit":4309,"src":"58:47:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":211,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1805,"sourceUnit":196,"src":"106:51:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":212,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1805,"sourceUnit":116,"src":"158:58:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","id":213,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1805,"sourceUnit":174,"src":"217:77:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","id":214,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1805,"sourceUnit":147,"src":"295:79:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":216,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":195,"src":"425:7:5"},"id":217,"nodeType":"InheritanceSpecifier","src":"425:7:5"},{"baseName":{"id":218,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":115,"src":"434:7:5"},"id":219,"nodeType":"InheritanceSpecifier","src":"434:7:5"},{"baseName":{"id":220,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":173,"src":"443:15:5"},"id":221,"nodeType":"InheritanceSpecifier","src":"443:15:5"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"376:26:5","text":" @title Registry"},"fullyImplemented":true,"id":1804,"linearizedBaseContracts":[1804,173,115,207,195],"name":"Registry","nameLocation":"413:8:5","nodeType":"ContractDefinition","nodes":[{"id":224,"libraryName":{"id":222,"name":"PRBMathUD60x18","nodeType":"IdentifierPath","referencedDeclaration":4308,"src":"471:14:5"},"nodeType":"UsingForDirective","src":"465:33:5","typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"490:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"fe131778","id":227,"mutability":"mutable","name":"PENDING_PERIOD","nameLocation":"519:14:5","nodeType":"VariableDeclaration","scope":1804,"src":"504:40:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"504:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313830","id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"536:8:5","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_15552000_by_1","typeString":"int_const 15552000"},"value":"180"},"visibility":"public"},{"constant":false,"functionSelector":"b1610d7e","id":230,"mutability":"mutable","name":"VOTING_PERIOD","nameLocation":"565:13:5","nodeType":"VariableDeclaration","scope":1804,"src":"550:38:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"550:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3135","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"581:7:5","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_1296000_by_1","typeString":"int_const 1296000"},"value":"15"},"visibility":"public"},{"constant":false,"functionSelector":"84864be7","id":233,"mutability":"mutable","name":"QUIET_ENDING_PERIOD","nameLocation":"609:19:5","nodeType":"VariableDeclaration","scope":1804,"src":"594:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"594:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"631:6:5","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_172800_by_1","typeString":"int_const 172800"},"value":"2"},"visibility":"public"},{"constant":false,"functionSelector":"3c823b6b","id":240,"mutability":"mutable","name":"FOUNDERS_VOUCHER","nameLocation":"659:16:5","nodeType":"VariableDeclaration","scope":1804,"src":"644:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":234,"name":"uint256","nodeType":"ElementaryTypeName","src":"644:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"arguments":[{"id":237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"683:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":235,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"678:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"678:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"678:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":243,"mutability":"mutable","name":"baseURI","nameLocation":"717:7:5","nodeType":"VariableDeclaration","scope":1804,"src":"701:35:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":241,"name":"string","nodeType":"ElementaryTypeName","src":"701:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"697066733a2f2f","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"727:9:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe","typeString":"literal_string \"ipfs://\""},"value":"ipfs://"},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"_symbol","nameLocation":"758:7:5","nodeType":"VariableDeclaration","scope":1804,"src":"742:23:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":244,"name":"string","nodeType":"ElementaryTypeName","src":"742:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"_name","nameLocation":"787:5:5","nodeType":"VariableDeclaration","scope":1804,"src":"771:21:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":246,"name":"string","nodeType":"ElementaryTypeName","src":"771:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"canonicalName":"Registry.Vouch","id":252,"members":[{"constant":false,"id":249,"mutability":"mutable","name":"personCid","nameLocation":"829:9:5","nodeType":"VariableDeclaration","scope":252,"src":"822:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":248,"name":"string","nodeType":"ElementaryTypeName","src":"822:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":251,"mutability":"mutable","name":"vouchDate","nameLocation":"856:9:5","nodeType":"VariableDeclaration","scope":252,"src":"848:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":250,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Vouch","nameLocation":"806:5:5","nodeType":"StructDefinition","scope":1804,"src":"799:73:5","visibility":"public"},{"canonicalName":"Registry.Vouches","id":260,"members":[{"constant":false,"id":254,"mutability":"mutable","name":"number","nameLocation":"911:6:5","nodeType":"VariableDeclaration","scope":260,"src":"903:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"vouches","nameLocation":"953:7:5","nodeType":"VariableDeclaration","scope":260,"src":"927:33:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vouch_$252_storage_$","typeString":"mapping(uint256 => struct Registry.Vouch)"},"typeName":{"id":258,"keyType":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"927:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vouch_$252_storage_$","typeString":"mapping(uint256 => struct Registry.Vouch)"},"valueType":{"id":257,"nodeType":"UserDefinedTypeName","pathNode":{"id":256,"name":"Vouch","nodeType":"IdentifierPath","referencedDeclaration":252,"src":"946:5:5"},"referencedDeclaration":252,"src":"946:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouch_$252_storage_ptr","typeString":"struct Registry.Vouch"}}},"visibility":"internal"}],"name":"Vouches","nameLocation":"885:7:5","nodeType":"StructDefinition","scope":1804,"src":"878:89:5","visibility":"public"},{"canonicalName":"Registry.Account","id":269,"members":[{"constant":false,"id":262,"mutability":"mutable","name":"account","nameLocation":"1006:7:5","nodeType":"VariableDeclaration","scope":269,"src":"998:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"998:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"voucher","nameLocation":"1035:7:5","nodeType":"VariableDeclaration","scope":269,"src":"1027:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"valid","nameLocation":"1057:5:5","nodeType":"VariableDeclaration","scope":269,"src":"1052:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":265,"name":"bool","nodeType":"ElementaryTypeName","src":"1052:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"timesChallenged","nameLocation":"1080:15:5","nodeType":"VariableDeclaration","scope":269,"src":"1072:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1072:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Account","nameLocation":"980:7:5","nodeType":"StructDefinition","scope":1804,"src":"973:129:5","visibility":"public"},{"canonicalName":"Registry.Challenge","id":286,"members":[{"constant":false,"id":271,"mutability":"mutable","name":"executed","nameLocation":"1140:8:5","nodeType":"VariableDeclaration","scope":286,"src":"1135:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":270,"name":"bool","nodeType":"ElementaryTypeName","src":"1135:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"lastOutcome","nameLocation":"1163:11:5","nodeType":"VariableDeclaration","scope":286,"src":"1158:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":272,"name":"int8","nodeType":"ElementaryTypeName","src":"1158:4:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"creationDate","nameLocation":"1192:12:5","nodeType":"VariableDeclaration","scope":286,"src":"1184:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1184:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"endDate","nameLocation":"1222:7:5","nodeType":"VariableDeclaration","scope":286,"src":"1214:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1214:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"votes","nameLocation":"1264:5:5","nodeType":"VariableDeclaration","scope":286,"src":"1239:30:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int8_$","typeString":"mapping(uint256 => int8)"},"typeName":{"id":280,"keyType":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1247:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1239:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int8_$","typeString":"mapping(uint256 => int8)"},"valueType":{"id":279,"name":"int8","nodeType":"ElementaryTypeName","src":"1258:4:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"nVoted","nameLocation":"1287:6:5","nodeType":"VariableDeclaration","scope":286,"src":"1279:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"1279:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":285,"mutability":"mutable","name":"nFor","nameLocation":"1311:4:5","nodeType":"VariableDeclaration","scope":286,"src":"1303:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"1303:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Challenge","nameLocation":"1115:9:5","nodeType":"StructDefinition","scope":1804,"src":"1108:214:5","visibility":"public"},{"constant":false,"id":291,"mutability":"mutable","name":"vouches","nameLocation":"1356:7:5","nodeType":"VariableDeclaration","scope":1804,"src":"1328:35:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vouches_$260_storage_$","typeString":"mapping(uint256 => struct Registry.Vouches)"},"typeName":{"id":290,"keyType":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1328:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vouches_$260_storage_$","typeString":"mapping(uint256 => struct Registry.Vouches)"},"valueType":{"id":289,"nodeType":"UserDefinedTypeName","pathNode":{"id":288,"name":"Vouches","nodeType":"IdentifierPath","referencedDeclaration":260,"src":"1347:7:5"},"referencedDeclaration":260,"src":"1347:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage_ptr","typeString":"struct Registry.Vouches"}}},"visibility":"internal"},{"constant":false,"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"1370:186:5","text":" two mappings hold the address to token id relationship,\n but this is a one-to-one relationship. TokenIds\n are preferred as they can be memorized by users."},"id":297,"mutability":"mutable","name":"accounts","nameLocation":"1589:8:5","nodeType":"VariableDeclaration","scope":1804,"src":"1561:36:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account)"},"typeName":{"id":296,"keyType":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"1569:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1561:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account)"},"valueType":{"id":295,"nodeType":"UserDefinedTypeName","pathNode":{"id":294,"name":"Account","nodeType":"IdentifierPath","referencedDeclaration":269,"src":"1580:7:5"},"referencedDeclaration":269,"src":"1580:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage_ptr","typeString":"struct Registry.Account"}}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"owned","nameLocation":"1631:5:5","nodeType":"VariableDeclaration","scope":1804,"src":"1603:33:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":300,"keyType":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"1611:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1603:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"challenges","nameLocation":"1675:10:5","nodeType":"VariableDeclaration","scope":1804,"src":"1643:42:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Challenge_$286_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Registry.Challenge[])"},"typeName":{"id":306,"keyType":{"id":302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1651:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1643:31:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Challenge_$286_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Registry.Challenge[])"},"valueType":{"baseType":{"id":304,"nodeType":"UserDefinedTypeName","pathNode":{"id":303,"name":"Challenge","nodeType":"IdentifierPath","referencedDeclaration":286,"src":"1662:9:5"},"referencedDeclaration":286,"src":"1662:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"}},"id":305,"nodeType":"ArrayTypeName","src":"1662:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Challenge_$286_storage_$dyn_storage_ptr","typeString":"struct Registry.Challenge[]"}}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"__totalSupply","nameLocation":"1700:13:5","nodeType":"VariableDeclaration","scope":1804,"src":"1692:21:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"functionSelector":"173ac141","id":311,"mutability":"mutable","name":"_nEntries","nameLocation":"1769:9:5","nodeType":"VariableDeclaration","scope":1804,"src":"1754:24:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1754:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"id":319,"name":"VouchEvent","nameLocation":"1869:10:5","nodeType":"EventDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1896:4:5","nodeType":"VariableDeclaration","scope":319,"src":"1880:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"1880:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1918:2:5","nodeType":"VariableDeclaration","scope":319,"src":"1902:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1902:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":317,"indexed":false,"mutability":"mutable","name":"personCid","nameLocation":"1929:9:5","nodeType":"VariableDeclaration","scope":319,"src":"1922:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"1922:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1879:60:5"},"src":"1863:77:5"},{"anonymous":false,"id":323,"name":"InvalidatedAccountEvent","nameLocation":"1951:23:5","nodeType":"EventDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1991:7:5","nodeType":"VariableDeclaration","scope":323,"src":"1975:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1974:25:5"},"src":"1945:55:5"},{"anonymous":false,"id":327,"name":"InvalidatedByChallenge","nameLocation":"2011:22:5","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2050:7:5","nodeType":"VariableDeclaration","scope":327,"src":"2034:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2033:25:5"},"src":"2005:54:5"},{"anonymous":false,"id":331,"name":"InvalidatedByInvalidVoucher","nameLocation":"2070:27:5","nodeType":"EventDefinition","parameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2114:7:5","nodeType":"VariableDeclaration","scope":331,"src":"2098:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"2098:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2097:25:5"},"src":"2064:59:5"},{"anonymous":false,"id":335,"name":"ChallengeEvent","nameLocation":"2135:14:5","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2166:7:5","nodeType":"VariableDeclaration","scope":335,"src":"2150:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"2150:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2149:25:5"},"src":"2129:46:5"},{"anonymous":false,"id":341,"name":"ChallengeExecuted","nameLocation":"2186:17:5","nodeType":"EventDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2212:7:5","nodeType":"VariableDeclaration","scope":341,"src":"2204:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":339,"indexed":false,"mutability":"mutable","name":"outcome","nameLocation":"2226:7:5","nodeType":"VariableDeclaration","scope":341,"src":"2221:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":338,"name":"int8","nodeType":"ElementaryTypeName","src":"2221:4:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"2203:31:5"},"src":"2180:55:5"},{"anonymous":false,"id":349,"name":"VoteEvent","nameLocation":"2254:9:5","nodeType":"EventDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"voterTokenId","nameLocation":"2280:12:5","nodeType":"VariableDeclaration","scope":349,"src":"2264:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2264:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":345,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2302:7:5","nodeType":"VariableDeclaration","scope":349,"src":"2294:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":344,"name":"uint256","nodeType":"ElementaryTypeName","src":"2294:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":347,"indexed":false,"mutability":"mutable","name":"vote","nameLocation":"2316:4:5","nodeType":"VariableDeclaration","scope":349,"src":"2311:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":346,"name":"int8","nodeType":"ElementaryTypeName","src":"2311:4:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"2263:58:5"},"src":"2248:74:5"},{"anonymous":false,"id":355,"name":"InvalidatedVoteEvent","nameLocation":"2333:20:5","nodeType":"EventDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2370:7:5","nodeType":"VariableDeclaration","scope":355,"src":"2354:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"2354:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":353,"indexed":true,"mutability":"mutable","name":"voterTokenId","nameLocation":"2395:12:5","nodeType":"VariableDeclaration","scope":355,"src":"2379:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":352,"name":"uint256","nodeType":"ElementaryTypeName","src":"2379:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2353:55:5"},"src":"2327:82:5"},{"anonymous":false,"id":359,"name":"VotingPeriodExtendedEvent","nameLocation":"2420:25:5","nodeType":"EventDefinition","parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"indexed":false,"mutability":"mutable","name":"newEndDate","nameLocation":"2454:10:5","nodeType":"VariableDeclaration","scope":359,"src":"2446:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":356,"name":"uint256","nodeType":"ElementaryTypeName","src":"2446:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2445:20:5"},"src":"2414:52:5"},{"documentation":{"id":360,"nodeType":"StructuredDocumentation","src":"2472:13:5","text":"Errors "},"id":362,"name":"ErrorAccountSolidified","nameLocation":"2496:22:5","nodeType":"ErrorDefinition","parameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"2518:2:5"},"src":"2490:31:5"},{"id":364,"name":"CantChallengeInvalidAccount","nameLocation":"2532:27:5","nodeType":"ErrorDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"2559:2:5"},"src":"2526:36:5"},{"id":366,"name":"ChallangeAlreadyActive","nameLocation":"2573:22:5","nodeType":"ErrorDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"2595:2:5"},"src":"2567:31:5"},{"id":368,"name":"ErrorVoteOnOwnChallenge","nameLocation":"2613:23:5","nodeType":"ErrorDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[],"src":"2636:2:5"},"src":"2607:32:5"},{"id":370,"name":"ErrorChallangeAlreadyExecuted","nameLocation":"2650:29:5","nodeType":"ErrorDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[],"src":"2679:2:5"},"src":"2644:38:5"},{"id":372,"name":"ErrorChallangeNotActive","nameLocation":"2693:23:5","nodeType":"ErrorDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[],"src":"2716:2:5"},"src":"2687:32:5"},{"id":374,"name":"ErrorVotingPeriodEnded","nameLocation":"2730:22:5","nodeType":"ErrorDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"2752:2:5"},"src":"2724:31:5"},{"id":376,"name":"ErrorVoterCantVote","nameLocation":"2766:18:5","nodeType":"ErrorDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[],"src":"2784:2:5"},"src":"2760:27:5"},{"id":378,"name":"ErrorAlreadyVoted","nameLocation":"2798:17:5","nodeType":"ErrorDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"2815:2:5"},"src":"2792:26:5"},{"id":380,"name":"ErrorVoucherIsValid","nameLocation":"2829:19:5","nodeType":"ErrorDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[],"src":"2848:2:5"},"src":"2823:28:5"},{"id":382,"name":"ErrorVoucherNotValid","nameLocation":"2862:20:5","nodeType":"ErrorDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"2882:2:5"},"src":"2856:29:5"},{"id":384,"name":"ErrorAccountNotValid","nameLocation":"2896:20:5","nodeType":"ErrorDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"2916:2:5"},"src":"2890:29:5"},{"id":386,"name":"ErrorVoteNotFound","nameLocation":"2930:17:5","nodeType":"ErrorDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[],"src":"2947:2:5"},"src":"2924:26:5"},{"id":388,"name":"ErrorVoterValid","nameLocation":"2961:15:5","nodeType":"ErrorDefinition","parameters":{"id":387,"nodeType":"ParameterList","parameters":[],"src":"2976:2:5"},"src":"2955:24:5"},{"id":390,"name":"VoucherNoLongerInvalid","nameLocation":"2990:22:5","nodeType":"ErrorDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"3012:2:5"},"src":"2984:31:5"},{"id":392,"name":"AccountAlreadyOwnsOneToken","nameLocation":"3026:26:5","nodeType":"ErrorDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"3052:2:5"},"src":"3020:35:5"},{"id":394,"name":"UnexpectedExecutedCondition","nameLocation":"3066:27:5","nodeType":"ErrorDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[],"src":"3093:2:5"},"src":"3060:36:5"},{"body":{"id":453,"nodeType":"Block","src":"3283:375:5","statements":[{"expression":{"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":407,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"3293:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":408,"name":"__symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3303:8:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3293:18:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":410,"nodeType":"ExpressionStatement","src":"3293:18:5"},{"expression":{"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":411,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"3321:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":412,"name":"__name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"3329:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3321:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":414,"nodeType":"ExpressionStatement","src":"3321:14:5"},{"expression":{"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":415,"name":"__totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"3345:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3361:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3345:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":418,"nodeType":"ExpressionStatement","src":"3345:17:5"},{"expression":{"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":419,"name":"_nEntries","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"3372:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3384:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3372:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":422,"nodeType":"ExpressionStatement","src":"3372:13:5"},{"body":{"id":451,"nodeType":"Block","src":"3443:209:5","statements":[{"documentation":"special case of founder vouchers being a dumb token ID ","expression":{"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":434,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"3531:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":436,"indexExpression":{"id":435,"name":"FOUNDERS_VOUCHER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3540:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3531:26:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"valid","nodeType":"MemberAccess","referencedDeclaration":266,"src":"3531:32:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3566:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3531:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":440,"nodeType":"ExpressionStatement","src":"3531:39:5"},{"expression":{"arguments":[{"id":442,"name":"FOUNDERS_VOUCHER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3591:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":443,"name":"addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"3609:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":445,"indexExpression":{"id":444,"name":"ix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"3619:2:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3609:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":446,"name":"foundersCids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"3624:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":448,"indexExpression":{"id":447,"name":"ix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"3637:2:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3624:16:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":441,"name":"_vouch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"3584:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3584:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":450,"nodeType":"ExpressionStatement","src":"3584:57:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":427,"name":"ix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"3414:2:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":428,"name":"addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"3419:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3419:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3414:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":452,"initializationExpression":{"assignments":[424],"declarations":[{"constant":false,"id":424,"mutability":"mutable","name":"ix","nameLocation":"3406:2:5","nodeType":"VariableDeclaration","scope":452,"src":"3400:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":423,"name":"uint8","nodeType":"ElementaryTypeName","src":"3400:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":426,"initialValue":{"hexValue":"30","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3411:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3400:12:5"},"loopExpression":{"expression":{"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3437:4:5","subExpression":{"id":431,"name":"ix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"3437:2:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":433,"nodeType":"ExpressionStatement","src":"3437:4:5"},"nodeType":"ForStatement","src":"3395:257:5"}]},"id":454,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"__symbol","nameLocation":"3193:8:5","nodeType":"VariableDeclaration","scope":454,"src":"3179:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":395,"name":"string","nodeType":"ElementaryTypeName","src":"3179:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":398,"mutability":"mutable","name":"__name","nameLocation":"3217:6:5","nodeType":"VariableDeclaration","scope":454,"src":"3203:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":397,"name":"string","nodeType":"ElementaryTypeName","src":"3203:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"addresses","nameLocation":"3242:9:5","nodeType":"VariableDeclaration","scope":454,"src":"3225:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"3225:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":400,"nodeType":"ArrayTypeName","src":"3225:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":404,"mutability":"mutable","name":"foundersCids","nameLocation":"3269:12:5","nodeType":"VariableDeclaration","scope":454,"src":"3253:28:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":402,"name":"string","nodeType":"ElementaryTypeName","src":"3253:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":403,"nodeType":"ArrayTypeName","src":"3253:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"3178:104:5"},"returnParameters":{"id":406,"nodeType":"ParameterList","parameters":[],"src":"3283:0:5"},"scope":1804,"src":"3167:491:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":475,"nodeType":"Block","src":"3871:114:5","statements":[{"assignments":[463],"declarations":[{"constant":false,"id":463,"mutability":"mutable","name":"vouchTokenId","nameLocation":"3889:12:5","nodeType":"VariableDeclaration","scope":475,"src":"3881:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"3881:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":468,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":465,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3915:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3915:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":464,"name":"_tokenIdOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"3904:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3904:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3881:47:5"},{"expression":{"arguments":[{"id":470,"name":"vouchTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"3945:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":471,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"3959:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":472,"name":"personCid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"3968:9:5","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":469,"name":"_vouch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"3938:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3938:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":474,"nodeType":"ExpressionStatement","src":"3938:40:5"}]},"documentation":{"id":455,"nodeType":"StructuredDocumentation","src":"3664:134:5","text":" The msgSender must be a valid account in the registry and vouch\n for the provided account and personCid pair"},"functionSelector":"0c104878","id":476,"implemented":true,"kind":"function","modifiers":[],"name":"vouch","nameLocation":"3812:5:5","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"account","nameLocation":"3826:7:5","nodeType":"VariableDeclaration","scope":476,"src":"3818:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"3818:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"personCid","nameLocation":"3851:9:5","nodeType":"VariableDeclaration","scope":476,"src":"3835:25:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":458,"name":"string","nodeType":"ElementaryTypeName","src":"3835:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3817:44:5"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[],"src":"3871:0:5"},"scope":1804,"src":"3803:182:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":513,"nodeType":"Block","src":"4075:420:5","statements":[{"assignments":[485],"declarations":[{"constant":false,"id":485,"mutability":"mutable","name":"timesChallenged","nameLocation":"4093:15:5","nodeType":"VariableDeclaration","scope":513,"src":"4085:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"4085:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":490,"initialValue":{"expression":{"baseExpression":{"id":486,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"4111:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":488,"indexExpression":{"id":487,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4120:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4111:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"timesChallenged","nodeType":"MemberAccess","referencedDeclaration":268,"src":"4111:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4085:60:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":491,"name":"challenges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4168:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Challenge_$286_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Registry.Challenge storage ref[] storage ref)"}},"id":493,"indexExpression":{"id":492,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4179:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4168:20:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Challenge_$286_storage_$dyn_storage","typeString":"struct Registry.Challenge storage ref[] storage ref"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4168:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":495,"name":"timesChallenged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4199:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4217:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4199:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4168:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"4164:262:5","trueBody":{"id":505,"nodeType":"Block","src":"4220:206:5","statements":[{"documentation":"the currentChallenge must be the last challenge in the array, \n the first time is read it does not exist so we create it ","expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":499,"name":"challenges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4388:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Challenge_$286_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Registry.Challenge storage ref[] storage ref)"}},"id":501,"indexExpression":{"id":500,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4399:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4388:20:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Challenge_$286_storage_$dyn_storage","typeString":"struct Registry.Challenge storage ref[] storage ref"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"4388:25:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Challenge_$286_storage_$dyn_storage_ptr_$returns$_t_struct$_Challenge_$286_storage_$bound_to$_t_array$_t_struct$_Challenge_$286_storage_$dyn_storage_ptr_$","typeString":"function (struct Registry.Challenge storage ref[] storage pointer) returns (struct Registry.Challenge storage ref)"}},"id":503,"isConstant":false,"isLValue":true,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4388:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage","typeString":"struct Registry.Challenge storage ref"}},"id":504,"nodeType":"ExpressionStatement","src":"4388:27:5"}]}},{"expression":{"baseExpression":{"baseExpression":{"id":507,"name":"challenges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4451:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Challenge_$286_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Registry.Challenge storage ref[] storage ref)"}},"id":509,"indexExpression":{"id":508,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4462:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4451:20:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Challenge_$286_storage_$dyn_storage","typeString":"struct Registry.Challenge storage ref[] storage ref"}},"id":511,"indexExpression":{"id":510,"name":"timesChallenged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4472:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4451:37:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage","typeString":"struct Registry.Challenge storage ref"}},"functionReturnParameters":483,"id":512,"nodeType":"Return","src":"4444:44:5"}]},"id":514,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentChallenge","nameLocation":"4000:19:5","nodeType":"FunctionDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"_tokenId","nameLocation":"4028:8:5","nodeType":"VariableDeclaration","scope":514,"src":"4020:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"4020:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4019:18:5"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":514,"src":"4056:17:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"},"typeName":{"id":481,"nodeType":"UserDefinedTypeName","pathNode":{"id":480,"name":"Challenge","nodeType":"IdentifierPath","referencedDeclaration":286,"src":"4056:9:5"},"referencedDeclaration":286,"src":"4056:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"}},"visibility":"internal"}],"src":"4055:19:5"},"scope":1804,"src":"3991:504:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":585,"nodeType":"Block","src":"4547:605:5","statements":[{"condition":{"arguments":[{"id":520,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"4573:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":519,"name":"isSolidified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"4560:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4560:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":526,"nodeType":"IfStatement","src":"4557:83:5","trueBody":{"id":525,"nodeType":"Block","src":"4584:56:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":522,"name":"ErrorAccountSolidified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"4605:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4605:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"RevertStatement","src":"4598:31:5"}]}},{"condition":{"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4653:25:5","subExpression":{"expression":{"baseExpression":{"id":527,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"4654:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":529,"indexExpression":{"id":528,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"4663:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4654:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"valid","nodeType":"MemberAccess","referencedDeclaration":266,"src":"4654:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":536,"nodeType":"IfStatement","src":"4650:91:5","trueBody":{"id":535,"nodeType":"Block","src":"4680:61:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":532,"name":"CantChallengeInvalidAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"4701:27:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4701:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":534,"nodeType":"RevertStatement","src":"4694:36:5"}]}},{"assignments":[539],"declarations":[{"constant":false,"id":539,"mutability":"mutable","name":"_challenge","nameLocation":"4769:10:5","nodeType":"VariableDeclaration","scope":585,"src":"4751:28:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"},"typeName":{"id":538,"nodeType":"UserDefinedTypeName","pathNode":{"id":537,"name":"Challenge","nodeType":"IdentifierPath","referencedDeclaration":286,"src":"4751:9:5"},"referencedDeclaration":286,"src":"4751:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"}},"visibility":"internal"}],"id":543,"initialValue":{"arguments":[{"id":541,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"4802:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":540,"name":"getCurrentChallenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4782:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_Challenge_$286_storage_ptr_$","typeString":"function (uint256) returns (struct Registry.Challenge storage pointer)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4782:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4751:60:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":544,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"4824:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":545,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"creationDate","nodeType":"MemberAccess","referencedDeclaration":275,"src":"4824:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4850:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4824:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":551,"nodeType":"IfStatement","src":"4821:63:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":548,"name":"ChallangeAlreadyActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"4860:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4860:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"RevertStatement","src":"4853:31:5"}},{"condition":{"expression":{"id":552,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"4897:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":271,"src":"4897:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":557,"nodeType":"IfStatement","src":"4894:60:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":554,"name":"UnexpectedExecutedCondition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4925:27:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4925:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":556,"nodeType":"RevertStatement","src":"4918:36:5"}},{"expression":{"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":558,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"4965:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":560,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"creationDate","nodeType":"MemberAccess","referencedDeclaration":275,"src":"4965:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":561,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4991:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4991:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4965:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":564,"nodeType":"ExpressionStatement","src":"4965:41:5"},{"expression":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":565,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"5016:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":277,"src":"5016:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":568,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5037:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5037:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":570,"name":"VOTING_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"5055:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5037:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5016:52:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":573,"nodeType":"ExpressionStatement","src":"5016:52:5"},{"expression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":574,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"5078:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastOutcome","nodeType":"MemberAccess","referencedDeclaration":273,"src":"5078:22:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"5103:2:5","subExpression":{"hexValue":"31","id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5104:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"src":"5078:27:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":580,"nodeType":"ExpressionStatement","src":"5078:27:5"},{"eventCall":{"arguments":[{"id":582,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"5136:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":581,"name":"ChallengeEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"5121:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5121:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":584,"nodeType":"EmitStatement","src":"5116:29:5"}]},"functionSelector":"ab82d9a0","id":586,"implemented":true,"kind":"function","modifiers":[],"name":"challenge","nameLocation":"4510:9:5","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"_tokenId","nameLocation":"4528:8:5","nodeType":"VariableDeclaration","scope":586,"src":"4520:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"4520:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4519:18:5"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[],"src":"4547:0:5"},"scope":1804,"src":"4501:651:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":697,"nodeType":"Block","src":"5211:777:5","statements":[{"assignments":[594],"declarations":[{"constant":false,"id":594,"mutability":"mutable","name":"voterTokenId","nameLocation":"5229:12:5","nodeType":"VariableDeclaration","scope":697,"src":"5221:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"5221:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":599,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":596,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"5255:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5255:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":595,"name":"_tokenIdOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"5244:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5244:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5221:47:5"},{"assignments":[602],"declarations":[{"constant":false,"id":602,"mutability":"mutable","name":"_challenge","nameLocation":"5296:10:5","nodeType":"VariableDeclaration","scope":697,"src":"5278:28:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"},"typeName":{"id":601,"nodeType":"UserDefinedTypeName","pathNode":{"id":600,"name":"Challenge","nodeType":"IdentifierPath","referencedDeclaration":286,"src":"5278:9:5"},"referencedDeclaration":286,"src":"5278:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"}},"visibility":"internal"}],"id":606,"initialValue":{"arguments":[{"id":604,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"5329:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":603,"name":"getCurrentChallenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"5309:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_Challenge_$286_storage_ptr_$","typeString":"function (uint256) returns (struct Registry.Challenge storage pointer)"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5309:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5278:60:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":607,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5360:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"creationDate","nodeType":"MemberAccess","referencedDeclaration":275,"src":"5360:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5387:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5360:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":614,"nodeType":"IfStatement","src":"5357:65:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":611,"name":"ErrorChallangeNotActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"5397:23:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5397:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"RevertStatement","src":"5390:32:5"}},{"condition":{"expression":{"id":615,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5435:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":271,"src":"5435:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":620,"nodeType":"IfStatement","src":"5432:62:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":617,"name":"ErrorChallangeAlreadyExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"5463:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5463:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"RevertStatement","src":"5456:38:5"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":621,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5507:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5507:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":623,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5525:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":277,"src":"5525:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5507:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":629,"nodeType":"IfStatement","src":"5504:72:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":626,"name":"ErrorVotingPeriodEnded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"5552:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5552:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":628,"nodeType":"RevertStatement","src":"5545:31:5"}},{"condition":{"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5589:32:5","subExpression":{"arguments":[{"id":631,"name":"voterTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"5598:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":632,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"5612:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":630,"name":"canVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"5590:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) view returns (bool)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5590:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":638,"nodeType":"IfStatement","src":"5586:64:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":635,"name":"ErrorVoterCantVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5630:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5630:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"RevertStatement","src":"5623:27:5"}},{"condition":{"commonType":{"typeIdentifier":"t_int8","typeString":"int8"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":639,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5663:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":281,"src":"5663:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int8_$","typeString":"mapping(uint256 => int8)"}},"id":642,"indexExpression":{"id":641,"name":"voterTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"5680:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5663:30:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5697:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5663:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":648,"nodeType":"IfStatement","src":"5660:66:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":645,"name":"ErrorAlreadyVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"5707:17:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5707:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":647,"nodeType":"RevertStatement","src":"5700:26:5"}},{"expression":{"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":649,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5737:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":281,"src":"5737:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int8_$","typeString":"mapping(uint256 => int8)"}},"id":653,"indexExpression":{"id":651,"name":"voterTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"5754:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5737:30:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_int8","typeString":"int8"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":654,"name":"_vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"5770:5:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5779:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5770:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"5798:2:5","subExpression":{"hexValue":"31","id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5799:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5793:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":661,"name":"int8","nodeType":"ElementaryTypeName","src":"5793:4:5","typeDescriptions":{}}},"id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5793:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5770:31:5","trueExpression":{"arguments":[{"hexValue":"31","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5788:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5783:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":657,"name":"int8","nodeType":"ElementaryTypeName","src":"5783:4:5","typeDescriptions":{}}},"id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5783:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"5737:64:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":668,"nodeType":"ExpressionStatement","src":"5737:64:5"},{"expression":{"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":669,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5811:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"nVoted","nodeType":"MemberAccess","referencedDeclaration":283,"src":"5811:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5832:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5811:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":674,"nodeType":"ExpressionStatement","src":"5811:22:5"},{"expression":{"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":675,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5843:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"nFor","nodeType":"MemberAccess","referencedDeclaration":285,"src":"5843:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_int8","typeString":"int8"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":678,"name":"_vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"5862:5:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5871:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5862:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5879:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5862:18:5","trueExpression":{"hexValue":"31","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5875:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5843:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":685,"nodeType":"ExpressionStatement","src":"5843:37:5"},{"eventCall":{"arguments":[{"id":687,"name":"voterTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"5906:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":688,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"5920:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":689,"name":"_vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"5930:5:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int8","typeString":"int8"}],"id":686,"name":"VoteEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"5896:9:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_int8_$returns$__$","typeString":"function (uint256,uint256,int8)"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5896:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"EmitStatement","src":"5891:45:5"},{"expression":{"arguments":[{"id":693,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5960:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},{"id":694,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"5972:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":692,"name":"_executeVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"5947:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Challenge_$286_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct Registry.Challenge storage pointer,uint256)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5947:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"5947:34:5"}]},"functionSelector":"ee650248","id":698,"implemented":true,"kind":"function","modifiers":[],"name":"vote","nameLocation":"5167:4:5","nodeType":"FunctionDefinition","parameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"_tokenId","nameLocation":"5180:8:5","nodeType":"VariableDeclaration","scope":698,"src":"5172:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"5172:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":590,"mutability":"mutable","name":"_vote","nameLocation":"5195:5:5","nodeType":"VariableDeclaration","scope":698,"src":"5190:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":589,"name":"int8","nodeType":"ElementaryTypeName","src":"5190:4:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"5171:30:5"},"returnParameters":{"id":592,"nodeType":"ParameterList","parameters":[],"src":"5211:0:5"},"scope":1804,"src":"5158:830:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":715,"nodeType":"Block","src":"6042:121:5","statements":[{"assignments":[705],"declarations":[{"constant":false,"id":705,"mutability":"mutable","name":"_challenge","nameLocation":"6070:10:5","nodeType":"VariableDeclaration","scope":715,"src":"6052:28:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"},"typeName":{"id":704,"nodeType":"UserDefinedTypeName","pathNode":{"id":703,"name":"Challenge","nodeType":"IdentifierPath","referencedDeclaration":286,"src":"6052:9:5"},"referencedDeclaration":286,"src":"6052:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"}},"visibility":"internal"}],"id":709,"initialValue":{"arguments":[{"id":707,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"6103:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":706,"name":"getCurrentChallenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"6083:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_Challenge_$286_storage_ptr_$","typeString":"function (uint256) returns (struct Registry.Challenge storage pointer)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6083:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6052:60:5"},{"expression":{"arguments":[{"id":711,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"6135:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},{"id":712,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"6147:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":710,"name":"_executeVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"6122:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Challenge_$286_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct Registry.Challenge storage pointer,uint256)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6122:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":714,"nodeType":"ExpressionStatement","src":"6122:34:5"}]},"functionSelector":"f98a4eca","id":716,"implemented":true,"kind":"function","modifiers":[],"name":"executeVote","nameLocation":"6003:11:5","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"_tokenId","nameLocation":"6023:8:5","nodeType":"VariableDeclaration","scope":716,"src":"6015:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":699,"name":"uint256","nodeType":"ElementaryTypeName","src":"6015:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6014:18:5"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[],"src":"6042:0:5"},"scope":1804,"src":"5994:169:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":744,"nodeType":"Block","src":"6229:229:5","statements":[{"assignments":[722],"declarations":[{"constant":false,"id":722,"mutability":"mutable","name":"voucherTokenId","nameLocation":"6247:14:5","nodeType":"VariableDeclaration","scope":744,"src":"6239:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"6239:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":727,"initialValue":{"expression":{"baseExpression":{"id":723,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"6264:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":725,"indexExpression":{"id":724,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"6273:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6264:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"voucher","nodeType":"MemberAccess","referencedDeclaration":264,"src":"6264:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6239:50:5"},{"condition":{"expression":{"baseExpression":{"id":728,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"6302:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":730,"indexExpression":{"id":729,"name":"voucherTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"6311:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6302:24:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"valid","nodeType":"MemberAccess","referencedDeclaration":266,"src":"6302:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":735,"nodeType":"IfStatement","src":"6299:63:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":732,"name":"ErrorVoucherIsValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"6341:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6341:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"RevertStatement","src":"6334:28:5"}},{"eventCall":{"arguments":[{"id":737,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"6406:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":736,"name":"InvalidatedByInvalidVoucher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"6378:27:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6378:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"EmitStatement","src":"6373:41:5"},{"expression":{"arguments":[{"id":741,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"6443:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":740,"name":"_invalidateAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"6424:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6424:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":743,"nodeType":"ExpressionStatement","src":"6424:27:5"}]},"functionSelector":"9a489620","id":745,"implemented":true,"kind":"function","modifiers":[],"name":"invalidateInvalidVoucher","nameLocation":"6178:24:5","nodeType":"FunctionDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"tokenId","nameLocation":"6211:7:5","nodeType":"VariableDeclaration","scope":745,"src":"6203:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"6203:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6202:17:5"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"6229:0:5"},"scope":1804,"src":"6169:289:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":765,"nodeType":"Block","src":"6538:139:5","statements":[{"assignments":[754],"declarations":[{"constant":false,"id":754,"mutability":"mutable","name":"_challenge","nameLocation":"6566:10:5","nodeType":"VariableDeclaration","scope":765,"src":"6548:28:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"},"typeName":{"id":753,"nodeType":"UserDefinedTypeName","pathNode":{"id":752,"name":"Challenge","nodeType":"IdentifierPath","referencedDeclaration":286,"src":"6548:9:5"},"referencedDeclaration":286,"src":"6548:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"}},"visibility":"internal"}],"id":758,"initialValue":{"arguments":[{"id":756,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"6599:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":755,"name":"getCurrentChallenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"6579:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_Challenge_$286_storage_ptr_$","typeString":"function (uint256) returns (struct Registry.Challenge storage pointer)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6579:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6548:60:5"},{"expression":{"arguments":[{"id":760,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"6634:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":761,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"6644:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},{"id":762,"name":"_voterTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"6656:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":759,"name":"_invalidateVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"6618:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_Challenge_$286_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,struct Registry.Challenge storage pointer,uint256)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6618:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":764,"nodeType":"ExpressionStatement","src":"6618:52:5"}]},"functionSelector":"d9eeebed","id":766,"implemented":true,"kind":"function","modifiers":[],"name":"invalidateVote","nameLocation":"6473:14:5","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"_tokenId","nameLocation":"6496:8:5","nodeType":"VariableDeclaration","scope":766,"src":"6488:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"_voterTokenId","nameLocation":"6514:13:5","nodeType":"VariableDeclaration","scope":766,"src":"6506:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":748,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:5"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"6538:0:5"},"scope":1804,"src":"6464:213:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":774,"nodeType":"Block","src":"6799:38:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":771,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"6816:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6816:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":770,"id":773,"nodeType":"Return","src":"6809:21:5"}]},"functionSelector":"18160ddd","id":775,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"6753:11:5","nodeType":"FunctionDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[],"src":"6764:2:5"},"returnParameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":775,"src":"6790:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"6790:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6789:9:5"},"scope":1804,"src":"6744:93:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":782,"nodeType":"Block","src":"6899:37:5","statements":[{"expression":{"id":780,"name":"__totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6916:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":779,"id":781,"nodeType":"Return","src":"6909:20:5"}]},"id":783,"implemented":true,"kind":"function","modifiers":[],"name":"_totalSupply","nameLocation":"6852:12:5","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[],"src":"6864:2:5"},"returnParameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"6890:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"6890:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6889:9:5"},"scope":1804,"src":"6843:93:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":805,"nodeType":"Block","src":"7022:134:5","statements":[{"assignments":[791],"declarations":[{"constant":false,"id":791,"mutability":"mutable","name":"voucherTokenId","nameLocation":"7040:14:5","nodeType":"VariableDeclaration","scope":805,"src":"7032:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"7032:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":796,"initialValue":{"expression":{"baseExpression":{"id":792,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"7057:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":794,"indexExpression":{"id":793,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"7066:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7057:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"voucher","nodeType":"MemberAccess","referencedDeclaration":264,"src":"7057:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7032:50:5"},{"expression":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":797,"name":"vouches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"7099:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vouches_$260_storage_$","typeString":"mapping(uint256 => struct Registry.Vouches storage ref)"}},"id":799,"indexExpression":{"id":798,"name":"voucherTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"7107:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7099:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage","typeString":"struct Registry.Vouches storage ref"}},"id":800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"vouches","nodeType":"MemberAccess","referencedDeclaration":259,"src":"7099:31:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vouch_$252_storage_$","typeString":"mapping(uint256 => struct Registry.Vouch storage ref)"}},"id":802,"indexExpression":{"id":801,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"7131:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7099:40:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouch_$252_storage","typeString":"struct Registry.Vouch storage ref"}},"id":803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"personCid","nodeType":"MemberAccess","referencedDeclaration":249,"src":"7099:50:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":789,"id":804,"nodeType":"Return","src":"7092:57:5"}]},"functionSelector":"3fb1a836","id":806,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenPersonCid","nameLocation":"6951:17:5","nodeType":"FunctionDefinition","parameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"tokenId","nameLocation":"6977:7:5","nodeType":"VariableDeclaration","scope":806,"src":"6969:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":784,"name":"uint256","nodeType":"ElementaryTypeName","src":"6969:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6968:17:5"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":806,"src":"7007:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":787,"name":"string","nodeType":"ElementaryTypeName","src":"7007:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7006:15:5"},"scope":1804,"src":"6942:214:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":847,"nodeType":"Block","src":"7234:542:5","statements":[{"assignments":[814],"declarations":[{"constant":false,"id":814,"mutability":"mutable","name":"voucherTokenId","nameLocation":"7252:14:5","nodeType":"VariableDeclaration","scope":847,"src":"7244:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"7244:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":819,"initialValue":{"expression":{"baseExpression":{"id":815,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"7269:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":817,"indexExpression":{"id":816,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7278:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7269:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":818,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"voucher","nodeType":"MemberAccess","referencedDeclaration":264,"src":"7269:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7244:51:5"},{"assignments":[822],"declarations":[{"constant":false,"id":822,"mutability":"mutable","name":"_vouches","nameLocation":"7321:8:5","nodeType":"VariableDeclaration","scope":847,"src":"7305:24:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage_ptr","typeString":"struct Registry.Vouches"},"typeName":{"id":821,"nodeType":"UserDefinedTypeName","pathNode":{"id":820,"name":"Vouches","nodeType":"IdentifierPath","referencedDeclaration":260,"src":"7305:7:5"},"referencedDeclaration":260,"src":"7305:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage_ptr","typeString":"struct Registry.Vouches"}},"visibility":"internal"}],"id":826,"initialValue":{"baseExpression":{"id":823,"name":"vouches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"7332:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vouches_$260_storage_$","typeString":"mapping(uint256 => struct Registry.Vouches storage ref)"}},"id":825,"indexExpression":{"id":824,"name":"voucherTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"7340:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7332:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage","typeString":"struct Registry.Vouches storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7305:50:5"},{"assignments":[829],"declarations":[{"constant":false,"id":829,"mutability":"mutable","name":"number","nameLocation":"7535:6:5","nodeType":"VariableDeclaration","scope":847,"src":"7527:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"7527:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"documentation":" The number of vouches for valid accounts minus the voted account plus the voucher\n number = _vouches.number - 1 + 1","id":832,"initialValue":{"expression":{"id":830,"name":"_vouches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"7544:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage_ptr","typeString":"struct Registry.Vouches storage pointer"}},"id":831,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":254,"src":"7544:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7527:32:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":833,"name":"voucherTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"7657:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":834,"name":"FOUNDERS_VOUCHER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"7675:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7657:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":"special case for the founder accounts where the voucher cannot vote ","id":844,"nodeType":"IfStatement","src":"7653:93:5","trueBody":{"id":843,"nodeType":"Block","src":"7693:53:5","statements":[{"expression":{"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":836,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"7707:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":837,"name":"_vouches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"7716:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage_ptr","typeString":"struct Registry.Vouches storage pointer"}},"id":838,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":254,"src":"7716:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7734:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7716:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7707:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":842,"nodeType":"ExpressionStatement","src":"7707:28:5"}]}},{"expression":{"id":845,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"7763:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":812,"id":846,"nodeType":"Return","src":"7756:13:5"}]},"functionSelector":"43d3a4c1","id":848,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalVoters","nameLocation":"7171:14:5","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"_tokenId","nameLocation":"7194:8:5","nodeType":"VariableDeclaration","scope":848,"src":"7186:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"7186:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7185:18:5"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":848,"src":"7225:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"7225:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7224:9:5"},"scope":1804,"src":"7162:614:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":910,"nodeType":"Block","src":"8280:473:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":858,"name":"voterTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"8294:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":859,"name":"challengedTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8310:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8294:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":863,"nodeType":"IfStatement","src":"8290:51:5","trueBody":{"expression":{"hexValue":"66616c7365","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8336:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":857,"id":862,"nodeType":"Return","src":"8329:12:5"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":864,"name":"voterTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"8355:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8371:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8355:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":869,"nodeType":"IfStatement","src":"8351:35:5","trueBody":{"expression":{"hexValue":"66616c7365","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8381:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":857,"id":868,"nodeType":"Return","src":"8374:12:5"}},{"assignments":[871],"declarations":[{"constant":false,"id":871,"mutability":"mutable","name":"voucherTokenId","nameLocation":"8405:14:5","nodeType":"VariableDeclaration","scope":910,"src":"8397:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":876,"initialValue":{"expression":{"baseExpression":{"id":872,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"8422:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":874,"indexExpression":{"id":873,"name":"challengedTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8431:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8422:27:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":875,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"voucher","nodeType":"MemberAccess","referencedDeclaration":264,"src":"8422:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8397:60:5"},{"condition":{"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8470:31:5","subExpression":{"expression":{"baseExpression":{"id":877,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"8471:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":879,"indexExpression":{"id":878,"name":"voucherTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"8480:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8471:24:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"valid","nodeType":"MemberAccess","referencedDeclaration":266,"src":"8471:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":885,"nodeType":"IfStatement","src":"8467:67:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":882,"name":"VoucherNoLongerInvalid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"8510:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8510:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":884,"nodeType":"RevertStatement","src":"8503:31:5"}},{"assignments":[887],"declarations":[{"constant":false,"id":887,"mutability":"mutable","name":"isInCircle","nameLocation":"8550:10:5","nodeType":"VariableDeclaration","scope":910,"src":"8545:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":886,"name":"bool","nodeType":"ElementaryTypeName","src":"8545:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":898,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":888,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"8563:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":890,"indexExpression":{"id":889,"name":"voterTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"8572:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8563:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"voucher","nodeType":"MemberAccess","referencedDeclaration":264,"src":"8563:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":892,"name":"voucherTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"8597:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8563:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":894,"name":"voterTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"8615:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":895,"name":"voucherTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"8631:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8615:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8563:82:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8545:100:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":899,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"8660:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":901,"indexExpression":{"id":900,"name":"voterTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"8669:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8660:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"valid","nodeType":"MemberAccess","referencedDeclaration":266,"src":"8660:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":903,"name":"isInCircle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"8692:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8660:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":907,"nodeType":"IfStatement","src":"8656:59:5","trueBody":{"expression":{"hexValue":"74727565","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8711:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":857,"id":906,"nodeType":"Return","src":"8704:11:5"}},{"expression":{"hexValue":"66616c7365","id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8741:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":857,"id":909,"nodeType":"Return","src":"8734:12:5"}]},"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"7782:400:5","text":" A tokenId can vote if\n - The voter account is valid\n - AND either\n - voterTokenId was vouched by voucherTokenId (which is the voucher of the challenged tokenId)\n - OR the voterTokenId is the voucherTokenId themselves.\n \n The FOUNDERS_VOUCHER can, in theory vote on founders challenges, but no address owns that \n token and so no problem\n "},"functionSelector":"ef233c0b","id":911,"implemented":true,"kind":"function","modifiers":[],"name":"canVote","nameLocation":"8196:7:5","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"voterTokenId","nameLocation":"8212:12:5","nodeType":"VariableDeclaration","scope":911,"src":"8204:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"8204:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"challengedTokenId","nameLocation":"8234:17:5","nodeType":"VariableDeclaration","scope":911,"src":"8226:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"8226:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8203:49:5"},"returnParameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":911,"src":"8274:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":855,"name":"bool","nodeType":"ElementaryTypeName","src":"8274:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8273:6:5"},"scope":1804,"src":"8187:566:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":955,"nodeType":"Block","src":"8825:275:5","statements":[{"assignments":[920],"declarations":[{"constant":false,"id":920,"mutability":"mutable","name":"account","nameLocation":"8850:7:5","nodeType":"VariableDeclaration","scope":955,"src":"8835:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_memory_ptr","typeString":"struct Registry.Account"},"typeName":{"id":919,"nodeType":"UserDefinedTypeName","pathNode":{"id":918,"name":"Account","nodeType":"IdentifierPath","referencedDeclaration":269,"src":"8835:7:5"},"referencedDeclaration":269,"src":"8835:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage_ptr","typeString":"struct Registry.Account"}},"visibility":"internal"}],"id":924,"initialValue":{"baseExpression":{"id":921,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"8860:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":923,"indexExpression":{"id":922,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"8869:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8860:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8835:42:5"},{"assignments":[926],"declarations":[{"constant":false,"id":926,"mutability":"mutable","name":"vouchDate","nameLocation":"8895:9:5","nodeType":"VariableDeclaration","scope":955,"src":"8887:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":925,"name":"uint256","nodeType":"ElementaryTypeName","src":"8887:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":935,"initialValue":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":927,"name":"vouches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"8907:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vouches_$260_storage_$","typeString":"mapping(uint256 => struct Registry.Vouches storage ref)"}},"id":930,"indexExpression":{"expression":{"id":928,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"8915:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_memory_ptr","typeString":"struct Registry.Account memory"}},"id":929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"voucher","nodeType":"MemberAccess","referencedDeclaration":264,"src":"8915:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8907:24:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage","typeString":"struct Registry.Vouches storage ref"}},"id":931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"vouches","nodeType":"MemberAccess","referencedDeclaration":259,"src":"8907:32:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vouch_$252_storage_$","typeString":"mapping(uint256 => struct Registry.Vouch storage ref)"}},"id":933,"indexExpression":{"id":932,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"8940:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8907:41:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouch_$252_storage","typeString":"struct Registry.Vouch storage ref"}},"id":934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"vouchDate","nodeType":"MemberAccess","referencedDeclaration":251,"src":"8907:51:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8887:71:5"},{"assignments":[937],"declarations":[{"constant":false,"id":937,"mutability":"mutable","name":"isPending","nameLocation":"8974:9:5","nodeType":"VariableDeclaration","scope":955,"src":"8969:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":936,"name":"bool","nodeType":"ElementaryTypeName","src":"8969:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":948,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":938,"name":"vouchDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"8986:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8999:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8986:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":941,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9004:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"9004:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":943,"name":"vouchDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"9023:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":944,"name":"PENDING_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"9035:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9023:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9004:45:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8986:63:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8969:80:5"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9066:10:5","subExpression":{"id":949,"name":"isPending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"9067:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"expression":{"id":951,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"9080:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_memory_ptr","typeString":"struct Registry.Account memory"}},"id":952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"valid","nodeType":"MemberAccess","referencedDeclaration":266,"src":"9080:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9066:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":917,"id":954,"nodeType":"Return","src":"9059:34:5"}]},"functionSelector":"82c0833b","id":956,"implemented":true,"kind":"function","modifiers":[],"name":"isSolidified","nameLocation":"8768:12:5","nodeType":"FunctionDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":913,"mutability":"mutable","name":"tokenId","nameLocation":"8789:7:5","nodeType":"VariableDeclaration","scope":956,"src":"8781:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"8781:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8780:17:5"},"returnParameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":956,"src":"8819:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":915,"name":"bool","nodeType":"ElementaryTypeName","src":"8819:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8818:6:5"},"scope":1804,"src":"8759:341:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":967,"nodeType":"Block","src":"9170:41:5","statements":[{"expression":{"arguments":[{"id":964,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"9198:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":963,"name":"_tokenIdOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"9187:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9187:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":962,"id":966,"nodeType":"Return","src":"9180:24:5"}]},"functionSelector":"773c02d4","id":968,"implemented":true,"kind":"function","modifiers":[],"name":"tokenIdOf","nameLocation":"9115:9:5","nodeType":"FunctionDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"owner","nameLocation":"9133:5:5","nodeType":"VariableDeclaration","scope":968,"src":"9125:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"9125:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9124:15:5"},"returnParameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":968,"src":"9162:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"9162:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9161:9:5"},"scope":1804,"src":"9106:105:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":979,"nodeType":"Block","src":"9282:36:5","statements":[{"expression":{"baseExpression":{"id":975,"name":"owned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"9299:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":977,"indexExpression":{"id":976,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"9305:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9299:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":974,"id":978,"nodeType":"Return","src":"9292:19:5"}]},"id":980,"implemented":true,"kind":"function","modifiers":[],"name":"_tokenIdOf","nameLocation":"9226:10:5","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"owner","nameLocation":"9245:5:5","nodeType":"VariableDeclaration","scope":980,"src":"9237:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"9237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9236:15:5"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":980,"src":"9274:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"9274:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9273:9:5"},"scope":1804,"src":"9217:101:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[40],"body":{"id":992,"nodeType":"Block","src":"9407:43:5","statements":[{"expression":{"arguments":[{"id":989,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"9435:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":988,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"9424:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9424:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":987,"id":991,"nodeType":"Return","src":"9417:26:5"}]},"functionSelector":"70a08231","id":993,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"9333:9:5","nodeType":"FunctionDefinition","overrides":{"id":984,"nodeType":"OverrideSpecifier","overrides":[],"src":"9372:8:5"},"parameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"account","nameLocation":"9351:7:5","nodeType":"VariableDeclaration","scope":993,"src":"9343:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"9343:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9342:17:5"},"returnParameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":986,"mutability":"mutable","name":"balance","nameLocation":"9398:7:5","nodeType":"VariableDeclaration","scope":993,"src":"9390:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"9390:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:17:5"},"scope":1804,"src":"9324:126:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1018,"nodeType":"Block","src":"9533:118:5","statements":[{"assignments":[1001],"declarations":[{"constant":false,"id":1001,"mutability":"mutable","name":"tokenId","nameLocation":"9551:7:5","nodeType":"VariableDeclaration","scope":1018,"src":"9543:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"9543:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1005,"initialValue":{"arguments":[{"id":1003,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"9572:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1002,"name":"_tokenIdOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"9561:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9561:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9543:37:5"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1006,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"9597:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9608:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9597:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"expression":{"baseExpression":{"id":1009,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"9613:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":1011,"indexExpression":{"id":1010,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"9622:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":1012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"valid","nodeType":"MemberAccess","referencedDeclaration":266,"src":"9613:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9597:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9643:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9597:47:5","trueExpression":{"hexValue":"31","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9639:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":999,"id":1017,"nodeType":"Return","src":"9590:54:5"}]},"id":1019,"implemented":true,"kind":"function","modifiers":[],"name":"_balanceOf","nameLocation":"9465:10:5","nodeType":"FunctionDefinition","parameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"account","nameLocation":"9484:7:5","nodeType":"VariableDeclaration","scope":1019,"src":"9476:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":994,"name":"address","nodeType":"ElementaryTypeName","src":"9476:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9475:17:5"},"returnParameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"balance","nameLocation":"9524:7:5","nodeType":"VariableDeclaration","scope":1019,"src":"9516:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":997,"name":"uint256","nodeType":"ElementaryTypeName","src":"9516:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9515:17:5"},"scope":1804,"src":"9456:195:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[48],"body":{"id":1031,"nodeType":"Block","src":"9738:42:5","statements":[{"expression":{"arguments":[{"id":1028,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"9764:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1027,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"9755:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9755:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1026,"id":1030,"nodeType":"Return","src":"9748:24:5"}]},"functionSelector":"6352211e","id":1032,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"9666:7:5","nodeType":"FunctionDefinition","overrides":{"id":1023,"nodeType":"OverrideSpecifier","overrides":[],"src":"9705:8:5"},"parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"tokenId","nameLocation":"9682:7:5","nodeType":"VariableDeclaration","scope":1032,"src":"9674:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"9674:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9673:17:5"},"returnParameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"owner","nameLocation":"9731:5:5","nodeType":"VariableDeclaration","scope":1032,"src":"9723:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"9723:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9722:15:5"},"scope":1804,"src":"9657:123:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1044,"nodeType":"Block","src":"9859:50:5","statements":[{"expression":{"expression":{"baseExpression":{"id":1039,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"9876:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":1041,"indexExpression":{"id":1040,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"9885:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9876:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":1042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"account","nodeType":"MemberAccess","referencedDeclaration":262,"src":"9876:25:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1038,"id":1043,"nodeType":"Return","src":"9869:32:5"}]},"id":1045,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"9795:8:5","nodeType":"FunctionDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"tokenId","nameLocation":"9812:7:5","nodeType":"VariableDeclaration","scope":1045,"src":"9804:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"9804:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9803:17:5"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"owner","nameLocation":"9852:5:5","nodeType":"VariableDeclaration","scope":1045,"src":"9844:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"9844:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9843:15:5"},"scope":1804,"src":"9786:123:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1075,"nodeType":"Block","src":"10079:142:5","statements":[{"assignments":[1063],"declarations":[{"constant":false,"id":1063,"mutability":"mutable","name":"challengeIndex","nameLocation":"10097:14:5","nodeType":"VariableDeclaration","scope":1075,"src":"10089:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"10089:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1068,"initialValue":{"expression":{"baseExpression":{"id":1064,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"10114:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":1066,"indexExpression":{"id":1065,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"10123:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10114:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":1067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"timesChallenged","nodeType":"MemberAccess","referencedDeclaration":268,"src":"10114:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10089:58:5"},{"expression":{"arguments":[{"id":1071,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"10190:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1072,"name":"challengeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"10199:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1069,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10164:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Registry_$1804","typeString":"contract Registry"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSpecificChallenge","nodeType":"MemberAccess","referencedDeclaration":1143,"src":"10164:25:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_int8_$_t_uint256_$_t_uint256_$_t_bool_$","typeString":"function (uint256,uint256) view external returns (uint256,uint256,int8,uint256,uint256,bool)"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10164:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_int8_$_t_uint256_$_t_uint256_$_t_bool_$","typeString":"tuple(uint256,uint256,int8,uint256,uint256,bool)"}},"functionReturnParameters":1061,"id":1074,"nodeType":"Return","src":"10157:57:5"}]},"functionSelector":"1bdd4b74","id":1076,"implemented":true,"kind":"function","modifiers":[],"name":"getChallenge","nameLocation":"9924:12:5","nodeType":"FunctionDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"tokenId","nameLocation":"9945:7:5","nodeType":"VariableDeclaration","scope":1076,"src":"9937:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"9937:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9936:17:5"},"returnParameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"creationDate","nameLocation":"9985:12:5","nodeType":"VariableDeclaration","scope":1076,"src":"9977:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1049,"name":"uint256","nodeType":"ElementaryTypeName","src":"9977:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"endDate","nameLocation":"10007:7:5","nodeType":"VariableDeclaration","scope":1076,"src":"9999:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"lastOutcome","nameLocation":"10021:11:5","nodeType":"VariableDeclaration","scope":1076,"src":"10016:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":1053,"name":"int8","nodeType":"ElementaryTypeName","src":"10016:4:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"nVoted","nameLocation":"10042:6:5","nodeType":"VariableDeclaration","scope":1076,"src":"10034:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"10034:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"nFor","nameLocation":"10058:4:5","nodeType":"VariableDeclaration","scope":1076,"src":"10050:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1057,"name":"uint256","nodeType":"ElementaryTypeName","src":"10050:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"executed","nameLocation":"10069:8:5","nodeType":"VariableDeclaration","scope":1076,"src":"10064:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1059,"name":"bool","nodeType":"ElementaryTypeName","src":"10064:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9976:102:5"},"scope":1804,"src":"9915:306:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1099,"nodeType":"Block","src":"10321:160:5","statements":[{"assignments":[1086],"declarations":[{"constant":false,"id":1086,"mutability":"mutable","name":"challengeIndex","nameLocation":"10339:14:5","nodeType":"VariableDeclaration","scope":1099,"src":"10331:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"10331:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1091,"initialValue":{"expression":{"baseExpression":{"id":1087,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"10356:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":1089,"indexExpression":{"id":1088,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"10365:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10356:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":1090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"timesChallenged","nodeType":"MemberAccess","referencedDeclaration":268,"src":"10356:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10331:58:5"},{"expression":{"arguments":[{"id":1094,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"10436:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1095,"name":"voterTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"10445:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1096,"name":"challengeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"10459:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1092,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10406:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Registry_$1804","typeString":"contract Registry"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSpecificChallengeVote","nodeType":"MemberAccess","referencedDeclaration":1169,"src":"10406:29:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_int8_$","typeString":"function (uint256,uint256,uint256) view external returns (int8)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10406:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"functionReturnParameters":1084,"id":1098,"nodeType":"Return","src":"10399:75:5"}]},"functionSelector":"d61255f3","id":1100,"implemented":true,"kind":"function","modifiers":[],"name":"getChallengeVote","nameLocation":"10236:16:5","nodeType":"FunctionDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1078,"mutability":"mutable","name":"tokenId","nameLocation":"10261:7:5","nodeType":"VariableDeclaration","scope":1100,"src":"10253:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"10253:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"voterTokenId","nameLocation":"10278:12:5","nodeType":"VariableDeclaration","scope":1100,"src":"10270:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"10270:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10252:39:5"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1100,"src":"10315:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":1082,"name":"int8","nodeType":"ElementaryTypeName","src":"10315:4:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"10314:6:5"},"scope":1804,"src":"10227:254:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1142,"nodeType":"Block","src":"10683:226:5","statements":[{"assignments":[1121],"declarations":[{"constant":false,"id":1121,"mutability":"mutable","name":"_challenge","nameLocation":"10711:10:5","nodeType":"VariableDeclaration","scope":1142,"src":"10693:28:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"},"typeName":{"id":1120,"nodeType":"UserDefinedTypeName","pathNode":{"id":1119,"name":"Challenge","nodeType":"IdentifierPath","referencedDeclaration":286,"src":"10693:9:5"},"referencedDeclaration":286,"src":"10693:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"}},"visibility":"internal"}],"id":1127,"initialValue":{"baseExpression":{"baseExpression":{"id":1122,"name":"challenges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"10724:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Challenge_$286_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Registry.Challenge storage ref[] storage ref)"}},"id":1124,"indexExpression":{"id":1123,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"10735:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10724:19:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Challenge_$286_storage_$dyn_storage","typeString":"struct Registry.Challenge storage ref[] storage ref"}},"id":1126,"indexExpression":{"id":1125,"name":"challengeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"10744:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10724:35:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage","typeString":"struct Registry.Challenge storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10693:66:5"},{"expression":{"components":[{"expression":{"id":1128,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"10777:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"creationDate","nodeType":"MemberAccess","referencedDeclaration":275,"src":"10777:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1130,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"10802:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":277,"src":"10802:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1132,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"10822:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastOutcome","nodeType":"MemberAccess","referencedDeclaration":273,"src":"10822:22:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},{"expression":{"id":1134,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"10846:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"nVoted","nodeType":"MemberAccess","referencedDeclaration":283,"src":"10846:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1136,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"10865:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"nFor","nodeType":"MemberAccess","referencedDeclaration":285,"src":"10865:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1138,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"10882:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":271,"src":"10882:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1140,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10776:126:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_int8_$_t_uint256_$_t_uint256_$_t_bool_$","typeString":"tuple(uint256,uint256,int8,uint256,uint256,bool)"}},"functionReturnParameters":1118,"id":1141,"nodeType":"Return","src":"10769:133:5"}]},"functionSelector":"5e3bee73","id":1143,"implemented":true,"kind":"function","modifiers":[],"name":"getSpecificChallenge","nameLocation":"10496:20:5","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"tokenId","nameLocation":"10525:7:5","nodeType":"VariableDeclaration","scope":1143,"src":"10517:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"10517:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"challengeIndex","nameLocation":"10542:14:5","nodeType":"VariableDeclaration","scope":1143,"src":"10534:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"10534:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10516:41:5"},"returnParameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"creationDate","nameLocation":"10589:12:5","nodeType":"VariableDeclaration","scope":1143,"src":"10581:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"10581:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"endDate","nameLocation":"10611:7:5","nodeType":"VariableDeclaration","scope":1143,"src":"10603:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"10603:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"lastOutcome","nameLocation":"10625:11:5","nodeType":"VariableDeclaration","scope":1143,"src":"10620:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":1110,"name":"int8","nodeType":"ElementaryTypeName","src":"10620:4:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"nVoted","nameLocation":"10646:6:5","nodeType":"VariableDeclaration","scope":1143,"src":"10638:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"10638:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"nFor","nameLocation":"10662:4:5","nodeType":"VariableDeclaration","scope":1143,"src":"10654:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"executed","nameLocation":"10673:8:5","nodeType":"VariableDeclaration","scope":1143,"src":"10668:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1116,"name":"bool","nodeType":"ElementaryTypeName","src":"10668:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10580:102:5"},"scope":1804,"src":"10487:422:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1168,"nodeType":"Block","src":"11041:130:5","statements":[{"assignments":[1156],"declarations":[{"constant":false,"id":1156,"mutability":"mutable","name":"_challenge","nameLocation":"11069:10:5","nodeType":"VariableDeclaration","scope":1168,"src":"11051:28:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"},"typeName":{"id":1155,"nodeType":"UserDefinedTypeName","pathNode":{"id":1154,"name":"Challenge","nodeType":"IdentifierPath","referencedDeclaration":286,"src":"11051:9:5"},"referencedDeclaration":286,"src":"11051:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"}},"visibility":"internal"}],"id":1162,"initialValue":{"baseExpression":{"baseExpression":{"id":1157,"name":"challenges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"11082:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Challenge_$286_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Registry.Challenge storage ref[] storage ref)"}},"id":1159,"indexExpression":{"id":1158,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"11093:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11082:19:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Challenge_$286_storage_$dyn_storage","typeString":"struct Registry.Challenge storage ref[] storage ref"}},"id":1161,"indexExpression":{"id":1160,"name":"challengeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"11102:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11082:35:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage","typeString":"struct Registry.Challenge storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11051:66:5"},{"expression":{"baseExpression":{"expression":{"id":1163,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"11134:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":281,"src":"11134:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int8_$","typeString":"mapping(uint256 => int8)"}},"id":1166,"indexExpression":{"id":1165,"name":"voterTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"11151:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11134:30:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"functionReturnParameters":1153,"id":1167,"nodeType":"Return","src":"11127:37:5"}]},"functionSelector":"912dac06","id":1169,"implemented":true,"kind":"function","modifiers":[],"name":"getSpecificChallengeVote","nameLocation":"10924:24:5","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"tokenId","nameLocation":"10957:7:5","nodeType":"VariableDeclaration","scope":1169,"src":"10949:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"10949:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"voterTokenId","nameLocation":"10974:12:5","nodeType":"VariableDeclaration","scope":1169,"src":"10966:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1146,"name":"uint256","nodeType":"ElementaryTypeName","src":"10966:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"challengeIndex","nameLocation":"10996:14:5","nodeType":"VariableDeclaration","scope":1169,"src":"10988:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1148,"name":"uint256","nodeType":"ElementaryTypeName","src":"10988:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10948:63:5"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1169,"src":"11035:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":1151,"name":"int8","nodeType":"ElementaryTypeName","src":"11035:4:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"11034:6:5"},"scope":1804,"src":"10915:256:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1186,"nodeType":"Block","src":"11264:99:5","statements":[{"assignments":[1178],"declarations":[{"constant":false,"id":1178,"mutability":"mutable","name":"_vouches","nameLocation":"11290:8:5","nodeType":"VariableDeclaration","scope":1186,"src":"11274:24:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage_ptr","typeString":"struct Registry.Vouches"},"typeName":{"id":1177,"nodeType":"UserDefinedTypeName","pathNode":{"id":1176,"name":"Vouches","nodeType":"IdentifierPath","referencedDeclaration":260,"src":"11274:7:5"},"referencedDeclaration":260,"src":"11274:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage_ptr","typeString":"struct Registry.Vouches"}},"visibility":"internal"}],"id":1182,"initialValue":{"baseExpression":{"id":1179,"name":"vouches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"11301:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vouches_$260_storage_$","typeString":"mapping(uint256 => struct Registry.Vouches storage ref)"}},"id":1181,"indexExpression":{"id":1180,"name":"voucherTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"11309:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11301:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage","typeString":"struct Registry.Vouches storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11274:50:5"},{"expression":{"expression":{"id":1183,"name":"_vouches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"11341:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage_ptr","typeString":"struct Registry.Vouches storage pointer"}},"id":1184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":254,"src":"11341:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1175,"id":1185,"nodeType":"Return","src":"11334:22:5"}]},"functionSelector":"5d1f0a31","id":1187,"implemented":true,"kind":"function","modifiers":[],"name":"getVoucherVouchesNumber","nameLocation":"11186:23:5","nodeType":"FunctionDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"mutability":"mutable","name":"voucherTokenId","nameLocation":"11218:14:5","nodeType":"VariableDeclaration","scope":1187,"src":"11210:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"11210:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11209:24:5"},"returnParameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1187,"src":"11255:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"11255:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11254:9:5"},"scope":1804,"src":"11177:186:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1209,"nodeType":"Block","src":"11444:110:5","statements":[{"assignments":[1196],"declarations":[{"constant":false,"id":1196,"mutability":"mutable","name":"voucher","nameLocation":"11462:7:5","nodeType":"VariableDeclaration","scope":1209,"src":"11454:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1195,"name":"uint256","nodeType":"ElementaryTypeName","src":"11454:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1201,"initialValue":{"expression":{"baseExpression":{"id":1197,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"11472:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":1199,"indexExpression":{"id":1198,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"11481:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11472:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":1200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"voucher","nodeType":"MemberAccess","referencedDeclaration":264,"src":"11472:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11454:43:5"},{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":1202,"name":"vouches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"11514:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vouches_$260_storage_$","typeString":"mapping(uint256 => struct Registry.Vouches storage ref)"}},"id":1204,"indexExpression":{"id":1203,"name":"voucher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"11522:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11514:16:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage","typeString":"struct Registry.Vouches storage ref"}},"id":1205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"vouches","nodeType":"MemberAccess","referencedDeclaration":259,"src":"11514:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vouch_$252_storage_$","typeString":"mapping(uint256 => struct Registry.Vouch storage ref)"}},"id":1207,"indexExpression":{"id":1206,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"11539:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11514:33:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouch_$252_storage","typeString":"struct Registry.Vouch storage ref"}},"functionReturnParameters":1194,"id":1208,"nodeType":"Return","src":"11507:40:5"}]},"functionSelector":"130a8d80","id":1210,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenVouch","nameLocation":"11378:13:5","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"tokenId","nameLocation":"11400:7:5","nodeType":"VariableDeclaration","scope":1210,"src":"11392:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"11392:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11391:17:5"},"returnParameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1210,"src":"11430:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vouch_$252_memory_ptr","typeString":"struct Registry.Vouch"},"typeName":{"id":1192,"nodeType":"UserDefinedTypeName","pathNode":{"id":1191,"name":"Vouch","nodeType":"IdentifierPath","referencedDeclaration":252,"src":"11430:5:5"},"referencedDeclaration":252,"src":"11430:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouch_$252_storage_ptr","typeString":"struct Registry.Vouch"}},"visibility":"internal"}],"src":"11429:14:5"},"scope":1804,"src":"11369:185:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1222,"nodeType":"Block","src":"11634:41:5","statements":[{"expression":{"baseExpression":{"id":1218,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"11651:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":1220,"indexExpression":{"id":1219,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"11660:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11651:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"functionReturnParameters":1217,"id":1221,"nodeType":"Return","src":"11644:24:5"}]},"functionSelector":"ce88b145","id":1223,"implemented":true,"kind":"function","modifiers":[],"name":"getAccount","nameLocation":"11569:10:5","nodeType":"FunctionDefinition","parameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"tokenId","nameLocation":"11588:7:5","nodeType":"VariableDeclaration","scope":1223,"src":"11580:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"11580:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11579:17:5"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1223,"src":"11618:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_memory_ptr","typeString":"struct Registry.Account"},"typeName":{"id":1215,"nodeType":"UserDefinedTypeName","pathNode":{"id":1214,"name":"Account","nodeType":"IdentifierPath","referencedDeclaration":269,"src":"11618:7:5"},"referencedDeclaration":269,"src":"11618:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage_ptr","typeString":"struct Registry.Account"}},"visibility":"internal"}],"src":"11617:16:5"},"scope":1804,"src":"11560:115:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1231,"nodeType":"Block","src":"11731:35:5","statements":[{"expression":{"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"11748:11:5","subExpression":{"id":1228,"name":"_nEntries","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"11750:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1227,"id":1230,"nodeType":"Return","src":"11741:18:5"}]},"id":1232,"implemented":true,"kind":"function","modifiers":[],"name":"nextTokenId","nameLocation":"11690:11:5","nodeType":"FunctionDefinition","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[],"src":"11701:2:5"},"returnParameters":{"id":1227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1232,"src":"11722:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1225,"name":"uint256","nodeType":"ElementaryTypeName","src":"11722:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11721:9:5"},"scope":1804,"src":"11681:85:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1345,"nodeType":"Block","src":"12041:979:5","statements":[{"assignments":[1243],"declarations":[{"constant":false,"id":1243,"mutability":"mutable","name":"_tokenId","nameLocation":"12059:8:5","nodeType":"VariableDeclaration","scope":1345,"src":"12051:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1242,"name":"uint256","nodeType":"ElementaryTypeName","src":"12051:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1246,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1244,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"12070:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12070:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12051:32:5"},{"condition":{"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12096:32:5","subExpression":{"expression":{"baseExpression":{"id":1247,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"12097:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":1249,"indexExpression":{"id":1248,"name":"_voucherTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"12106:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12097:25:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":1250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"valid","nodeType":"MemberAccess","referencedDeclaration":266,"src":"12097:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1255,"nodeType":"IfStatement","src":"12093:66:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1252,"name":"ErrorVoucherNotValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"12137:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12137:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1254,"nodeType":"RevertStatement","src":"12130:29:5"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1256,"name":"owned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"12173:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1258,"indexExpression":{"id":1257,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"12179:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12173:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12192:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12173:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1264,"nodeType":"IfStatement","src":"12169:61:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1261,"name":"AccountAlreadyOwnsOneToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"12202:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12202:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1263,"nodeType":"RevertStatement","src":"12195:35:5"}},{"assignments":[1267],"declarations":[{"constant":false,"id":1267,"mutability":"mutable","name":"tokenVouches","nameLocation":"12265:12:5","nodeType":"VariableDeclaration","scope":1345,"src":"12249:28:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage_ptr","typeString":"struct Registry.Vouches"},"typeName":{"id":1266,"nodeType":"UserDefinedTypeName","pathNode":{"id":1265,"name":"Vouches","nodeType":"IdentifierPath","referencedDeclaration":260,"src":"12249:7:5"},"referencedDeclaration":260,"src":"12249:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage_ptr","typeString":"struct Registry.Vouches"}},"visibility":"internal"}],"id":1271,"initialValue":{"baseExpression":{"id":1268,"name":"vouches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"12280:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vouches_$260_storage_$","typeString":"mapping(uint256 => struct Registry.Vouches storage ref)"}},"id":1270,"indexExpression":{"id":1269,"name":"_voucherTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"12288:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12280:24:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage","typeString":"struct Registry.Vouches storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12249:55:5"},{"assignments":[1274],"declarations":[{"constant":false,"id":1274,"mutability":"mutable","name":"__vouch","nameLocation":"12328:7:5","nodeType":"VariableDeclaration","scope":1345,"src":"12314:21:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Vouch_$252_storage_ptr","typeString":"struct Registry.Vouch"},"typeName":{"id":1273,"nodeType":"UserDefinedTypeName","pathNode":{"id":1272,"name":"Vouch","nodeType":"IdentifierPath","referencedDeclaration":252,"src":"12314:5:5"},"referencedDeclaration":252,"src":"12314:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouch_$252_storage_ptr","typeString":"struct Registry.Vouch"}},"visibility":"internal"}],"id":1279,"initialValue":{"baseExpression":{"expression":{"id":1275,"name":"tokenVouches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"12338:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage_ptr","typeString":"struct Registry.Vouches storage pointer"}},"id":1276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"vouches","nodeType":"MemberAccess","referencedDeclaration":259,"src":"12338:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vouch_$252_storage_$","typeString":"mapping(uint256 => struct Registry.Vouch storage ref)"}},"id":1278,"indexExpression":{"id":1277,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"12359:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12338:30:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouch_$252_storage","typeString":"struct Registry.Vouch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12314:54:5"},{"documentation":" Store the vouch data, validate and store the account data, set the owned mapping and update the \n total number of vouches and entries in the registry","expression":{"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1280,"name":"__vouch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"12575:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouch_$252_storage_ptr","typeString":"struct Registry.Vouch storage pointer"}},"id":1282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"personCid","nodeType":"MemberAccess","referencedDeclaration":249,"src":"12575:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1283,"name":"_personCid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"12595:10:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"12575:30:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1285,"nodeType":"ExpressionStatement","src":"12575:30:5"},{"expression":{"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1286,"name":"__vouch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"12615:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouch_$252_storage_ptr","typeString":"struct Registry.Vouch storage pointer"}},"id":1288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"vouchDate","nodeType":"MemberAccess","referencedDeclaration":251,"src":"12615:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1289,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12635:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"12635:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12615:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1292,"nodeType":"ExpressionStatement","src":"12615:35:5"},{"expression":{"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1293,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"12661:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":1295,"indexExpression":{"id":1294,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"12670:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12661:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":1296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"account","nodeType":"MemberAccess","referencedDeclaration":262,"src":"12661:26:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1297,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"12690:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12661:37:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1299,"nodeType":"ExpressionStatement","src":"12661:37:5"},{"expression":{"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1300,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"12708:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":1302,"indexExpression":{"id":1301,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"12717:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12708:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":1303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"voucher","nodeType":"MemberAccess","referencedDeclaration":264,"src":"12708:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1304,"name":"_voucherTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"12737:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12708:44:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1306,"nodeType":"ExpressionStatement","src":"12708:44:5"},{"expression":{"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1307,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"12762:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":1309,"indexExpression":{"id":1308,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"12771:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12762:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":1310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"valid","nodeType":"MemberAccess","referencedDeclaration":266,"src":"12762:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12789:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12762:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1313,"nodeType":"ExpressionStatement","src":"12762:31:5"},{"expression":{"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1314,"name":"owned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"12804:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1316,"indexExpression":{"id":1315,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"12810:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12804:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1317,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"12822:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12804:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1319,"nodeType":"ExpressionStatement","src":"12804:26:5"},{"expression":{"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1320,"name":"tokenVouches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"12841:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage_ptr","typeString":"struct Registry.Vouches storage pointer"}},"id":1322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":254,"src":"12841:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12864:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12841:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1325,"nodeType":"ExpressionStatement","src":"12841:24:5"},{"expression":{"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1326,"name":"__totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"12875:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12892:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12875:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1329,"nodeType":"ExpressionStatement","src":"12875:18:5"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12926:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12918:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"12918:7:5","typeDescriptions":{}}},"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12918:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1335,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"12930:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1336,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"12940:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1330,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"12909:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12909:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1338,"nodeType":"EmitStatement","src":"12904:45:5"},{"eventCall":{"arguments":[{"id":1340,"name":"_voucherTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"12975:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1341,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"12992:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1342,"name":"_personCid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"13002:10:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1339,"name":"VouchEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"12964:10:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12964:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1344,"nodeType":"EmitStatement","src":"12959:54:5"}]},"documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"11838:104:5","text":"Claiming is always enabled (effectively possible only when a non-zero approved merkleRoot is set) "},"id":1346,"implemented":true,"kind":"function","modifiers":[],"name":"_vouch","nameLocation":"11956:6:5","nodeType":"FunctionDefinition","parameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"_voucherTokenId","nameLocation":"11971:15:5","nodeType":"VariableDeclaration","scope":1346,"src":"11963:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"11963:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"_account","nameLocation":"11996:8:5","nodeType":"VariableDeclaration","scope":1346,"src":"11988:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"11988:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"_personCid","nameLocation":"12020:10:5","nodeType":"VariableDeclaration","scope":1346,"src":"12006:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1238,"name":"string","nodeType":"ElementaryTypeName","src":"12006:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11962:69:5"},"returnParameters":{"id":1241,"nodeType":"ParameterList","parameters":[],"src":"12041:0:5"},"scope":1804,"src":"11947:1073:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1403,"nodeType":"Block","src":"13080:641:5","statements":[{"assignments":[1353],"declarations":[{"constant":false,"id":1353,"mutability":"mutable","name":"account","nameLocation":"13106:7:5","nodeType":"VariableDeclaration","scope":1403,"src":"13090:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage_ptr","typeString":"struct Registry.Account"},"typeName":{"id":1352,"nodeType":"UserDefinedTypeName","pathNode":{"id":1351,"name":"Account","nodeType":"IdentifierPath","referencedDeclaration":269,"src":"13090:7:5"},"referencedDeclaration":269,"src":"13090:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage_ptr","typeString":"struct Registry.Account"}},"visibility":"internal"}],"id":1357,"initialValue":{"baseExpression":{"id":1354,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"13116:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":1356,"indexExpression":{"id":1355,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"13125:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13116:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13090:43:5"},{"condition":{"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13148:14:5","subExpression":{"expression":{"id":1358,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"13149:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage_ptr","typeString":"struct Registry.Account storage pointer"}},"id":1359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"valid","nodeType":"MemberAccess","referencedDeclaration":266,"src":"13149:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1364,"nodeType":"IfStatement","src":"13144:49:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1361,"name":"ErrorAccountNotValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"13171:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13171:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1363,"nodeType":"RevertStatement","src":"13164:29:5"}},{"documentation":" invalidate and remove the one-to-one relationship\n between the accounts and the owned mappings","expression":{"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1365,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"13353:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage_ptr","typeString":"struct Registry.Account storage pointer"}},"id":1367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"valid","nodeType":"MemberAccess","referencedDeclaration":266,"src":"13353:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13369:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13353:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1370,"nodeType":"ExpressionStatement","src":"13353:21:5"},{"expression":{"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1371,"name":"owned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"13393:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1374,"indexExpression":{"expression":{"id":1372,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"13399:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage_ptr","typeString":"struct Registry.Account storage pointer"}},"id":1373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"account","nodeType":"MemberAccess","referencedDeclaration":262,"src":"13399:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13393:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13418:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13393:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1377,"nodeType":"ExpressionStatement","src":"13393:26:5"},{"expression":{"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1378,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"13429:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage_ptr","typeString":"struct Registry.Account storage pointer"}},"id":1380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"account","nodeType":"MemberAccess","referencedDeclaration":262,"src":"13429:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13455:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13447:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"13447:7:5","typeDescriptions":{}}},"id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13447:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13429:28:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1386,"nodeType":"ExpressionStatement","src":"13429:28:5"},{"documentation":"decrease the number of valid members of the circle ","expression":{"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1387,"name":"vouches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"13534:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vouches_$260_storage_$","typeString":"mapping(uint256 => struct Registry.Vouches storage ref)"}},"id":1390,"indexExpression":{"expression":{"id":1388,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"13542:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage_ptr","typeString":"struct Registry.Account storage pointer"}},"id":1389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"voucher","nodeType":"MemberAccess","referencedDeclaration":264,"src":"13542:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13534:24:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage","typeString":"struct Registry.Vouches storage ref"}},"id":1391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":254,"src":"13534:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13569:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13534:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1394,"nodeType":"ExpressionStatement","src":"13534:36:5"},{"documentation":"decrease the number of total entries in the registry ","expression":{"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1395,"name":"__totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"13648:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13665:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13648:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1398,"nodeType":"ExpressionStatement","src":"13648:18:5"},{"eventCall":{"arguments":[{"id":1400,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"13706:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1399,"name":"InvalidatedAccountEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"13682:23:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13682:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1402,"nodeType":"EmitStatement","src":"13677:37:5"}]},"id":1404,"implemented":true,"kind":"function","modifiers":[],"name":"_invalidateAccount","nameLocation":"13035:18:5","nodeType":"FunctionDefinition","parameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"tokenId","nameLocation":"13062:7:5","nodeType":"VariableDeclaration","scope":1404,"src":"13054:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"13054:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13053:17:5"},"returnParameters":{"id":1350,"nodeType":"ParameterList","parameters":[],"src":"13080:0:5"},"scope":1804,"src":"13026:695:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1605,"nodeType":"Block","src":"13806:1904:5","statements":[{"assignments":[1413],"declarations":[{"constant":false,"id":1413,"mutability":"mutable","name":"executed","nameLocation":"13821:8:5","nodeType":"VariableDeclaration","scope":1605,"src":"13816:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1412,"name":"bool","nodeType":"ElementaryTypeName","src":"13816:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1415,"initialValue":{"hexValue":"66616c7365","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13832:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"13816:21:5"},{"assignments":[1417],"declarations":[{"constant":false,"id":1417,"mutability":"mutable","name":"activeRatio","nameLocation":"13855:11:5","nodeType":"VariableDeclaration","scope":1605,"src":"13847:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1416,"name":"uint256","nodeType":"ElementaryTypeName","src":"13847:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1419,"initialValue":{"hexValue":"30","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13869:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13847:23:5"},{"assignments":[1421],"declarations":[{"constant":false,"id":1421,"mutability":"mutable","name":"relRatio","nameLocation":"13888:8:5","nodeType":"VariableDeclaration","scope":1605,"src":"13880:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"13880:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1423,"initialValue":{"hexValue":"30","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13899:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13880:20:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1424,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"14047:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"nVoted","nodeType":"MemberAccess","referencedDeclaration":283,"src":"14047:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14047:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" keep track of outcome changes, if outcome changed recently,\n extend the voting period","id":1447,"nodeType":"IfStatement","src":"14043:130:5","trueBody":{"id":1446,"nodeType":"Block","src":"14070:103:5","statements":[{"expression":{"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1428,"name":"relRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"14084:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"31653138","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14155:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"expression":{"id":1437,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"14133:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"nVoted","nodeType":"MemberAccess","referencedDeclaration":283,"src":"14133:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":4141,"src":"14133:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14133:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"31653138","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14123:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"id":1433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14115:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"14115:7:5","typeDescriptions":{}}},"id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14115:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":3792,"src":"14115:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14115:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1429,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"14095:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"nFor","nodeType":"MemberAccess","referencedDeclaration":285,"src":"14095:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":4141,"src":"14095:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14095:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14084:78:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1445,"nodeType":"ExpressionStatement","src":"14084:78:5"}]}},{"assignments":[1449],"declarations":[{"constant":false,"id":1449,"mutability":"mutable","name":"currentOutcome","nameLocation":"14188:14:5","nodeType":"VariableDeclaration","scope":1605,"src":"14183:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":1448,"name":"int8","nodeType":"ElementaryTypeName","src":"14183:4:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"id":1463,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1450,"name":"relRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"14205:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"302e35653138","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14217:6:5","typeDescriptions":{"typeIdentifier":"t_rational_500000000000000000_by_1","typeString":"int_const 500000000000000000"},"value":"0.5e18"},"src":"14205:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14241:2:5","subExpression":{"hexValue":"31","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14242:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":1458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14236:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":1457,"name":"int8","nodeType":"ElementaryTypeName","src":"14236:4:5","typeDescriptions":{}}},"id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14236:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14205:39:5","trueExpression":{"arguments":[{"hexValue":"31","id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14231:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14226:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":1453,"name":"int8","nodeType":"ElementaryTypeName","src":"14226:4:5","typeDescriptions":{}}},"id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14226:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"VariableDeclarationStatement","src":"14183:61:5"},{"condition":{"commonType":{"typeIdentifier":"t_int8","typeString":"int8"},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1464,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"14309:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastOutcome","nodeType":"MemberAccess","referencedDeclaration":273,"src":"14309:22:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1466,"name":"currentOutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"14335:14:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"14309:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":"Initialize the lastoutcome ","id":1508,"nodeType":"IfStatement","src":"14305:472:5","trueBody":{"id":1507,"nodeType":"Block","src":"14351:426:5","statements":[{"expression":{"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1468,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"14365:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastOutcome","nodeType":"MemberAccess","referencedDeclaration":273,"src":"14365:22:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1471,"name":"currentOutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"14390:14:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"14365:39:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":1473,"nodeType":"ExpressionStatement","src":"14365:39:5"},{"assignments":[1475],"declarations":[{"constant":false,"id":1475,"mutability":"mutable","name":"timeRemaining","nameLocation":"14439:13:5","nodeType":"VariableDeclaration","scope":1507,"src":"14431:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"14431:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1481,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1476,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"14455:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1477,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":277,"src":"14455:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1478,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14476:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"14476:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14455:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14431:60:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1482,"name":"timeRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"14509:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1483,"name":"QUIET_ENDING_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"14525:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14509:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1506,"nodeType":"IfStatement","src":"14506:261:5","trueBody":{"id":1505,"nodeType":"Block","src":"14546:221:5","statements":[{"assignments":[1486],"declarations":[{"constant":false,"id":1486,"mutability":"mutable","name":"newEndDate","nameLocation":"14572:10:5","nodeType":"VariableDeclaration","scope":1505,"src":"14564:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"14564:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1494,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1487,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"14585:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":277,"src":"14585:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1489,"name":"QUIET_ENDING_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"14607:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1490,"name":"timeRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"14629:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14607:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14606:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14585:58:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14564:79:5"},{"eventCall":{"arguments":[{"id":1496,"name":"newEndDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"14692:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1495,"name":"VotingPeriodExtendedEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"14666:25:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14666:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1498,"nodeType":"EmitStatement","src":"14661:42:5"},{"expression":{"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1499,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"14721:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":277,"src":"14721:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1502,"name":"newEndDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"14742:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14721:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1504,"nodeType":"ExpressionStatement","src":"14721:31:5"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1509,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14833:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"14833:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1511,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"14852:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1512,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":277,"src":"14852:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14833:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":"if challenge still pending ","falseBody":{"id":1547,"nodeType":"Block","src":"15128:162:5","statements":[{"documentation":"time period ended, the challenge is settled with relative majority ","expression":{"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1539,"name":"executed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"15228:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15239:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"15228:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1542,"nodeType":"ExpressionStatement","src":"15228:15:5"},{"expression":{"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1543,"name":"activeRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"15257:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1544,"name":"relRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"15271:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15257:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1546,"nodeType":"ExpressionStatement","src":"15257:22:5"}]},"id":1548,"nodeType":"IfStatement","src":"14829:461:5","trueBody":{"id":1538,"nodeType":"Block","src":"14872:250:5","statements":[{"assignments":[1516],"declarations":[{"constant":false,"id":1516,"mutability":"mutable","name":"totalVoters","nameLocation":"14984:11:5","nodeType":"VariableDeclaration","scope":1538,"src":"14976:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"14976:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"documentation":"vote period not ended, the challenge is settled with absolute majority ","id":1520,"initialValue":{"arguments":[{"id":1518,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"15013:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1517,"name":"getTotalVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"14998:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14998:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14976:46:5"},{"expression":{"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1521,"name":"activeRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"15036:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"31653138","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15104:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"id":1530,"name":"totalVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"15088:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":4141,"src":"15088:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15088:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"31653138","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15078:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"id":1526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15070:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1525,"name":"uint256","nodeType":"ElementaryTypeName","src":"15070:7:5","typeDescriptions":{}}},"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15070:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":3792,"src":"15070:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15070:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1522,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"15050:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"nFor","nodeType":"MemberAccess","referencedDeclaration":285,"src":"15050:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":4141,"src":"15050:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15050:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15036:75:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1537,"nodeType":"ExpressionStatement","src":"15036:75:5"}]}},{"assignments":[1550],"declarations":[{"constant":false,"id":1550,"mutability":"mutable","name":"outcome","nameLocation":"15305:7:5","nodeType":"VariableDeclaration","scope":1605,"src":"15300:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":1549,"name":"int8","nodeType":"ElementaryTypeName","src":"15300:4:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"id":1564,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1551,"name":"activeRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"15315:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"302e35653138","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15330:6:5","typeDescriptions":{"typeIdentifier":"t_rational_500000000000000000_by_1","typeString":"int_const 500000000000000000"},"value":"0.5e18"},"src":"15315:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"15354:2:5","subExpression":{"hexValue":"31","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15355:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15349:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":1558,"name":"int8","nodeType":"ElementaryTypeName","src":"15349:4:5","typeDescriptions":{}}},"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15349:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15315:42:5","trueExpression":{"arguments":[{"hexValue":"31","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15344:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15339:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":1554,"name":"int8","nodeType":"ElementaryTypeName","src":"15339:4:5","typeDescriptions":{}}},"id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15339:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"VariableDeclarationStatement","src":"15300:57:5"},{"condition":{"commonType":{"typeIdentifier":"t_int8","typeString":"int8"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1565,"name":"outcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"15372:7:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"31","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15388:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15383:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":1566,"name":"int8","nodeType":"ElementaryTypeName","src":"15383:4:5","typeDescriptions":{}}},"id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15383:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"15372:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1584,"nodeType":"IfStatement","src":"15368:157:5","trueBody":{"id":1583,"nodeType":"Block","src":"15392:133:5","statements":[{"expression":{"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1571,"name":"executed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"15406:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15417:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"15406:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1574,"nodeType":"ExpressionStatement","src":"15406:15:5"},{"eventCall":{"arguments":[{"id":1576,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"15463:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1575,"name":"InvalidatedByChallenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"15440:22:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15440:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1578,"nodeType":"EmitStatement","src":"15435:37:5"},{"expression":{"arguments":[{"id":1580,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"15505:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1579,"name":"_invalidateAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"15486:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15486:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1582,"nodeType":"ExpressionStatement","src":"15486:28:5"}]}},{"condition":{"id":1585,"name":"executed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"15538:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1604,"nodeType":"IfStatement","src":"15535:169:5","trueBody":{"id":1603,"nodeType":"Block","src":"15548:156:5","statements":[{"eventCall":{"arguments":[{"id":1587,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"15585:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1588,"name":"outcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"15595:7:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int8","typeString":"int8"}],"id":1586,"name":"ChallengeExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"15567:17:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_int8_$returns$__$","typeString":"function (uint256,int8)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15567:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1590,"nodeType":"EmitStatement","src":"15562:41:5"},{"expression":{"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1591,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"15617:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":271,"src":"15617:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15639:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"15617:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1596,"nodeType":"ExpressionStatement","src":"15617:26:5"},{"expression":{"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15657:36:5","subExpression":{"expression":{"baseExpression":{"id":1597,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"15657:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":1599,"indexExpression":{"id":1598,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"15666:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15657:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":1600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"timesChallenged","nodeType":"MemberAccess","referencedDeclaration":268,"src":"15657:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1602,"nodeType":"ExpressionStatement","src":"15657:36:5"}]}}]},"id":1606,"implemented":true,"kind":"function","modifiers":[],"name":"_executeVote","nameLocation":"13736:12:5","nodeType":"FunctionDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"_challenge","nameLocation":"13767:10:5","nodeType":"VariableDeclaration","scope":1606,"src":"13749:28:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"},"typeName":{"id":1406,"nodeType":"UserDefinedTypeName","pathNode":{"id":1405,"name":"Challenge","nodeType":"IdentifierPath","referencedDeclaration":286,"src":"13749:9:5"},"referencedDeclaration":286,"src":"13749:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"_tokenId","nameLocation":"13787:8:5","nodeType":"VariableDeclaration","scope":1606,"src":"13779:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1408,"name":"uint256","nodeType":"ElementaryTypeName","src":"13779:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13748:48:5"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[],"src":"13806:0:5"},"scope":1804,"src":"13727:1983:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1660,"nodeType":"Block","src":"16131:449:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int8","typeString":"int8"},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1617,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"16144:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":281,"src":"16144:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int8_$","typeString":"mapping(uint256 => int8)"}},"id":1620,"indexExpression":{"id":1619,"name":"voterTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"16161:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16144:30:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16178:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16144:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1626,"nodeType":"IfStatement","src":"16141:66:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1623,"name":"ErrorVoteNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"16188:17:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16188:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1625,"nodeType":"RevertStatement","src":"16181:26:5"}},{"condition":{"expression":{"baseExpression":{"id":1627,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"16220:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":1629,"indexExpression":{"id":1628,"name":"voterTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"16229:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16220:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":1630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"valid","nodeType":"MemberAccess","referencedDeclaration":266,"src":"16220:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1634,"nodeType":"IfStatement","src":"16217:57:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1631,"name":"ErrorVoterValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"16257:15:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16257:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1633,"nodeType":"RevertStatement","src":"16250:24:5"}},{"documentation":"decrease the total number of voters ","expression":{"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1635,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"16336:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1637,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"nVoted","nodeType":"MemberAccess","referencedDeclaration":283,"src":"16336:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16357:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16336:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1640,"nodeType":"ExpressionStatement","src":"16336:22:5"},{"condition":{"commonType":{"typeIdentifier":"t_int8","typeString":"int8"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1641,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"16433:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":281,"src":"16433:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int8_$","typeString":"mapping(uint256 => int8)"}},"id":1644,"indexExpression":{"id":1643,"name":"voterTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"16450:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16433:30:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16467:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16433:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":"delete the positive vote of the invalid voter","id":1654,"nodeType":"IfStatement","src":"16429:86:5","trueBody":{"id":1653,"nodeType":"Block","src":"16470:45:5","statements":[{"expression":{"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1647,"name":"_challenge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"16484:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge storage pointer"}},"id":1649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"nFor","nodeType":"MemberAccess","referencedDeclaration":285,"src":"16484:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16503:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16484:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1652,"nodeType":"ExpressionStatement","src":"16484:20:5"}]}},{"eventCall":{"arguments":[{"id":1656,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"16551:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1657,"name":"voterTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"16560:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1655,"name":"InvalidatedVoteEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"16530:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16530:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1659,"nodeType":"EmitStatement","src":"16525:48:5"}]},"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"15716:307:5","text":" Votes must be manually invalidated when a voter passes from valid to invalid. Automatic invalidation consume storage and this seems good enough\n A voter should call \"vote\" to invalidate an account and \"_invalidateVote\" on all the open challenges of the recently invalidated account."},"id":1661,"implemented":true,"kind":"function","modifiers":[],"name":"_invalidateVote","nameLocation":"16037:15:5","nodeType":"FunctionDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"tokenId","nameLocation":"16061:7:5","nodeType":"VariableDeclaration","scope":1661,"src":"16053:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"16053:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1612,"mutability":"mutable","name":"_challenge","nameLocation":"16088:10:5","nodeType":"VariableDeclaration","scope":1661,"src":"16070:28:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"},"typeName":{"id":1611,"nodeType":"UserDefinedTypeName","pathNode":{"id":1610,"name":"Challenge","nodeType":"IdentifierPath","referencedDeclaration":286,"src":"16070:9:5"},"referencedDeclaration":286,"src":"16070:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Challenge_$286_storage_ptr","typeString":"struct Registry.Challenge"}},"visibility":"internal"},{"constant":false,"id":1614,"mutability":"mutable","name":"voterTokenId","nameLocation":"16108:12:5","nodeType":"VariableDeclaration","scope":1661,"src":"16100:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"16100:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16052:69:5"},"returnParameters":{"id":1616,"nodeType":"ParameterList","parameters":[],"src":"16131:0:5"},"scope":1804,"src":"16028:552:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[206],"body":{"id":1669,"nodeType":"Block","src":"16671:2:5","statements":[]},"functionSelector":"01ffc9a7","id":1670,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"16595:17:5","nodeType":"FunctionDefinition","overrides":{"id":1665,"nodeType":"OverrideSpecifier","overrides":[],"src":"16647:8:5"},"parameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"mutability":"mutable","name":"interfaceId","nameLocation":"16620:11:5","nodeType":"VariableDeclaration","scope":1670,"src":"16613:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1662,"name":"bytes4","nodeType":"ElementaryTypeName","src":"16613:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"16612:20:5"},"returnParameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1670,"src":"16665:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1666,"name":"bool","nodeType":"ElementaryTypeName","src":"16665:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16664:6:5"},"scope":1804,"src":"16586:87:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[60],"body":{"id":1682,"nodeType":"Block","src":"16787:2:5","statements":[]},"functionSelector":"b88d4fde","id":1683,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"16688:16:5","nodeType":"FunctionDefinition","overrides":{"id":1680,"nodeType":"OverrideSpecifier","overrides":[],"src":"16778:8:5"},"parameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"from","nameLocation":"16713:4:5","nodeType":"VariableDeclaration","scope":1683,"src":"16705:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"16705:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1674,"mutability":"mutable","name":"to","nameLocation":"16727:2:5","nodeType":"VariableDeclaration","scope":1683,"src":"16719:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1673,"name":"address","nodeType":"ElementaryTypeName","src":"16719:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1676,"mutability":"mutable","name":"tokenId","nameLocation":"16739:7:5","nodeType":"VariableDeclaration","scope":1683,"src":"16731:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"16731:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"data","nameLocation":"16763:4:5","nodeType":"VariableDeclaration","scope":1683,"src":"16748:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1677,"name":"bytes","nodeType":"ElementaryTypeName","src":"16748:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16704:64:5"},"returnParameters":{"id":1681,"nodeType":"ParameterList","parameters":[],"src":"16787:0:5"},"scope":1804,"src":"16679:110:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[70],"body":{"id":1693,"nodeType":"Block","src":"16882:2:5","statements":[]},"functionSelector":"42842e0e","id":1694,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"16804:16:5","nodeType":"FunctionDefinition","overrides":{"id":1691,"nodeType":"OverrideSpecifier","overrides":[],"src":"16873:8:5"},"parameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1685,"mutability":"mutable","name":"from","nameLocation":"16829:4:5","nodeType":"VariableDeclaration","scope":1694,"src":"16821:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1684,"name":"address","nodeType":"ElementaryTypeName","src":"16821:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1687,"mutability":"mutable","name":"to","nameLocation":"16843:2:5","nodeType":"VariableDeclaration","scope":1694,"src":"16835:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1686,"name":"address","nodeType":"ElementaryTypeName","src":"16835:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1689,"mutability":"mutable","name":"tokenId","nameLocation":"16855:7:5","nodeType":"VariableDeclaration","scope":1694,"src":"16847:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1688,"name":"uint256","nodeType":"ElementaryTypeName","src":"16847:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16820:43:5"},"returnParameters":{"id":1692,"nodeType":"ParameterList","parameters":[],"src":"16882:0:5"},"scope":1804,"src":"16795:89:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[80],"body":{"id":1704,"nodeType":"Block","src":"16973:2:5","statements":[]},"functionSelector":"23b872dd","id":1705,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"16899:12:5","nodeType":"FunctionDefinition","overrides":{"id":1702,"nodeType":"OverrideSpecifier","overrides":[],"src":"16964:8:5"},"parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"from","nameLocation":"16920:4:5","nodeType":"VariableDeclaration","scope":1705,"src":"16912:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"16912:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"to","nameLocation":"16934:2:5","nodeType":"VariableDeclaration","scope":1705,"src":"16926:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1697,"name":"address","nodeType":"ElementaryTypeName","src":"16926:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"tokenId","nameLocation":"16946:7:5","nodeType":"VariableDeclaration","scope":1705,"src":"16938:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"16938:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16911:43:5"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[],"src":"16973:0:5"},"scope":1804,"src":"16890:85:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[88],"body":{"id":1713,"nodeType":"Block","src":"17045:2:5","statements":[]},"functionSelector":"095ea7b3","id":1714,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"16990:7:5","nodeType":"FunctionDefinition","overrides":{"id":1711,"nodeType":"OverrideSpecifier","overrides":[],"src":"17036:8:5"},"parameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"to","nameLocation":"17006:2:5","nodeType":"VariableDeclaration","scope":1714,"src":"16998:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1706,"name":"address","nodeType":"ElementaryTypeName","src":"16998:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1709,"mutability":"mutable","name":"tokenId","nameLocation":"17018:7:5","nodeType":"VariableDeclaration","scope":1714,"src":"17010:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"17010:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16997:29:5"},"returnParameters":{"id":1712,"nodeType":"ParameterList","parameters":[],"src":"17045:0:5"},"scope":1804,"src":"16981:66:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[96],"body":{"id":1722,"nodeType":"Block","src":"17131:2:5","statements":[]},"functionSelector":"a22cb465","id":1723,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"17062:17:5","nodeType":"FunctionDefinition","overrides":{"id":1720,"nodeType":"OverrideSpecifier","overrides":[],"src":"17122:8:5"},"parameters":{"id":1719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"operator","nameLocation":"17088:8:5","nodeType":"VariableDeclaration","scope":1723,"src":"17080:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"17080:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1718,"mutability":"mutable","name":"approved","nameLocation":"17103:8:5","nodeType":"VariableDeclaration","scope":1723,"src":"17098:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1717,"name":"bool","nodeType":"ElementaryTypeName","src":"17098:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17079:33:5"},"returnParameters":{"id":1721,"nodeType":"ParameterList","parameters":[],"src":"17131:0:5"},"scope":1804,"src":"17053:80:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[104],"body":{"id":1736,"nodeType":"Block","src":"17219:34:5","statements":[{"expression":{"arguments":[{"hexValue":"30","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17244:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17236:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"17236:7:5","typeDescriptions":{}}},"id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17236:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1730,"id":1735,"nodeType":"Return","src":"17229:17:5"}]},"functionSelector":"081812fc","id":1737,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"17148:11:5","nodeType":"FunctionDefinition","overrides":{"id":1727,"nodeType":"OverrideSpecifier","overrides":[],"src":"17183:8:5"},"parameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1737,"src":"17160:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"17160:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17159:9:5"},"returnParameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"operator","nameLocation":"17209:8:5","nodeType":"VariableDeclaration","scope":1737,"src":"17201:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1728,"name":"address","nodeType":"ElementaryTypeName","src":"17201:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17200:18:5"},"scope":1804,"src":"17139:114:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[114],"body":{"id":1749,"nodeType":"Block","src":"17341:29:5","statements":[{"expression":{"hexValue":"66616c7365","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17358:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1746,"id":1748,"nodeType":"Return","src":"17351:12:5"}]},"functionSelector":"e985e9c5","id":1750,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"17268:16:5","nodeType":"FunctionDefinition","overrides":{"id":1743,"nodeType":"OverrideSpecifier","overrides":[],"src":"17317:8:5"},"parameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1750,"src":"17285:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1738,"name":"address","nodeType":"ElementaryTypeName","src":"17285:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1750,"src":"17294:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1740,"name":"address","nodeType":"ElementaryTypeName","src":"17294:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17284:18:5"},"returnParameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1750,"src":"17335:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1744,"name":"bool","nodeType":"ElementaryTypeName","src":"17335:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17334:6:5"},"scope":1804,"src":"17259:111:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[158],"body":{"id":1758,"nodeType":"Block","src":"17439:29:5","statements":[{"expression":{"id":1756,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"17456:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1755,"id":1757,"nodeType":"Return","src":"17449:12:5"}]},"functionSelector":"06fdde03","id":1759,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"17385:4:5","nodeType":"FunctionDefinition","overrides":{"id":1752,"nodeType":"OverrideSpecifier","overrides":[],"src":"17406:8:5"},"parameters":{"id":1751,"nodeType":"ParameterList","parameters":[],"src":"17389:2:5"},"returnParameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1759,"src":"17424:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1753,"name":"string","nodeType":"ElementaryTypeName","src":"17424:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17423:15:5"},"scope":1804,"src":"17376:92:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[164],"body":{"id":1767,"nodeType":"Block","src":"17539:31:5","statements":[{"expression":{"id":1765,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"17556:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1764,"id":1766,"nodeType":"Return","src":"17549:14:5"}]},"functionSelector":"95d89b41","id":1768,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"17483:6:5","nodeType":"FunctionDefinition","overrides":{"id":1761,"nodeType":"OverrideSpecifier","overrides":[],"src":"17506:8:5"},"parameters":{"id":1760,"nodeType":"ParameterList","parameters":[],"src":"17489:2:5"},"returnParameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1768,"src":"17524:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1762,"name":"string","nodeType":"ElementaryTypeName","src":"17524:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17523:15:5"},"scope":1804,"src":"17474:96:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[172],"body":{"id":1802,"nodeType":"Block","src":"17658:203:5","statements":[{"assignments":[1777],"declarations":[{"constant":false,"id":1777,"mutability":"mutable","name":"voucherTokenId","nameLocation":"17676:14:5","nodeType":"VariableDeclaration","scope":1802,"src":"17668:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"17668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1782,"initialValue":{"expression":{"baseExpression":{"id":1778,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"17693:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Account_$269_storage_$","typeString":"mapping(uint256 => struct Registry.Account storage ref)"}},"id":1780,"indexExpression":{"id":1779,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"17702:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17693:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$269_storage","typeString":"struct Registry.Account storage ref"}},"id":1781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"voucher","nodeType":"MemberAccess","referencedDeclaration":264,"src":"17693:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17668:50:5"},{"assignments":[1784],"declarations":[{"constant":false,"id":1784,"mutability":"mutable","name":"cid","nameLocation":"17742:3:5","nodeType":"VariableDeclaration","scope":1802,"src":"17728:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1783,"name":"string","nodeType":"ElementaryTypeName","src":"17728:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1792,"initialValue":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":1785,"name":"vouches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"17748:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vouches_$260_storage_$","typeString":"mapping(uint256 => struct Registry.Vouches storage ref)"}},"id":1787,"indexExpression":{"id":1786,"name":"voucherTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"17756:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17748:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouches_$260_storage","typeString":"struct Registry.Vouches storage ref"}},"id":1788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"vouches","nodeType":"MemberAccess","referencedDeclaration":259,"src":"17748:31:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vouch_$252_storage_$","typeString":"mapping(uint256 => struct Registry.Vouch storage ref)"}},"id":1790,"indexExpression":{"id":1789,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"17780:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17748:40:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vouch_$252_storage","typeString":"struct Registry.Vouch storage ref"}},"id":1791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"personCid","nodeType":"MemberAccess","referencedDeclaration":249,"src":"17748:50:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17728:70:5"},{"expression":{"arguments":[{"arguments":[{"id":1797,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"17839:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":1798,"name":"cid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"17848:3:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1795,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"17822:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"17822:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17822:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17815:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1793,"name":"string","nodeType":"ElementaryTypeName","src":"17815:6:5","typeDescriptions":{}}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17815:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1775,"id":1801,"nodeType":"Return","src":"17808:45:5"}]},"functionSelector":"c87b56dd","id":1803,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"17585:8:5","nodeType":"FunctionDefinition","overrides":{"id":1772,"nodeType":"OverrideSpecifier","overrides":[],"src":"17625:8:5"},"parameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"tokenId","nameLocation":"17602:7:5","nodeType":"VariableDeclaration","scope":1803,"src":"17594:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1769,"name":"uint256","nodeType":"ElementaryTypeName","src":"17594:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17593:17:5"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1803,"src":"17643:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1773,"name":"string","nodeType":"ElementaryTypeName","src":"17643:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17642:15:5"},"scope":1804,"src":"17576:285:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1805,"src":"404:17459:5","usedErrors":[362,364,366,368,370,372,374,376,378,380,382,384,386,388,390,392,394,1811,1818]}],"src":"33:17831:5"},"id":5},"prb-math/contracts/PRBMath.sol":{"ast":{"absolutePath":"prb-math/contracts/PRBMath.sol","exportedSymbols":{"PRBMath":[3698],"PRBMathSD59x18__AbsInputTooSmall":[1829],"PRBMathSD59x18__CeilOverflow":[1834],"PRBMathSD59x18__DivInputTooSmall":[1837],"PRBMathSD59x18__DivOverflow":[1842],"PRBMathSD59x18__Exp2InputTooBig":[1852],"PRBMathSD59x18__ExpInputTooBig":[1847],"PRBMathSD59x18__FloorUnderflow":[1857],"PRBMathSD59x18__FromIntOverflow":[1862],"PRBMathSD59x18__FromIntUnderflow":[1867],"PRBMathSD59x18__GmNegativeProduct":[1874],"PRBMathSD59x18__GmOverflow":[1881],"PRBMathSD59x18__LogInputTooSmall":[1886],"PRBMathSD59x18__MulInputTooSmall":[1889],"PRBMathSD59x18__MulOverflow":[1894],"PRBMathSD59x18__PowuOverflow":[1899],"PRBMathSD59x18__SqrtNegativeInput":[1904],"PRBMathSD59x18__SqrtOverflow":[1909],"PRBMathUD60x18__AddOverflow":[1916],"PRBMathUD60x18__CeilOverflow":[1921],"PRBMathUD60x18__Exp2InputTooBig":[1931],"PRBMathUD60x18__ExpInputTooBig":[1926],"PRBMathUD60x18__FromUintOverflow":[1936],"PRBMathUD60x18__GmOverflow":[1943],"PRBMathUD60x18__LogInputTooSmall":[1948],"PRBMathUD60x18__SqrtOverflow":[1953],"PRBMathUD60x18__SubUnderflow":[1960],"PRBMath__MulDivFixedPointOverflow":[1811],"PRBMath__MulDivOverflow":[1818],"PRBMath__MulDivSignedInputTooSmall":[1821],"PRBMath__MulDivSignedOverflow":[1826]},"id":3699,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1806,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"38:24:6"},{"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"64:55:6","text":"@notice Emitted when the result overflows uint256."},"id":1811,"name":"PRBMath__MulDivFixedPointOverflow","nameLocation":"125:33:6","nodeType":"ErrorDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"prod1","nameLocation":"167:5:6","nodeType":"VariableDeclaration","scope":1811,"src":"159:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"159:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"158:15:6"},"src":"119:55:6"},{"documentation":{"id":1812,"nodeType":"StructuredDocumentation","src":"176:55:6","text":"@notice Emitted when the result overflows uint256."},"id":1818,"name":"PRBMath__MulDivOverflow","nameLocation":"237:23:6","nodeType":"ErrorDefinition","parameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"prod1","nameLocation":"269:5:6","nodeType":"VariableDeclaration","scope":1818,"src":"261:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1813,"name":"uint256","nodeType":"ElementaryTypeName","src":"261:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1816,"mutability":"mutable","name":"denominator","nameLocation":"284:11:6","nodeType":"VariableDeclaration","scope":1818,"src":"276:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"276:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"260:36:6"},"src":"231:66:6"},{"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"299:64:6","text":"@notice Emitted when one of the inputs is type(int256).min."},"id":1821,"name":"PRBMath__MulDivSignedInputTooSmall","nameLocation":"369:34:6","nodeType":"ErrorDefinition","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[],"src":"403:2:6"},"src":"363:43:6"},{"documentation":{"id":1822,"nodeType":"StructuredDocumentation","src":"408:76:6","text":"@notice Emitted when the intermediary absolute result overflows int256."},"id":1826,"name":"PRBMath__MulDivSignedOverflow","nameLocation":"490:29:6","nodeType":"ErrorDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"rAbs","nameLocation":"528:4:6","nodeType":"VariableDeclaration","scope":1826,"src":"520:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1823,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"519:14:6"},"src":"484:50:6"},{"documentation":{"id":1827,"nodeType":"StructuredDocumentation","src":"536:51:6","text":"@notice Emitted when the input is MIN_SD59x18."},"id":1829,"name":"PRBMathSD59x18__AbsInputTooSmall","nameLocation":"593:32:6","nodeType":"ErrorDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[],"src":"625:2:6"},"src":"587:41:6"},{"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"630:61:6","text":"@notice Emitted when ceiling a number overflows SD59x18."},"id":1834,"name":"PRBMathSD59x18__CeilOverflow","nameLocation":"697:28:6","nodeType":"ErrorDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"x","nameLocation":"733:1:6","nodeType":"VariableDeclaration","scope":1834,"src":"726:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1831,"name":"int256","nodeType":"ElementaryTypeName","src":"726:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"725:10:6"},"src":"691:45:6"},{"documentation":{"id":1835,"nodeType":"StructuredDocumentation","src":"738:59:6","text":"@notice Emitted when one of the inputs is MIN_SD59x18."},"id":1837,"name":"PRBMathSD59x18__DivInputTooSmall","nameLocation":"803:32:6","nodeType":"ErrorDefinition","parameters":{"id":1836,"nodeType":"ParameterList","parameters":[],"src":"835:2:6"},"src":"797:41:6"},{"documentation":{"id":1838,"nodeType":"StructuredDocumentation","src":"840:85:6","text":"@notice Emitted when one of the intermediary unsigned results overflows SD59x18."},"id":1842,"name":"PRBMathSD59x18__DivOverflow","nameLocation":"931:27:6","nodeType":"ErrorDefinition","parameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1840,"mutability":"mutable","name":"rAbs","nameLocation":"967:4:6","nodeType":"VariableDeclaration","scope":1842,"src":"959:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"959:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:14:6"},"src":"925:48:6"},{"documentation":{"id":1843,"nodeType":"StructuredDocumentation","src":"975:75:6","text":"@notice Emitted when the input is greater than 133.084258667509499441."},"id":1847,"name":"PRBMathSD59x18__ExpInputTooBig","nameLocation":"1056:30:6","nodeType":"ErrorDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1845,"mutability":"mutable","name":"x","nameLocation":"1094:1:6","nodeType":"VariableDeclaration","scope":1847,"src":"1087:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1844,"name":"int256","nodeType":"ElementaryTypeName","src":"1087:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1086:10:6"},"src":"1050:47:6"},{"documentation":{"id":1848,"nodeType":"StructuredDocumentation","src":"1099:56:6","text":"@notice Emitted when the input is greater than 192."},"id":1852,"name":"PRBMathSD59x18__Exp2InputTooBig","nameLocation":"1161:31:6","nodeType":"ErrorDefinition","parameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"x","nameLocation":"1200:1:6","nodeType":"VariableDeclaration","scope":1852,"src":"1193:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1849,"name":"int256","nodeType":"ElementaryTypeName","src":"1193:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1192:10:6"},"src":"1155:48:6"},{"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"1205:63:6","text":"@notice Emitted when flooring a number underflows SD59x18."},"id":1857,"name":"PRBMathSD59x18__FloorUnderflow","nameLocation":"1274:30:6","nodeType":"ErrorDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"x","nameLocation":"1312:1:6","nodeType":"VariableDeclaration","scope":1857,"src":"1305:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1854,"name":"int256","nodeType":"ElementaryTypeName","src":"1305:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1304:10:6"},"src":"1268:47:6"},{"documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"1317:97:6","text":"@notice Emitted when converting a basic integer to the fixed-point format overflows SD59x18."},"id":1862,"name":"PRBMathSD59x18__FromIntOverflow","nameLocation":"1420:31:6","nodeType":"ErrorDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"x","nameLocation":"1459:1:6","nodeType":"VariableDeclaration","scope":1862,"src":"1452:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1859,"name":"int256","nodeType":"ElementaryTypeName","src":"1452:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1451:10:6"},"src":"1414:48:6"},{"documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"1464:98:6","text":"@notice Emitted when converting a basic integer to the fixed-point format underflows SD59x18."},"id":1867,"name":"PRBMathSD59x18__FromIntUnderflow","nameLocation":"1568:32:6","nodeType":"ErrorDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"x","nameLocation":"1608:1:6","nodeType":"VariableDeclaration","scope":1867,"src":"1601:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1864,"name":"int256","nodeType":"ElementaryTypeName","src":"1601:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1600:10:6"},"src":"1562:49:6"},{"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"1613:64:6","text":"@notice Emitted when the product of the inputs is negative."},"id":1874,"name":"PRBMathSD59x18__GmNegativeProduct","nameLocation":"1683:33:6","nodeType":"ErrorDefinition","parameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"x","nameLocation":"1724:1:6","nodeType":"VariableDeclaration","scope":1874,"src":"1717:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1869,"name":"int256","nodeType":"ElementaryTypeName","src":"1717:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1872,"mutability":"mutable","name":"y","nameLocation":"1734:1:6","nodeType":"VariableDeclaration","scope":1874,"src":"1727:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1871,"name":"int256","nodeType":"ElementaryTypeName","src":"1727:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1716:20:6"},"src":"1677:60:6"},{"documentation":{"id":1875,"nodeType":"StructuredDocumentation","src":"1739:67:6","text":"@notice Emitted when multiplying the inputs overflows SD59x18."},"id":1881,"name":"PRBMathSD59x18__GmOverflow","nameLocation":"1812:26:6","nodeType":"ErrorDefinition","parameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"x","nameLocation":"1846:1:6","nodeType":"VariableDeclaration","scope":1881,"src":"1839:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1876,"name":"int256","nodeType":"ElementaryTypeName","src":"1839:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"y","nameLocation":"1856:1:6","nodeType":"VariableDeclaration","scope":1881,"src":"1849:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1878,"name":"int256","nodeType":"ElementaryTypeName","src":"1849:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1838:20:6"},"src":"1806:53:6"},{"documentation":{"id":1882,"nodeType":"StructuredDocumentation","src":"1861:66:6","text":"@notice Emitted when the input is less than or equal to zero."},"id":1886,"name":"PRBMathSD59x18__LogInputTooSmall","nameLocation":"1933:32:6","nodeType":"ErrorDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"x","nameLocation":"1973:1:6","nodeType":"VariableDeclaration","scope":1886,"src":"1966:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1883,"name":"int256","nodeType":"ElementaryTypeName","src":"1966:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1965:10:6"},"src":"1927:49:6"},{"documentation":{"id":1887,"nodeType":"StructuredDocumentation","src":"1978:59:6","text":"@notice Emitted when one of the inputs is MIN_SD59x18."},"id":1889,"name":"PRBMathSD59x18__MulInputTooSmall","nameLocation":"2043:32:6","nodeType":"ErrorDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[],"src":"2075:2:6"},"src":"2037:41:6"},{"documentation":{"id":1890,"nodeType":"StructuredDocumentation","src":"2080:77:6","text":"@notice Emitted when the intermediary absolute result overflows SD59x18."},"id":1894,"name":"PRBMathSD59x18__MulOverflow","nameLocation":"2163:27:6","nodeType":"ErrorDefinition","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"rAbs","nameLocation":"2199:4:6","nodeType":"VariableDeclaration","scope":1894,"src":"2191:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"2191:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2190:14:6"},"src":"2157:48:6"},{"documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"2207:77:6","text":"@notice Emitted when the intermediary absolute result overflows SD59x18."},"id":1899,"name":"PRBMathSD59x18__PowuOverflow","nameLocation":"2290:28:6","nodeType":"ErrorDefinition","parameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"mutability":"mutable","name":"rAbs","nameLocation":"2327:4:6","nodeType":"VariableDeclaration","scope":1899,"src":"2319:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1896,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2318:14:6"},"src":"2284:49:6"},{"documentation":{"id":1900,"nodeType":"StructuredDocumentation","src":"2335:48:6","text":"@notice Emitted when the input is negative."},"id":1904,"name":"PRBMathSD59x18__SqrtNegativeInput","nameLocation":"2389:33:6","nodeType":"ErrorDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"mutability":"mutable","name":"x","nameLocation":"2430:1:6","nodeType":"VariableDeclaration","scope":1904,"src":"2423:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1901,"name":"int256","nodeType":"ElementaryTypeName","src":"2423:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2422:10:6"},"src":"2383:50:6"},{"documentation":{"id":1905,"nodeType":"StructuredDocumentation","src":"2435:76:6","text":"@notice Emitted when the calculating the square root overflows SD59x18."},"id":1909,"name":"PRBMathSD59x18__SqrtOverflow","nameLocation":"2517:28:6","nodeType":"ErrorDefinition","parameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"x","nameLocation":"2553:1:6","nodeType":"VariableDeclaration","scope":1909,"src":"2546:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1906,"name":"int256","nodeType":"ElementaryTypeName","src":"2546:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2545:10:6"},"src":"2511:45:6"},{"documentation":{"id":1910,"nodeType":"StructuredDocumentation","src":"2558:53:6","text":"@notice Emitted when addition overflows UD60x18."},"id":1916,"name":"PRBMathUD60x18__AddOverflow","nameLocation":"2617:27:6","nodeType":"ErrorDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"x","nameLocation":"2653:1:6","nodeType":"VariableDeclaration","scope":1916,"src":"2645:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1911,"name":"uint256","nodeType":"ElementaryTypeName","src":"2645:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"y","nameLocation":"2664:1:6","nodeType":"VariableDeclaration","scope":1916,"src":"2656:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2644:22:6"},"src":"2611:56:6"},{"documentation":{"id":1917,"nodeType":"StructuredDocumentation","src":"2669:61:6","text":"@notice Emitted when ceiling a number overflows UD60x18."},"id":1921,"name":"PRBMathUD60x18__CeilOverflow","nameLocation":"2736:28:6","nodeType":"ErrorDefinition","parameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"x","nameLocation":"2773:1:6","nodeType":"VariableDeclaration","scope":1921,"src":"2765:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1918,"name":"uint256","nodeType":"ElementaryTypeName","src":"2765:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2764:11:6"},"src":"2730:46:6"},{"documentation":{"id":1922,"nodeType":"StructuredDocumentation","src":"2778:75:6","text":"@notice Emitted when the input is greater than 133.084258667509499441."},"id":1926,"name":"PRBMathUD60x18__ExpInputTooBig","nameLocation":"2859:30:6","nodeType":"ErrorDefinition","parameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"x","nameLocation":"2898:1:6","nodeType":"VariableDeclaration","scope":1926,"src":"2890:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1923,"name":"uint256","nodeType":"ElementaryTypeName","src":"2890:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2889:11:6"},"src":"2853:48:6"},{"documentation":{"id":1927,"nodeType":"StructuredDocumentation","src":"2903:56:6","text":"@notice Emitted when the input is greater than 192."},"id":1931,"name":"PRBMathUD60x18__Exp2InputTooBig","nameLocation":"2965:31:6","nodeType":"ErrorDefinition","parameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"x","nameLocation":"3005:1:6","nodeType":"VariableDeclaration","scope":1931,"src":"2997:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2996:11:6"},"src":"2959:49:6"},{"documentation":{"id":1932,"nodeType":"StructuredDocumentation","src":"3010:104:6","text":"@notice Emitted when converting a basic integer to the fixed-point format format overflows UD60x18."},"id":1936,"name":"PRBMathUD60x18__FromUintOverflow","nameLocation":"3120:32:6","nodeType":"ErrorDefinition","parameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"x","nameLocation":"3161:1:6","nodeType":"VariableDeclaration","scope":1936,"src":"3153:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"3153:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3152:11:6"},"src":"3114:50:6"},{"documentation":{"id":1937,"nodeType":"StructuredDocumentation","src":"3166:67:6","text":"@notice Emitted when multiplying the inputs overflows UD60x18."},"id":1943,"name":"PRBMathUD60x18__GmOverflow","nameLocation":"3239:26:6","nodeType":"ErrorDefinition","parameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"x","nameLocation":"3274:1:6","nodeType":"VariableDeclaration","scope":1943,"src":"3266:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"3266:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"y","nameLocation":"3285:1:6","nodeType":"VariableDeclaration","scope":1943,"src":"3277:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"3277:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3265:22:6"},"src":"3233:55:6"},{"documentation":{"id":1944,"nodeType":"StructuredDocumentation","src":"3290:51:6","text":"@notice Emitted when the input is less than 1."},"id":1948,"name":"PRBMathUD60x18__LogInputTooSmall","nameLocation":"3347:32:6","nodeType":"ErrorDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"x","nameLocation":"3388:1:6","nodeType":"VariableDeclaration","scope":1948,"src":"3380:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"3380:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3379:11:6"},"src":"3341:50:6"},{"documentation":{"id":1949,"nodeType":"StructuredDocumentation","src":"3393:76:6","text":"@notice Emitted when the calculating the square root overflows UD60x18."},"id":1953,"name":"PRBMathUD60x18__SqrtOverflow","nameLocation":"3475:28:6","nodeType":"ErrorDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"x","nameLocation":"3512:1:6","nodeType":"VariableDeclaration","scope":1953,"src":"3504:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"3504:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3503:11:6"},"src":"3469:46:6"},{"documentation":{"id":1954,"nodeType":"StructuredDocumentation","src":"3517:57:6","text":"@notice Emitted when subtraction underflows UD60x18."},"id":1960,"name":"PRBMathUD60x18__SubUnderflow","nameLocation":"3580:28:6","nodeType":"ErrorDefinition","parameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"x","nameLocation":"3617:1:6","nodeType":"VariableDeclaration","scope":1960,"src":"3609:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1955,"name":"uint256","nodeType":"ElementaryTypeName","src":"3609:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1958,"mutability":"mutable","name":"y","nameLocation":"3628:1:6","nodeType":"VariableDeclaration","scope":1960,"src":"3620:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1957,"name":"uint256","nodeType":"ElementaryTypeName","src":"3620:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3608:22:6"},"src":"3574:57:6"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1961,"nodeType":"StructuredDocumentation","src":"3633:318:6","text":"@dev Common mathematical functions used in both PRBMathSD59x18 and PRBMathUD60x18. Note that this shared library\n does not always assume the signed 59.18-decimal fixed-point or the unsigned 60.18-decimal fixed-point\n representation. When it does not, it is explicitly mentioned in the NatSpec documentation."},"fullyImplemented":true,"id":3698,"linearizedBaseContracts":[3698],"name":"PRBMath","nameLocation":"3959:7:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PRBMath.SD59x18","id":1964,"members":[{"constant":false,"id":1963,"mutability":"mutable","name":"value","nameLocation":"4026:5:6","nodeType":"VariableDeclaration","scope":1964,"src":"4019:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1962,"name":"int256","nodeType":"ElementaryTypeName","src":"4019:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"SD59x18","nameLocation":"4001:7:6","nodeType":"StructDefinition","scope":3698,"src":"3994:44:6","visibility":"public"},{"canonicalName":"PRBMath.UD60x18","id":1967,"members":[{"constant":false,"id":1966,"mutability":"mutable","name":"value","nameLocation":"4077:5:6","nodeType":"VariableDeclaration","scope":1967,"src":"4069:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1965,"name":"uint256","nodeType":"ElementaryTypeName","src":"4069:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UD60x18","nameLocation":"4051:7:6","nodeType":"StructDefinition","scope":3698,"src":"4044:45:6","visibility":"public"},{"constant":true,"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"4116:55:6","text":"@dev How many trailing decimals can be represented."},"id":1971,"mutability":"constant","name":"SCALE","nameLocation":"4202:5:6","nodeType":"VariableDeclaration","scope":3698,"src":"4176:38:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"4176:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":1970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4210:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"constant":true,"documentation":{"id":1972,"nodeType":"StructuredDocumentation","src":"4221:47:6","text":"@dev Largest power of two divisor of SCALE."},"id":1975,"mutability":"constant","name":"SCALE_LPOTD","nameLocation":"4299:11:6","nodeType":"VariableDeclaration","scope":3698,"src":"4273:46:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"4273:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323632313434","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4313:6:6","typeDescriptions":{"typeIdentifier":"t_rational_262144_by_1","typeString":"int_const 262144"},"value":"262144"},"visibility":"internal"},{"constant":true,"documentation":{"id":1976,"nodeType":"StructuredDocumentation","src":"4326:34:6","text":"@dev SCALE inverted mod 2^256."},"id":1979,"mutability":"constant","name":"SCALE_INVERSE","nameLocation":"4391:13:6","nodeType":"VariableDeclaration","scope":3698,"src":"4365:128:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1977,"name":"uint256","nodeType":"ElementaryTypeName","src":"4365:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37383135363634363135353137343834313937393732373939343539383831363236323330363137353231323539323037363136313837363636315f353038383639353534323332363930323831","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4415:78:6","typeDescriptions":{"typeIdentifier":"t_rational_78156646155174841979727994598816262306175212592076161876661508869554232690281_by_1","typeString":"int_const 7815...(69 digits omitted)...0281"},"value":"78156646155174841979727994598816262306175212592076161876661_508869554232690281"},"visibility":"internal"},{"body":{"id":3030,"nodeType":"Block","src":"4950:8410:6","statements":[{"id":3029,"nodeType":"UncheckedBlock","src":"4960:8394:6","statements":[{"expression":{"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1987,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"5052:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3078383030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030","id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5061:50:6","typeDescriptions":{"typeIdentifier":"t_rational_3138550867693340381917894711603833208051177722232017256448_by_1","typeString":"int_const 3138...(50 digits omitted)...6448"},"value":"0x800000000000000000000000000000000000000000000000"},"src":"5052:59:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1990,"nodeType":"ExpressionStatement","src":"5052:59:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1991,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"5351:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838303030303030303030303030303030","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5355:18:6","typeDescriptions":{"typeIdentifier":"t_rational_9223372036854775808_by_1","typeString":"int_const 9223372036854775808"},"value":"0x8000000000000000"},"src":"5351:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5376:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5351:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2006,"nodeType":"IfStatement","src":"5347:110:6","trueBody":{"id":2005,"nodeType":"Block","src":"5379:78:6","statements":[{"expression":{"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"5397:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1997,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"5407:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783136413039453636374633424343393039","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5416:19:6","typeDescriptions":{"typeIdentifier":"t_rational_26087635650665564425_by_1","typeString":"int_const 26087635650665564425"},"value":"0x16A09E667F3BCC909"},"src":"5407:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2000,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5406:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5440:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5406:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5397:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2004,"nodeType":"ExpressionStatement","src":"5397:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2007,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"5474:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834303030303030303030303030303030","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5478:18:6","typeDescriptions":{"typeIdentifier":"t_rational_4611686018427387904_by_1","typeString":"int_const 4611686018427387904"},"value":"0x4000000000000000"},"src":"5474:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5499:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5474:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2022,"nodeType":"IfStatement","src":"5470:110:6","trueBody":{"id":2021,"nodeType":"Block","src":"5502:78:6","statements":[{"expression":{"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2012,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"5520:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"5530:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783133303646453041333142373135324446","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5539:19:6","typeDescriptions":{"typeIdentifier":"t_rational_21936999301089678047_by_1","typeString":"int_const 21936999301089678047"},"value":"0x1306FE0A31B7152DF"},"src":"5530:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2016,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5529:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5563:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5529:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5520:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2020,"nodeType":"ExpressionStatement","src":"5520:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2023,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"5597:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832303030303030303030303030303030","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5601:18:6","typeDescriptions":{"typeIdentifier":"t_rational_2305843009213693952_by_1","typeString":"int_const 2305843009213693952"},"value":"0x2000000000000000"},"src":"5597:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5622:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5597:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2038,"nodeType":"IfStatement","src":"5593:110:6","trueBody":{"id":2037,"nodeType":"Block","src":"5625:78:6","statements":[{"expression":{"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2028,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"5643:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2029,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"5653:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783131373242383343374435313741444345","id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5662:19:6","typeDescriptions":{"typeIdentifier":"t_rational_20116317054877281742_by_1","typeString":"int_const 20116317054877281742"},"value":"0x1172B83C7D517ADCE"},"src":"5653:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2032,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5652:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5686:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5652:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5643:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2036,"nodeType":"ExpressionStatement","src":"5643:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2039,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"5720:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831303030303030303030303030303030","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5724:18:6","typeDescriptions":{"typeIdentifier":"t_rational_1152921504606846976_by_1","typeString":"int_const 1152921504606846976"},"value":"0x1000000000000000"},"src":"5720:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5745:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5720:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2054,"nodeType":"IfStatement","src":"5716:110:6","trueBody":{"id":2053,"nodeType":"Block","src":"5748:78:6","statements":[{"expression":{"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2044,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"5766:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2045,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"5776:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130423535383643463938393046363241","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5785:19:6","typeDescriptions":{"typeIdentifier":"t_rational_19263451207323153962_by_1","typeString":"int_const 19263451207323153962"},"value":"0x10B5586CF9890F62A"},"src":"5776:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2048,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5775:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5809:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5775:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5766:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2052,"nodeType":"ExpressionStatement","src":"5766:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2055,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"5843:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078383030303030303030303030303030","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5847:17:6","typeDescriptions":{"typeIdentifier":"t_rational_576460752303423488_by_1","typeString":"int_const 576460752303423488"},"value":"0x800000000000000"},"src":"5843:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5867:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5843:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2070,"nodeType":"IfStatement","src":"5839:109:6","trueBody":{"id":2069,"nodeType":"Block","src":"5870:78:6","statements":[{"expression":{"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2060,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"5888:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2061,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"5898:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130353942304433313538353734334145","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5907:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18850675170876015534_by_1","typeString":"int_const 18850675170876015534"},"value":"0x1059B0D31585743AE"},"src":"5898:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5897:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5931:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5897:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5888:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2068,"nodeType":"ExpressionStatement","src":"5888:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2071,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"5965:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078343030303030303030303030303030","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:17:6","typeDescriptions":{"typeIdentifier":"t_rational_288230376151711744_by_1","typeString":"int_const 288230376151711744"},"value":"0x400000000000000"},"src":"5965:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5989:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2086,"nodeType":"IfStatement","src":"5961:109:6","trueBody":{"id":2085,"nodeType":"Block","src":"5992:78:6","statements":[{"expression":{"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2076,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6010:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2077,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6020:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130324339413345373738303630454537","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6029:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18647615946650685159_by_1","typeString":"int_const 18647615946650685159"},"value":"0x102C9A3E778060EE7"},"src":"6020:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6019:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6019:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6010:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2084,"nodeType":"ExpressionStatement","src":"6010:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2087,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"6087:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078323030303030303030303030303030","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6091:17:6","typeDescriptions":{"typeIdentifier":"t_rational_144115188075855872_by_1","typeString":"int_const 144115188075855872"},"value":"0x200000000000000"},"src":"6087:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6111:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6087:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2102,"nodeType":"IfStatement","src":"6083:109:6","trueBody":{"id":2101,"nodeType":"Block","src":"6114:78:6","statements":[{"expression":{"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2092,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6132:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2093,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6142:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130313633444139464233333335364438","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6151:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18546908069882975960_by_1","typeString":"int_const 18546908069882975960"},"value":"0x10163DA9FB33356D8"},"src":"6142:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6141:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6141:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6132:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2100,"nodeType":"ExpressionStatement","src":"6132:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2103,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"6209:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078313030303030303030303030303030","id":2104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6213:17:6","typeDescriptions":{"typeIdentifier":"t_rational_72057594037927936_by_1","typeString":"int_const 72057594037927936"},"value":"0x100000000000000"},"src":"6209:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6233:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6209:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2118,"nodeType":"IfStatement","src":"6205:109:6","trueBody":{"id":2117,"nodeType":"Block","src":"6236:78:6","statements":[{"expression":{"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6254:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2109,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6264:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130304231414641354142434245443631","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6273:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18496758270674070881_by_1","typeString":"int_const 18496758270674070881"},"value":"0x100B1AFA5ABCBED61"},"src":"6264:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6263:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6263:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6254:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2116,"nodeType":"ExpressionStatement","src":"6254:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2119,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"6331:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830303030303030303030303030","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6335:16:6","typeDescriptions":{"typeIdentifier":"t_rational_36028797018963968_by_1","typeString":"int_const 36028797018963968"},"value":"0x80000000000000"},"src":"6331:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6354:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6331:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2134,"nodeType":"IfStatement","src":"6327:108:6","trueBody":{"id":2133,"nodeType":"Block","src":"6357:78:6","statements":[{"expression":{"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2124,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6375:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2125,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6385:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303538433836444131433039454132","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6394:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18471734244850835106_by_1","typeString":"int_const 18471734244850835106"},"value":"0x10058C86DA1C09EA2"},"src":"6385:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6384:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6418:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6384:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6375:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2132,"nodeType":"ExpressionStatement","src":"6375:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2135,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"6452:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430303030303030303030303030","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6456:16:6","typeDescriptions":{"typeIdentifier":"t_rational_18014398509481984_by_1","typeString":"int_const 18014398509481984"},"value":"0x40000000000000"},"src":"6452:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6475:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6452:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2150,"nodeType":"IfStatement","src":"6448:108:6","trueBody":{"id":2149,"nodeType":"Block","src":"6478:78:6","statements":[{"expression":{"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2140,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6496:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6506:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303243363035453245384345433530","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6515:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18459234930309000272_by_1","typeString":"int_const 18459234930309000272"},"value":"0x1002C605E2E8CEC50"},"src":"6506:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2144,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6505:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6539:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6505:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2148,"nodeType":"ExpressionStatement","src":"6496:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2151,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"6573:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230303030303030303030303030","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6577:16:6","typeDescriptions":{"typeIdentifier":"t_rational_9007199254740992_by_1","typeString":"int_const 9007199254740992"},"value":"0x20000000000000"},"src":"6573:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6596:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6573:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2166,"nodeType":"IfStatement","src":"6569:108:6","trueBody":{"id":2165,"nodeType":"Block","src":"6599:78:6","statements":[{"expression":{"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2156,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6617:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6627:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303136324633393034303531464131","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6636:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18452988445124272033_by_1","typeString":"int_const 18452988445124272033"},"value":"0x100162F3904051FA1"},"src":"6627:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6626:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6626:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6617:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2164,"nodeType":"ExpressionStatement","src":"6617:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2167,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"6694:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130303030303030303030303030","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6698:16:6","typeDescriptions":{"typeIdentifier":"t_rational_4503599627370496_by_1","typeString":"int_const 4503599627370496"},"value":"0x10000000000000"},"src":"6694:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6717:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6694:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2182,"nodeType":"IfStatement","src":"6690:108:6","trueBody":{"id":2181,"nodeType":"Block","src":"6720:78:6","statements":[{"expression":{"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2172,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6738:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2173,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6748:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303042313735454646444337364241","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6757:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18449865995240371898_by_1","typeString":"int_const 18449865995240371898"},"value":"0x1000B175EFFDC76BA"},"src":"6748:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6747:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6781:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6747:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6738:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2180,"nodeType":"ExpressionStatement","src":"6738:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2183,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"6815:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838303030303030303030303030","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6819:15:6","typeDescriptions":{"typeIdentifier":"t_rational_2251799813685248_by_1","typeString":"int_const 2251799813685248"},"value":"0x8000000000000"},"src":"6815:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6837:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6815:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2198,"nodeType":"IfStatement","src":"6811:107:6","trueBody":{"id":2197,"nodeType":"Block","src":"6840:78:6","statements":[{"expression":{"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2188,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6858:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2189,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6868:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303035384241303146423946393644","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6877:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18448304968436414829_by_1","typeString":"int_const 18448304968436414829"},"value":"0x100058BA01FB9F96D"},"src":"6868:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6867:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6901:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6867:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6858:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2196,"nodeType":"ExpressionStatement","src":"6858:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2199,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"6935:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834303030303030303030303030","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6939:15:6","typeDescriptions":{"typeIdentifier":"t_rational_1125899906842624_by_1","typeString":"int_const 1125899906842624"},"value":"0x4000000000000"},"src":"6935:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6957:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6935:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2214,"nodeType":"IfStatement","src":"6931:107:6","trueBody":{"id":2213,"nodeType":"Block","src":"6960:78:6","statements":[{"expression":{"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2204,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6978:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2205,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6988:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303032433543433337444139343932","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6997:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18447524504564044946_by_1","typeString":"int_const 18447524504564044946"},"value":"0x10002C5CC37DA9492"},"src":"6988:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2208,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6987:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7021:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6987:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6978:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2212,"nodeType":"ExpressionStatement","src":"6978:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2215,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7055:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832303030303030303030303030","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7059:15:6","typeDescriptions":{"typeIdentifier":"t_rational_562949953421312_by_1","typeString":"int_const 562949953421312"},"value":"0x2000000000000"},"src":"7055:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7077:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7055:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2230,"nodeType":"IfStatement","src":"7051:107:6","trueBody":{"id":2229,"nodeType":"Block","src":"7080:78:6","statements":[{"expression":{"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2220,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7098:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2221,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7108:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303031363245353235454530353437","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7117:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18447134285009651015_by_1","typeString":"int_const 18447134285009651015"},"value":"0x1000162E525EE0547"},"src":"7108:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7107:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7141:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7107:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7098:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2228,"nodeType":"ExpressionStatement","src":"7098:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2231,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7175:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831303030303030303030303030","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7179:15:6","typeDescriptions":{"typeIdentifier":"t_rational_281474976710656_by_1","typeString":"int_const 281474976710656"},"value":"0x1000000000000"},"src":"7175:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7197:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7175:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2246,"nodeType":"IfStatement","src":"7171:107:6","trueBody":{"id":2245,"nodeType":"Block","src":"7200:78:6","statements":[{"expression":{"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2236,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7218:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7228:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030423137323535373735433034","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7237:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446939178327825412_by_1","typeString":"int_const 18446939178327825412"},"value":"0x10000B17255775C04"},"src":"7228:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7227:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7261:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7227:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7218:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2244,"nodeType":"ExpressionStatement","src":"7218:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2247,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7295:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078383030303030303030303030","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7299:14:6","typeDescriptions":{"typeIdentifier":"t_rational_140737488355328_by_1","typeString":"int_const 140737488355328"},"value":"0x800000000000"},"src":"7295:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7316:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7295:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2262,"nodeType":"IfStatement","src":"7291:106:6","trueBody":{"id":2261,"nodeType":"Block","src":"7319:78:6","statements":[{"expression":{"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2252,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7337:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2253,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7347:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030353842393142354243394145","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7356:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446841625760745902_by_1","typeString":"int_const 18446841625760745902"},"value":"0x1000058B91B5BC9AE"},"src":"7347:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7346:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7380:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7346:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7337:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2260,"nodeType":"ExpressionStatement","src":"7337:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2263,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7414:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078343030303030303030303030","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7418:14:6","typeDescriptions":{"typeIdentifier":"t_rational_70368744177664_by_1","typeString":"int_const 70368744177664"},"value":"0x400000000000"},"src":"7414:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7435:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7414:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2278,"nodeType":"IfStatement","src":"7410:106:6","trueBody":{"id":2277,"nodeType":"Block","src":"7438:78:6","statements":[{"expression":{"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7456:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2269,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7466:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030324335433839443545433644","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7475:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446792849670663277_by_1","typeString":"int_const 18446792849670663277"},"value":"0x100002C5C89D5EC6D"},"src":"7466:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2272,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7465:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7499:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7465:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7456:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2276,"nodeType":"ExpressionStatement","src":"7456:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2279,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7533:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078323030303030303030303030","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7537:14:6","typeDescriptions":{"typeIdentifier":"t_rational_35184372088832_by_1","typeString":"int_const 35184372088832"},"value":"0x200000000000"},"src":"7533:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7554:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7533:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2294,"nodeType":"IfStatement","src":"7529:106:6","trueBody":{"id":2293,"nodeType":"Block","src":"7557:78:6","statements":[{"expression":{"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2284,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7575:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7585:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030313632453433463446383331","id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7594:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446768461673986097_by_1","typeString":"int_const 18446768461673986097"},"value":"0x10000162E43F4F831"},"src":"7585:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7584:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7618:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7584:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7575:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2292,"nodeType":"ExpressionStatement","src":"7575:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2295,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7652:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078313030303030303030303030","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7656:14:6","typeDescriptions":{"typeIdentifier":"t_rational_17592186044416_by_1","typeString":"int_const 17592186044416"},"value":"0x100000000000"},"src":"7652:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7673:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7652:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2310,"nodeType":"IfStatement","src":"7648:106:6","trueBody":{"id":2309,"nodeType":"Block","src":"7676:78:6","statements":[{"expression":{"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2300,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7694:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7704:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030304231373231424346433941","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446756267687738522_by_1","typeString":"int_const 18446756267687738522"},"value":"0x100000B1721BCFC9A"},"src":"7704:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7703:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7737:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7703:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7694:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2308,"nodeType":"ExpressionStatement","src":"7694:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2311,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7771:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830303030303030303030","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7775:13:6","typeDescriptions":{"typeIdentifier":"t_rational_8796093022208_by_1","typeString":"int_const 8796093022208"},"value":"0x80000000000"},"src":"7771:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7791:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7771:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2326,"nodeType":"IfStatement","src":"7767:105:6","trueBody":{"id":2325,"nodeType":"Block","src":"7794:78:6","statements":[{"expression":{"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2316,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7812:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7822:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303538423930434631453645","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7831:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446750170697637486_by_1","typeString":"int_const 18446750170697637486"},"value":"0x10000058B90CF1E6E"},"src":"7822:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7821:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7855:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7821:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7812:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2324,"nodeType":"ExpressionStatement","src":"7812:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2327,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7889:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430303030303030303030","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7893:13:6","typeDescriptions":{"typeIdentifier":"t_rational_4398046511104_by_1","typeString":"int_const 4398046511104"},"value":"0x40000000000"},"src":"7889:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7909:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7889:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2342,"nodeType":"IfStatement","src":"7885:105:6","trueBody":{"id":2341,"nodeType":"Block","src":"7912:78:6","statements":[{"expression":{"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7930:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2333,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7940:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303243354338363342373346","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7949:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446747122203342655_by_1","typeString":"int_const 18446747122203342655"},"value":"0x1000002C5C863B73F"},"src":"7940:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2336,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7939:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7973:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7939:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7930:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2340,"nodeType":"ExpressionStatement","src":"7930:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2343,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"8007:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230303030303030303030","id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8011:13:6","typeDescriptions":{"typeIdentifier":"t_rational_2199023255552_by_1","typeString":"int_const 2199023255552"},"value":"0x20000000000"},"src":"8007:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8027:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8007:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2358,"nodeType":"IfStatement","src":"8003:105:6","trueBody":{"id":2357,"nodeType":"Block","src":"8030:78:6","statements":[{"expression":{"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2348,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8048:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2349,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8058:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303136324534333045354132","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8067:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446745597956384162_by_1","typeString":"int_const 18446745597956384162"},"value":"0x100000162E430E5A2"},"src":"8058:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8057:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8091:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8057:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8048:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2356,"nodeType":"ExpressionStatement","src":"8048:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2359,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"8125:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130303030303030303030","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8129:13:6","typeDescriptions":{"typeIdentifier":"t_rational_1099511627776_by_1","typeString":"int_const 1099511627776"},"value":"0x10000000000"},"src":"8125:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8145:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8125:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2374,"nodeType":"IfStatement","src":"8121:105:6","trueBody":{"id":2373,"nodeType":"Block","src":"8148:78:6","statements":[{"expression":{"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2364,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8166:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2365,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8176:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303042313732313833353531","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8185:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744835832952145_by_1","typeString":"int_const 18446744835832952145"},"value":"0x1000000B172183551"},"src":"8176:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8175:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8209:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8175:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8166:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2372,"nodeType":"ExpressionStatement","src":"8166:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2375,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"8243:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838303030303030303030","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8247:12:6","typeDescriptions":{"typeIdentifier":"t_rational_549755813888_by_1","typeString":"int_const 549755813888"},"value":"0x8000000000"},"src":"8243:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8262:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8243:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2390,"nodeType":"IfStatement","src":"8239:104:6","trueBody":{"id":2389,"nodeType":"Block","src":"8265:78:6","statements":[{"expression":{"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2380,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8283:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2381,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8293:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303035384239304330423439","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8302:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744454771247945_by_1","typeString":"int_const 18446744454771247945"},"value":"0x100000058B90C0B49"},"src":"8293:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2384,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8292:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8326:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8292:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8283:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2388,"nodeType":"ExpressionStatement","src":"8283:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2391,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"8360:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834303030303030303030","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8364:12:6","typeDescriptions":{"typeIdentifier":"t_rational_274877906944_by_1","typeString":"int_const 274877906944"},"value":"0x4000000000"},"src":"8360:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8379:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8360:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2406,"nodeType":"IfStatement","src":"8356:104:6","trueBody":{"id":2405,"nodeType":"Block","src":"8382:78:6","statements":[{"expression":{"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2396,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8400:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2397,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8410:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303032433543383630314343","id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8419:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744264240398796_by_1","typeString":"int_const 18446744264240398796"},"value":"0x10000002C5C8601CC"},"src":"8410:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2400,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8409:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8443:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8409:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8400:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2404,"nodeType":"ExpressionStatement","src":"8400:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2407,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"8477:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832303030303030303030","id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8481:12:6","typeDescriptions":{"typeIdentifier":"t_rational_137438953472_by_1","typeString":"int_const 137438953472"},"value":"0x2000000000"},"src":"8477:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8496:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8477:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2422,"nodeType":"IfStatement","src":"8473:104:6","trueBody":{"id":2421,"nodeType":"Block","src":"8499:78:6","statements":[{"expression":{"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8517:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2413,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8527:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303031363245343246464630","id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744168974974960_by_1","typeString":"int_const 18446744168974974960"},"value":"0x1000000162E42FFF0"},"src":"8527:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8526:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8560:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8526:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8517:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2420,"nodeType":"ExpressionStatement","src":"8517:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2423,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"8594:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831303030303030303030","id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8598:12:6","typeDescriptions":{"typeIdentifier":"t_rational_68719476736_by_1","typeString":"int_const 68719476736"},"value":"0x1000000000"},"src":"8594:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8613:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8594:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2438,"nodeType":"IfStatement","src":"8590:104:6","trueBody":{"id":2437,"nodeType":"Block","src":"8616:78:6","statements":[{"expression":{"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2428,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8634:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2429,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8644:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030423137323137464242","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8653:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744121342263227_by_1","typeString":"int_const 18446744121342263227"},"value":"0x10000000B17217FBB"},"src":"8644:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2432,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8643:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8677:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8643:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8634:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2436,"nodeType":"ExpressionStatement","src":"8634:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2439,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"8711:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078383030303030303030","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8715:11:6","typeDescriptions":{"typeIdentifier":"t_rational_34359738368_by_1","typeString":"int_const 34359738368"},"value":"0x800000000"},"src":"8711:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8729:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8711:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2454,"nodeType":"IfStatement","src":"8707:103:6","trueBody":{"id":2453,"nodeType":"Block","src":"8732:78:6","statements":[{"expression":{"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2444,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8750:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2445,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8760:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030353842393042464345","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744097525907406_by_1","typeString":"int_const 18446744097525907406"},"value":"0x1000000058B90BFCE"},"src":"8760:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8759:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8793:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8759:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8750:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2452,"nodeType":"ExpressionStatement","src":"8750:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2455,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"8827:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078343030303030303030","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8831:11:6","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"value":"0x400000000"},"src":"8827:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8845:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8827:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2470,"nodeType":"IfStatement","src":"8823:103:6","trueBody":{"id":2469,"nodeType":"Block","src":"8848:78:6","statements":[{"expression":{"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8866:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2461,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8876:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030324335433835464533","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744085617729507_by_1","typeString":"int_const 18446744085617729507"},"value":"0x100000002C5C85FE3"},"src":"8876:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8875:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8909:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8875:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8866:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2468,"nodeType":"ExpressionStatement","src":"8866:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2471,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"8943:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078323030303030303030","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:11:6","typeDescriptions":{"typeIdentifier":"t_rational_8589934592_by_1","typeString":"int_const 8589934592"},"value":"0x200000000"},"src":"8943:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8961:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8943:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2486,"nodeType":"IfStatement","src":"8939:103:6","trueBody":{"id":2485,"nodeType":"Block","src":"8964:78:6","statements":[{"expression":{"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8982:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2477,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8992:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030313632453432464631","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9001:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744079663640561_by_1","typeString":"int_const 18446744079663640561"},"value":"0x10000000162E42FF1"},"src":"8992:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2480,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8991:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9025:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8991:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8982:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2484,"nodeType":"ExpressionStatement","src":"8982:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2487,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"9059:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078313030303030303030","id":2488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9063:11:6","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"value":"0x100000000"},"src":"9059:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9077:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9059:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2502,"nodeType":"IfStatement","src":"9055:103:6","trueBody":{"id":2501,"nodeType":"Block","src":"9080:78:6","statements":[{"expression":{"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2492,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"9098:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2493,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"9108:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030304231373231374638","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9117:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744076686596088_by_1","typeString":"int_const 18446744076686596088"},"value":"0x100000000B17217F8"},"src":"9108:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9107:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9141:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9107:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9098:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2500,"nodeType":"ExpressionStatement","src":"9098:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2503,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"9175:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830303030303030","id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9179:10:6","typeDescriptions":{"typeIdentifier":"t_rational_2147483648_by_1","typeString":"int_const 2147483648"},"value":"0x80000000"},"src":"9175:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9192:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9175:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2518,"nodeType":"IfStatement","src":"9171:102:6","trueBody":{"id":2517,"nodeType":"Block","src":"9195:78:6","statements":[{"expression":{"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"9213:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2509,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"9223:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303538423930424643","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9232:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744075198073852_by_1","typeString":"int_const 18446744075198073852"},"value":"0x10000000058B90BFC"},"src":"9223:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9222:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9256:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9222:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9213:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2516,"nodeType":"ExpressionStatement","src":"9213:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2519,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"9290:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430303030303030","id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9294:10:6","typeDescriptions":{"typeIdentifier":"t_rational_1073741824_by_1","typeString":"int_const 1073741824"},"value":"0x40000000"},"src":"9290:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9307:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9290:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"nodeType":"IfStatement","src":"9286:102:6","trueBody":{"id":2533,"nodeType":"Block","src":"9310:78:6","statements":[{"expression":{"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"9328:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2525,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"9338:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303243354338354645","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9347:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744074453812734_by_1","typeString":"int_const 18446744074453812734"},"value":"0x1000000002C5C85FE"},"src":"9338:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9337:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9371:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9337:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9328:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2532,"nodeType":"ExpressionStatement","src":"9328:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2535,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"9405:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230303030303030","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9409:10:6","typeDescriptions":{"typeIdentifier":"t_rational_536870912_by_1","typeString":"int_const 536870912"},"value":"0x20000000"},"src":"9405:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9422:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9405:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2550,"nodeType":"IfStatement","src":"9401:102:6","trueBody":{"id":2549,"nodeType":"Block","src":"9425:78:6","statements":[{"expression":{"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2540,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"9443:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2541,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"9453:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303136324534324646","id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9462:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744074081682175_by_1","typeString":"int_const 18446744074081682175"},"value":"0x100000000162E42FF"},"src":"9453:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2544,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9452:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9486:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9452:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9443:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2548,"nodeType":"ExpressionStatement","src":"9443:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2551,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"9520:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130303030303030","id":2552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9524:10:6","typeDescriptions":{"typeIdentifier":"t_rational_268435456_by_1","typeString":"int_const 268435456"},"value":"0x10000000"},"src":"9520:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9537:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9520:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2566,"nodeType":"IfStatement","src":"9516:102:6","trueBody":{"id":2565,"nodeType":"Block","src":"9540:78:6","statements":[{"expression":{"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2556,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"9558:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"9568:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303042313732313746","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9577:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073895616895_by_1","typeString":"int_const 18446744073895616895"},"value":"0x1000000000B17217F"},"src":"9568:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9567:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9601:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9567:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9558:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2564,"nodeType":"ExpressionStatement","src":"9558:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2567,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"9635:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838303030303030","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9639:9:6","typeDescriptions":{"typeIdentifier":"t_rational_134217728_by_1","typeString":"int_const 134217728"},"value":"0x8000000"},"src":"9635:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9651:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9635:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2582,"nodeType":"IfStatement","src":"9631:101:6","trueBody":{"id":2581,"nodeType":"Block","src":"9654:78:6","statements":[{"expression":{"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2572,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"9672:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"9682:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303035384239304330","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9691:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073802584256_by_1","typeString":"int_const 18446744073802584256"},"value":"0x100000000058B90C0"},"src":"9682:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2576,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9681:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9715:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9681:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9672:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2580,"nodeType":"ExpressionStatement","src":"9672:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2583,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"9749:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834303030303030","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9753:9:6","typeDescriptions":{"typeIdentifier":"t_rational_67108864_by_1","typeString":"int_const 67108864"},"value":"0x4000000"},"src":"9749:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9765:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9749:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2598,"nodeType":"IfStatement","src":"9745:101:6","trueBody":{"id":2597,"nodeType":"Block","src":"9768:78:6","statements":[{"expression":{"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2588,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"9786:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2589,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"9796:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303032433543383630","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9805:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073756067936_by_1","typeString":"int_const 18446744073756067936"},"value":"0x10000000002C5C860"},"src":"9796:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9795:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9829:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9795:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9786:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2596,"nodeType":"ExpressionStatement","src":"9786:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2599,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"9863:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832303030303030","id":2600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9867:9:6","typeDescriptions":{"typeIdentifier":"t_rational_33554432_by_1","typeString":"int_const 33554432"},"value":"0x2000000"},"src":"9863:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9879:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9863:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2614,"nodeType":"IfStatement","src":"9859:101:6","trueBody":{"id":2613,"nodeType":"Block","src":"9882:78:6","statements":[{"expression":{"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2604,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"9900:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"9910:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303031363245343330","id":2606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9919:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073732809776_by_1","typeString":"int_const 18446744073732809776"},"value":"0x1000000000162E430"},"src":"9910:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2608,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9909:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9943:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9909:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9900:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2612,"nodeType":"ExpressionStatement","src":"9900:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2615,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"9977:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831303030303030","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9981:9:6","typeDescriptions":{"typeIdentifier":"t_rational_16777216_by_1","typeString":"int_const 16777216"},"value":"0x1000000"},"src":"9977:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9993:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9977:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2630,"nodeType":"IfStatement","src":"9973:101:6","trueBody":{"id":2629,"nodeType":"Block","src":"9996:78:6","statements":[{"expression":{"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10014:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2621,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10024:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030423137323138","id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10033:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073721180696_by_1","typeString":"int_const 18446744073721180696"},"value":"0x10000000000B17218"},"src":"10024:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10023:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10057:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10023:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10014:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2628,"nodeType":"ExpressionStatement","src":"10014:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2631,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"10091:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078383030303030","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:8:6","typeDescriptions":{"typeIdentifier":"t_rational_8388608_by_1","typeString":"int_const 8388608"},"value":"0x800000"},"src":"10091:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10106:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10091:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2646,"nodeType":"IfStatement","src":"10087:100:6","trueBody":{"id":2645,"nodeType":"Block","src":"10109:78:6","statements":[{"expression":{"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2636,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10127:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2637,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10137:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030353842393043","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10146:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073715366156_by_1","typeString":"int_const 18446744073715366156"},"value":"0x1000000000058B90C"},"src":"10137:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10136:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10170:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10136:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10127:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2644,"nodeType":"ExpressionStatement","src":"10127:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2647,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"10204:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078343030303030","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10208:8:6","typeDescriptions":{"typeIdentifier":"t_rational_4194304_by_1","typeString":"int_const 4194304"},"value":"0x400000"},"src":"10204:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10219:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10204:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2662,"nodeType":"IfStatement","src":"10200:100:6","trueBody":{"id":2661,"nodeType":"Block","src":"10222:78:6","statements":[{"expression":{"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10240:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2653,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10250:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030324335433836","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10259:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073712458886_by_1","typeString":"int_const 18446744073712458886"},"value":"0x100000000002C5C86"},"src":"10250:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10249:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10283:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10249:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10240:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2660,"nodeType":"ExpressionStatement","src":"10240:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2663,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"10317:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078323030303030","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10321:8:6","typeDescriptions":{"typeIdentifier":"t_rational_2097152_by_1","typeString":"int_const 2097152"},"value":"0x200000"},"src":"10317:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10332:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10317:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2678,"nodeType":"IfStatement","src":"10313:100:6","trueBody":{"id":2677,"nodeType":"Block","src":"10335:78:6","statements":[{"expression":{"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2668,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10353:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2669,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10363:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030313632453433","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10372:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073711005251_by_1","typeString":"int_const 18446744073711005251"},"value":"0x10000000000162E43"},"src":"10363:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2672,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10362:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10362:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10353:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2676,"nodeType":"ExpressionStatement","src":"10353:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2679,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"10430:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078313030303030","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10434:8:6","typeDescriptions":{"typeIdentifier":"t_rational_1048576_by_1","typeString":"int_const 1048576"},"value":"0x100000"},"src":"10430:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10445:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10430:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2694,"nodeType":"IfStatement","src":"10426:100:6","trueBody":{"id":2693,"nodeType":"Block","src":"10448:78:6","statements":[{"expression":{"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2684,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10466:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2685,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10476:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030304231373231","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10485:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073710278433_by_1","typeString":"int_const 18446744073710278433"},"value":"0x100000000000B1721"},"src":"10476:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2688,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10475:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10475:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10466:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2692,"nodeType":"ExpressionStatement","src":"10466:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2695,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"10543:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830303030","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10547:7:6","typeDescriptions":{"typeIdentifier":"t_rational_524288_by_1","typeString":"int_const 524288"},"value":"0x80000"},"src":"10543:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10557:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10543:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2710,"nodeType":"IfStatement","src":"10539:99:6","trueBody":{"id":2709,"nodeType":"Block","src":"10560:78:6","statements":[{"expression":{"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10578:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10588:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303538423931","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10597:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709915025_by_1","typeString":"int_const 18446744073709915025"},"value":"0x10000000000058B91"},"src":"10588:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10587:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10621:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10587:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10578:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2708,"nodeType":"ExpressionStatement","src":"10578:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2711,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"10655:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430303030","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10659:7:6","typeDescriptions":{"typeIdentifier":"t_rational_262144_by_1","typeString":"int_const 262144"},"value":"0x40000"},"src":"10655:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10669:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10655:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2726,"nodeType":"IfStatement","src":"10651:99:6","trueBody":{"id":2725,"nodeType":"Block","src":"10672:78:6","statements":[{"expression":{"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2716,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10690:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2717,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10700:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303243354338","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10709:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709733320_by_1","typeString":"int_const 18446744073709733320"},"value":"0x1000000000002C5C8"},"src":"10700:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10699:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10733:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10699:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10690:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2724,"nodeType":"ExpressionStatement","src":"10690:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2727,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"10767:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230303030","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10771:7:6","typeDescriptions":{"typeIdentifier":"t_rational_131072_by_1","typeString":"int_const 131072"},"value":"0x20000"},"src":"10767:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10781:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10767:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2742,"nodeType":"IfStatement","src":"10763:99:6","trueBody":{"id":2741,"nodeType":"Block","src":"10784:78:6","statements":[{"expression":{"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2732,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10802:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2733,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10812:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303136324534","id":2734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10821:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709642468_by_1","typeString":"int_const 18446744073709642468"},"value":"0x100000000000162E4"},"src":"10812:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2736,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10811:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10845:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10811:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10802:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2740,"nodeType":"ExpressionStatement","src":"10802:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2743,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"10879:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130303030","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10883:7:6","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"value":"0x10000"},"src":"10879:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10893:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10879:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2758,"nodeType":"IfStatement","src":"10875:99:6","trueBody":{"id":2757,"nodeType":"Block","src":"10896:78:6","statements":[{"expression":{"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2748,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10914:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2749,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10924:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303042313732","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10933:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709597042_by_1","typeString":"int_const 18446744073709597042"},"value":"0x1000000000000B172"},"src":"10924:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2752,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10923:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10957:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10923:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10914:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2756,"nodeType":"ExpressionStatement","src":"10914:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2759,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"10991:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838303030","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10995:6:6","typeDescriptions":{"typeIdentifier":"t_rational_32768_by_1","typeString":"int_const 32768"},"value":"0x8000"},"src":"10991:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11004:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10991:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2774,"nodeType":"IfStatement","src":"10987:98:6","trueBody":{"id":2773,"nodeType":"Block","src":"11007:78:6","statements":[{"expression":{"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11025:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2765,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11035:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303035384239","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11044:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709574329_by_1","typeString":"int_const 18446744073709574329"},"value":"0x100000000000058B9"},"src":"11035:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2768,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11034:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11068:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11034:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11025:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2772,"nodeType":"ExpressionStatement","src":"11025:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2775,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"11102:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834303030","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11106:6:6","typeDescriptions":{"typeIdentifier":"t_rational_16384_by_1","typeString":"int_const 16384"},"value":"0x4000"},"src":"11102:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11115:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11102:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2790,"nodeType":"IfStatement","src":"11098:98:6","trueBody":{"id":2789,"nodeType":"Block","src":"11118:78:6","statements":[{"expression":{"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11136:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11146:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303032433544","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709562973_by_1","typeString":"int_const 18446744073709562973"},"value":"0x10000000000002C5D"},"src":"11146:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11145:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11179:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11145:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11136:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2788,"nodeType":"ExpressionStatement","src":"11136:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2791,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"11213:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832303030","id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11217:6:6","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"value":"0x2000"},"src":"11213:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11226:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11213:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2806,"nodeType":"IfStatement","src":"11209:98:6","trueBody":{"id":2805,"nodeType":"Block","src":"11229:78:6","statements":[{"expression":{"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2796,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11247:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11257:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303031363245","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11266:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709557294_by_1","typeString":"int_const 18446744073709557294"},"value":"0x1000000000000162E"},"src":"11257:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11256:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11290:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11256:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11247:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2804,"nodeType":"ExpressionStatement","src":"11247:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2807,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"11324:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831303030","id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11328:6:6","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"value":"0x1000"},"src":"11324:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11337:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11324:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2822,"nodeType":"IfStatement","src":"11320:98:6","trueBody":{"id":2821,"nodeType":"Block","src":"11340:78:6","statements":[{"expression":{"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2812,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11358:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11368:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030423137","id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11377:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709554455_by_1","typeString":"int_const 18446744073709554455"},"value":"0x10000000000000B17"},"src":"11368:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2816,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11367:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11401:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11367:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11358:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2820,"nodeType":"ExpressionStatement","src":"11358:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2823,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"11435:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078383030","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11439:5:6","typeDescriptions":{"typeIdentifier":"t_rational_2048_by_1","typeString":"int_const 2048"},"value":"0x800"},"src":"11435:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11447:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11435:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2838,"nodeType":"IfStatement","src":"11431:97:6","trueBody":{"id":2837,"nodeType":"Block","src":"11450:78:6","statements":[{"expression":{"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2828,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11468:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2829,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11478:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030353843","id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11487:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709553036_by_1","typeString":"int_const 18446744073709553036"},"value":"0x1000000000000058C"},"src":"11478:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11477:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11511:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11477:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11468:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2836,"nodeType":"ExpressionStatement","src":"11468:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2839,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"11545:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078343030","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11549:5:6","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"value":"0x400"},"src":"11545:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11557:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11545:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2854,"nodeType":"IfStatement","src":"11541:97:6","trueBody":{"id":2853,"nodeType":"Block","src":"11560:78:6","statements":[{"expression":{"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2844,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11578:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2845,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11588:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030324336","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11597:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709552326_by_1","typeString":"int_const 18446744073709552326"},"value":"0x100000000000002C6"},"src":"11588:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2848,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11587:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11621:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11587:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11578:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2852,"nodeType":"ExpressionStatement","src":"11578:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2855,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"11655:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078323030","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11659:5:6","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"value":"0x200"},"src":"11655:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11667:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11655:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2870,"nodeType":"IfStatement","src":"11651:97:6","trueBody":{"id":2869,"nodeType":"Block","src":"11670:78:6","statements":[{"expression":{"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2860,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11688:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2861,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11698:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030313633","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11707:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551971_by_1","typeString":"int_const 18446744073709551971"},"value":"0x10000000000000163"},"src":"11698:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2864,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11697:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11731:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11697:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11688:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2868,"nodeType":"ExpressionStatement","src":"11688:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2871,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"11765:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078313030","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11769:5:6","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"0x100"},"src":"11765:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11777:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11765:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2886,"nodeType":"IfStatement","src":"11761:97:6","trueBody":{"id":2885,"nodeType":"Block","src":"11780:78:6","statements":[{"expression":{"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11798:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2877,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11808:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030304231","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11817:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551793_by_1","typeString":"int_const 18446744073709551793"},"value":"0x100000000000000B1"},"src":"11808:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2880,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11807:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11841:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11807:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11798:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2884,"nodeType":"ExpressionStatement","src":"11798:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2887,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"11875:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11879:4:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"src":"11875:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11886:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11875:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2902,"nodeType":"IfStatement","src":"11871:96:6","trueBody":{"id":2901,"nodeType":"Block","src":"11889:78:6","statements":[{"expression":{"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2892,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11907:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2893,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11917:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030303539","id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11926:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551705_by_1","typeString":"int_const 18446744073709551705"},"value":"0x10000000000000059"},"src":"11917:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2896,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11916:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11950:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11916:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11907:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2900,"nodeType":"ExpressionStatement","src":"11907:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2903,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"11984:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11988:4:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"11984:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11995:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11984:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2918,"nodeType":"IfStatement","src":"11980:96:6","trueBody":{"id":2917,"nodeType":"Block","src":"11998:78:6","statements":[{"expression":{"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2908,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"12016:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"12026:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030303243","id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12035:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551660_by_1","typeString":"int_const 18446744073709551660"},"value":"0x1000000000000002C"},"src":"12026:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2912,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12025:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12059:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12025:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12016:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2916,"nodeType":"ExpressionStatement","src":"12016:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2919,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"12093:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12097:4:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"12093:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12104:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12093:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2934,"nodeType":"IfStatement","src":"12089:96:6","trueBody":{"id":2933,"nodeType":"Block","src":"12107:78:6","statements":[{"expression":{"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2924,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"12125:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"12135:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030303136","id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12144:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551638_by_1","typeString":"int_const 18446744073709551638"},"value":"0x10000000000000016"},"src":"12135:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2928,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12134:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12168:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12134:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12125:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2932,"nodeType":"ExpressionStatement","src":"12125:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2935,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"12202:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12206:4:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"0x10"},"src":"12202:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12213:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12202:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2950,"nodeType":"IfStatement","src":"12198:96:6","trueBody":{"id":2949,"nodeType":"Block","src":"12216:78:6","statements":[{"expression":{"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2940,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"12234:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2941,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"12244:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030303042","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12253:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551627_by_1","typeString":"int_const 18446744073709551627"},"value":"0x1000000000000000B"},"src":"12244:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12243:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12277:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12243:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12234:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2948,"nodeType":"ExpressionStatement","src":"12234:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"12311:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12315:3:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x8"},"src":"12311:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12321:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12311:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2966,"nodeType":"IfStatement","src":"12307:95:6","trueBody":{"id":2965,"nodeType":"Block","src":"12324:78:6","statements":[{"expression":{"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2956,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"12342:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2957,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"12352:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030303036","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12361:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551622_by_1","typeString":"int_const 18446744073709551622"},"value":"0x10000000000000006"},"src":"12352:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2960,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12351:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12385:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12342:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2964,"nodeType":"ExpressionStatement","src":"12342:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2967,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"12419:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12423:3:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"0x4"},"src":"12419:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12429:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12419:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2982,"nodeType":"IfStatement","src":"12415:95:6","trueBody":{"id":2981,"nodeType":"Block","src":"12432:78:6","statements":[{"expression":{"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2972,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"12450:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"12460:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030303033","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12469:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551619_by_1","typeString":"int_const 18446744073709551619"},"value":"0x10000000000000003"},"src":"12460:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12459:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12493:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12459:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12450:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2980,"nodeType":"ExpressionStatement","src":"12450:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"12527:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12531:3:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"0x2"},"src":"12527:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12537:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12527:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2998,"nodeType":"IfStatement","src":"12523:95:6","trueBody":{"id":2997,"nodeType":"Block","src":"12540:78:6","statements":[{"expression":{"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2988,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"12558:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2989,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"12568:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030303031","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12577:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551617_by_1","typeString":"int_const 18446744073709551617"},"value":"0x10000000000000001"},"src":"12568:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2992,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12567:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12601:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12567:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12558:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2996,"nodeType":"ExpressionStatement","src":"12558:45:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2999,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"12635:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831","id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12639:3:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x1"},"src":"12635:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12645:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12635:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3014,"nodeType":"IfStatement","src":"12631:95:6","trueBody":{"id":3013,"nodeType":"Block","src":"12648:78:6","statements":[{"expression":{"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3004,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"12666:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3005,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"12676:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783130303030303030303030303030303031","id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12685:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551617_by_1","typeString":"int_const 18446744073709551617"},"value":"0x10000000000000001"},"src":"12676:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12675:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12709:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12675:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12666:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3012,"nodeType":"ExpressionStatement","src":"12666:45:6"}]}},{"expression":{"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3015,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"13286:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"id":3016,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"13296:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13286:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3018,"nodeType":"ExpressionStatement","src":"13286:15:6"},{"expression":{"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3019,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"13315:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313931","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13327:3:6","typeDescriptions":{"typeIdentifier":"t_rational_191_by_1","typeString":"int_const 191"},"value":"191"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3021,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"13334:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13339:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"13334:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13333:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13327:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13326:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13315:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3028,"nodeType":"ExpressionStatement","src":"13315:28:6"}]}]},"documentation":{"id":1980,"nodeType":"StructuredDocumentation","src":"4523:358:6","text":"@notice Calculates the binary exponent of x using the binary fraction method.\n @dev Has to use 192.64-bit fixed-point numbers.\n See https://ethereum.stackexchange.com/a/96594/24693.\n @param x The exponent as an unsigned 192.64-bit fixed-point number.\n @return result The result as an unsigned 60.18-decimal fixed-point number."},"id":3031,"implemented":true,"kind":"function","modifiers":[],"name":"exp2","nameLocation":"4895:4:6","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"x","nameLocation":"4908:1:6","nodeType":"VariableDeclaration","scope":3031,"src":"4900:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"4900:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4899:11:6"},"returnParameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"result","nameLocation":"4942:6:6","nodeType":"VariableDeclaration","scope":3031,"src":"4934:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"4934:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4933:16:6"},"scope":3698,"src":"4886:8474:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3155,"nodeType":"Block","src":"13822:669:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3039,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"13836:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13841:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"313238","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13844:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13841:6:6","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"13836:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3053,"nodeType":"IfStatement","src":"13832:75:6","trueBody":{"id":3052,"nodeType":"Block","src":"13849:58:6","statements":[{"expression":{"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3044,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"13863:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13869:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13863:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3047,"nodeType":"ExpressionStatement","src":"13863:9:6"},{"expression":{"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3048,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"13886:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13893:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13886:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3051,"nodeType":"ExpressionStatement","src":"13886:10:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3054,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"13920:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13925:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13928:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"13925:5:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"13920:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3068,"nodeType":"IfStatement","src":"13916:72:6","trueBody":{"id":3067,"nodeType":"Block","src":"13932:56:6","statements":[{"expression":{"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3059,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"13946:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"13946:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3062,"nodeType":"ExpressionStatement","src":"13946:8:6"},{"expression":{"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3063,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"13968:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13975:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"13968:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3066,"nodeType":"ExpressionStatement","src":"13968:9:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3069,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"14001:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14006:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14009:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14006:5:6","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"14001:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3083,"nodeType":"IfStatement","src":"13997:72:6","trueBody":{"id":3082,"nodeType":"Block","src":"14013:56:6","statements":[{"expression":{"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3074,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"14027:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14033:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14027:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3077,"nodeType":"ExpressionStatement","src":"14027:8:6"},{"expression":{"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3078,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"14049:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14056:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14049:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3081,"nodeType":"ExpressionStatement","src":"14049:9:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3084,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"14082:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14087:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14090:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14087:5:6","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"14082:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3098,"nodeType":"IfStatement","src":"14078:72:6","trueBody":{"id":3097,"nodeType":"Block","src":"14094:56:6","statements":[{"expression":{"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3089,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"14108:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14114:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14108:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3092,"nodeType":"ExpressionStatement","src":"14108:8:6"},{"expression":{"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3093,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"14130:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14137:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14130:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3096,"nodeType":"ExpressionStatement","src":"14130:9:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3099,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"14163:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14168:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14171:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14168:4:6","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"14163:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3113,"nodeType":"IfStatement","src":"14159:69:6","trueBody":{"id":3112,"nodeType":"Block","src":"14174:54:6","statements":[{"expression":{"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3104,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"14188:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14194:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14188:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3107,"nodeType":"ExpressionStatement","src":"14188:7:6"},{"expression":{"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3108,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"14209:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14216:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14209:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3111,"nodeType":"ExpressionStatement","src":"14209:8:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3114,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"14241:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14246:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14249:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14246:4:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"14241:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3128,"nodeType":"IfStatement","src":"14237:69:6","trueBody":{"id":3127,"nodeType":"Block","src":"14252:54:6","statements":[{"expression":{"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3119,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"14266:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14272:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14266:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3122,"nodeType":"ExpressionStatement","src":"14266:7:6"},{"expression":{"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3123,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"14287:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14294:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14287:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3126,"nodeType":"ExpressionStatement","src":"14287:8:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3129,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"14319:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14324:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14327:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14324:4:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"14319:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3143,"nodeType":"IfStatement","src":"14315:69:6","trueBody":{"id":3142,"nodeType":"Block","src":"14330:54:6","statements":[{"expression":{"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3134,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"14344:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14350:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14344:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3137,"nodeType":"ExpressionStatement","src":"14344:7:6"},{"expression":{"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3138,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"14365:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14372:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14365:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3141,"nodeType":"ExpressionStatement","src":"14365:8:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3144,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"14397:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14402:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14405:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14402:4:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}},"src":"14397:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3154,"nodeType":"IfStatement","src":"14393:92:6","trueBody":{"id":3153,"nodeType":"Block","src":"14408:77:6","statements":[{"expression":{"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3149,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"14466:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14473:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14466:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3152,"nodeType":"ExpressionStatement","src":"14466:8:6"}]}}]},"documentation":{"id":3032,"nodeType":"StructuredDocumentation","src":"13366:376:6","text":"@notice Finds the zero-based index of the first one in the binary representation of x.\n @dev See the note on msb in the \"Find First Set\" Wikipedia article https://en.wikipedia.org/wiki/Find_first_set\n @param x The uint256 number for which to find the index of the most significant bit.\n @return msb The index of the most significant bit as an uint256."},"id":3156,"implemented":true,"kind":"function","modifiers":[],"name":"mostSignificantBit","nameLocation":"13756:18:6","nodeType":"FunctionDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"x","nameLocation":"13783:1:6","nodeType":"VariableDeclaration","scope":3156,"src":"13775:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"13775:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13774:11:6"},"returnParameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"msb","nameLocation":"13817:3:6","nodeType":"VariableDeclaration","scope":3156,"src":"13809:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3036,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13808:13:6"},"scope":3698,"src":"13747:744:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3286,"nodeType":"Block","src":"15207:3855:6","statements":[{"assignments":[3169],"declarations":[{"constant":false,"id":3169,"mutability":"mutable","name":"prod0","nameLocation":"15510:5:6","nodeType":"VariableDeclaration","scope":3286,"src":"15502:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"15502:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3170,"nodeType":"VariableDeclarationStatement","src":"15502:13:6"},{"assignments":[3172],"declarations":[{"constant":false,"id":3172,"mutability":"mutable","name":"prod1","nameLocation":"15578:5:6","nodeType":"VariableDeclaration","scope":3286,"src":"15570:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"15570:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3173,"nodeType":"VariableDeclarationStatement","src":"15570:13:6"},{"AST":{"nodeType":"YulBlock","src":"15646:141:6","statements":[{"nodeType":"YulVariableDeclaration","src":"15660:30:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15677:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"15680:1:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15687:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15683:3:6"},"nodeType":"YulFunctionCall","src":"15683:6:6"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"15670:6:6"},"nodeType":"YulFunctionCall","src":"15670:20:6"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"15664:2:6","type":""}]},{"nodeType":"YulAssignment","src":"15703:18:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15716:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"15719:1:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15712:3:6"},"nodeType":"YulFunctionCall","src":"15712:9:6"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"15703:5:6"}]},{"nodeType":"YulAssignment","src":"15734:43:6","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"15751:2:6"},{"name":"prod0","nodeType":"YulIdentifier","src":"15755:5:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15747:3:6"},"nodeType":"YulFunctionCall","src":"15747:14:6"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"15766:2:6"},{"name":"prod0","nodeType":"YulIdentifier","src":"15770:5:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15763:2:6"},"nodeType":"YulFunctionCall","src":"15763:13:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15743:3:6"},"nodeType":"YulFunctionCall","src":"15743:34:6"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"15734:5:6"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":3169,"isOffset":false,"isSlot":false,"src":"15703:5:6","valueSize":1},{"declaration":3169,"isOffset":false,"isSlot":false,"src":"15755:5:6","valueSize":1},{"declaration":3169,"isOffset":false,"isSlot":false,"src":"15770:5:6","valueSize":1},{"declaration":3172,"isOffset":false,"isSlot":false,"src":"15734:5:6","valueSize":1},{"declaration":3159,"isOffset":false,"isSlot":false,"src":"15677:1:6","valueSize":1},{"declaration":3159,"isOffset":false,"isSlot":false,"src":"15716:1:6","valueSize":1},{"declaration":3161,"isOffset":false,"isSlot":false,"src":"15680:1:6","valueSize":1},{"declaration":3161,"isOffset":false,"isSlot":false,"src":"15719:1:6","valueSize":1}],"id":3174,"nodeType":"InlineAssembly","src":"15637:150:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3175,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"15860:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15869:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15860:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3188,"nodeType":"IfStatement","src":"15856:138:6","trueBody":{"id":3187,"nodeType":"Block","src":"15872:122:6","statements":[{"id":3184,"nodeType":"UncheckedBlock","src":"15886:71:6","statements":[{"expression":{"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3178,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"15914:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3179,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"15923:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3180,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"15931:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15923:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15914:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3183,"nodeType":"ExpressionStatement","src":"15914:28:6"}]},{"expression":{"id":3185,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"15977:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3167,"id":3186,"nodeType":"Return","src":"15970:13:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3189,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"16092:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3190,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"16101:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16092:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3198,"nodeType":"IfStatement","src":"16088:101:6","trueBody":{"id":3197,"nodeType":"Block","src":"16114:75:6","statements":[{"errorCall":{"arguments":[{"id":3193,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"16159:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3194,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"16166:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3192,"name":"PRBMath__MulDivOverflow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"16135:23:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16135:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3196,"nodeType":"RevertStatement","src":"16128:50:6"}]}},{"assignments":[3200],"declarations":[{"constant":false,"id":3200,"mutability":"mutable","name":"remainder","nameLocation":"16432:9:6","nodeType":"VariableDeclaration","scope":3286,"src":"16424:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"16424:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3201,"nodeType":"VariableDeclarationStatement","src":"16424:17:6"},{"AST":{"nodeType":"YulBlock","src":"16460:267:6","statements":[{"nodeType":"YulAssignment","src":"16521:38:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16541:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"16544:1:6"},{"name":"denominator","nodeType":"YulIdentifier","src":"16547:11:6"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"16534:6:6"},"nodeType":"YulFunctionCall","src":"16534:25:6"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"16521:9:6"}]},{"nodeType":"YulAssignment","src":"16633:41:6","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"16646:5:6"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"16656:9:6"},{"name":"prod0","nodeType":"YulIdentifier","src":"16667:5:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16653:2:6"},"nodeType":"YulFunctionCall","src":"16653:20:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16642:3:6"},"nodeType":"YulFunctionCall","src":"16642:32:6"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"16633:5:6"}]},{"nodeType":"YulAssignment","src":"16687:30:6","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"16700:5:6"},{"name":"remainder","nodeType":"YulIdentifier","src":"16707:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16696:3:6"},"nodeType":"YulFunctionCall","src":"16696:21:6"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"16687:5:6"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":3163,"isOffset":false,"isSlot":false,"src":"16547:11:6","valueSize":1},{"declaration":3169,"isOffset":false,"isSlot":false,"src":"16667:5:6","valueSize":1},{"declaration":3169,"isOffset":false,"isSlot":false,"src":"16687:5:6","valueSize":1},{"declaration":3169,"isOffset":false,"isSlot":false,"src":"16700:5:6","valueSize":1},{"declaration":3172,"isOffset":false,"isSlot":false,"src":"16633:5:6","valueSize":1},{"declaration":3172,"isOffset":false,"isSlot":false,"src":"16646:5:6","valueSize":1},{"declaration":3200,"isOffset":false,"isSlot":false,"src":"16521:9:6","valueSize":1},{"declaration":3200,"isOffset":false,"isSlot":false,"src":"16656:9:6","valueSize":1},{"declaration":3200,"isOffset":false,"isSlot":false,"src":"16707:9:6","valueSize":1},{"declaration":3159,"isOffset":false,"isSlot":false,"src":"16541:1:6","valueSize":1},{"declaration":3161,"isOffset":false,"isSlot":false,"src":"16544:1:6","valueSize":1}],"id":3202,"nodeType":"InlineAssembly","src":"16451:276:6"},{"id":3285,"nodeType":"UncheckedBlock","src":"16918:2138:6","statements":[{"assignments":[3204],"declarations":[{"constant":false,"id":3204,"mutability":"mutable","name":"lpotdod","nameLocation":"17053:7:6","nodeType":"VariableDeclaration","scope":3285,"src":"17045:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3203,"name":"uint256","nodeType":"ElementaryTypeName","src":"17045:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3212,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3205,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"17063:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"17078:12:6","subExpression":{"id":3206,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"17079:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17093:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17078:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3210,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17077:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17063:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17045:50:6"},{"AST":{"nodeType":"YulBlock","src":"17118:392:6","statements":[{"nodeType":"YulAssignment","src":"17186:40:6","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"17205:11:6"},{"name":"lpotdod","nodeType":"YulIdentifier","src":"17218:7:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17201:3:6"},"nodeType":"YulFunctionCall","src":"17201:25:6"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"17186:11:6"}]},{"nodeType":"YulAssignment","src":"17296:28:6","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"17309:5:6"},{"name":"lpotdod","nodeType":"YulIdentifier","src":"17316:7:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17305:3:6"},"nodeType":"YulFunctionCall","src":"17305:19:6"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"17296:5:6"}]},{"nodeType":"YulAssignment","src":"17448:48:6","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17471:1:6","type":"","value":"0"},{"name":"lpotdod","nodeType":"YulIdentifier","src":"17474:7:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17467:3:6"},"nodeType":"YulFunctionCall","src":"17467:15:6"},{"name":"lpotdod","nodeType":"YulIdentifier","src":"17484:7:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17463:3:6"},"nodeType":"YulFunctionCall","src":"17463:29:6"},{"kind":"number","nodeType":"YulLiteral","src":"17494:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17459:3:6"},"nodeType":"YulFunctionCall","src":"17459:37:6"},"variableNames":[{"name":"lpotdod","nodeType":"YulIdentifier","src":"17448:7:6"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":3163,"isOffset":false,"isSlot":false,"src":"17186:11:6","valueSize":1},{"declaration":3163,"isOffset":false,"isSlot":false,"src":"17205:11:6","valueSize":1},{"declaration":3204,"isOffset":false,"isSlot":false,"src":"17218:7:6","valueSize":1},{"declaration":3204,"isOffset":false,"isSlot":false,"src":"17316:7:6","valueSize":1},{"declaration":3204,"isOffset":false,"isSlot":false,"src":"17448:7:6","valueSize":1},{"declaration":3204,"isOffset":false,"isSlot":false,"src":"17474:7:6","valueSize":1},{"declaration":3204,"isOffset":false,"isSlot":false,"src":"17484:7:6","valueSize":1},{"declaration":3169,"isOffset":false,"isSlot":false,"src":"17296:5:6","valueSize":1},{"declaration":3169,"isOffset":false,"isSlot":false,"src":"17309:5:6","valueSize":1}],"id":3213,"nodeType":"InlineAssembly","src":"17109:401:6"},{"expression":{"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3214,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"17576:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3215,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"17585:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3216,"name":"lpotdod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"17593:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17585:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17576:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3219,"nodeType":"ExpressionStatement","src":"17576:24:6"},{"assignments":[3221],"declarations":[{"constant":false,"id":3221,"mutability":"mutable","name":"inverse","nameLocation":"17926:7:6","nodeType":"VariableDeclaration","scope":3285,"src":"17918:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3220,"name":"uint256","nodeType":"ElementaryTypeName","src":"17918:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3228,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17937:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3223,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"17941:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17937:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17936:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17956:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"17936:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17918:39:6"},{"expression":{"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3229,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"18174:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18185:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3231,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"18189:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3232,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"18203:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18189:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18185:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18174:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3236,"nodeType":"ExpressionStatement","src":"18174:36:6"},{"expression":{"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3237,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"18243:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18254:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3239,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"18258:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3240,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"18272:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18258:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18254:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18243:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3244,"nodeType":"ExpressionStatement","src":"18243:36:6"},{"expression":{"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3245,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"18313:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18324:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3247,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"18328:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3248,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"18342:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18328:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18324:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18313:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3252,"nodeType":"ExpressionStatement","src":"18313:36:6"},{"expression":{"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3253,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"18383:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18394:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3255,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"18398:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3256,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"18412:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18398:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18394:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18383:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3260,"nodeType":"ExpressionStatement","src":"18383:36:6"},{"expression":{"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3261,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"18453:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18464:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3263,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"18468:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3264,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"18482:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18468:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18464:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18453:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3268,"nodeType":"ExpressionStatement","src":"18453:36:6"},{"expression":{"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3269,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"18524:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18535:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3271,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"18539:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3272,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"18553:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18539:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18535:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18524:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3276,"nodeType":"ExpressionStatement","src":"18524:36:6"},{"expression":{"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3277,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"18994:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3278,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"19003:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3279,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"19011:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19003:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18994:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3282,"nodeType":"ExpressionStatement","src":"18994:24:6"},{"expression":{"id":3283,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"19039:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3167,"id":3284,"nodeType":"Return","src":"19032:13:6"}]}]},"documentation":{"id":3157,"nodeType":"StructuredDocumentation","src":"14497:577:6","text":"@notice Calculates floor(x*y÷denominator) with full precision.\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv.\n Requirements:\n - The denominator cannot be zero.\n - The result must fit within uint256.\n Caveats:\n - This function does not work with fixed-point numbers.\n @param x The multiplicand as an uint256.\n @param y The multiplier as an uint256.\n @param denominator The divisor as an uint256.\n @return result The result as an uint256."},"id":3287,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"15088:6:6","nodeType":"FunctionDefinition","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"x","nameLocation":"15112:1:6","nodeType":"VariableDeclaration","scope":3287,"src":"15104:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3158,"name":"uint256","nodeType":"ElementaryTypeName","src":"15104:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3161,"mutability":"mutable","name":"y","nameLocation":"15131:1:6","nodeType":"VariableDeclaration","scope":3287,"src":"15123:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3160,"name":"uint256","nodeType":"ElementaryTypeName","src":"15123:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3163,"mutability":"mutable","name":"denominator","nameLocation":"15150:11:6","nodeType":"VariableDeclaration","scope":3287,"src":"15142:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3162,"name":"uint256","nodeType":"ElementaryTypeName","src":"15142:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15094:73:6"},"returnParameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"result","nameLocation":"15199:6:6","nodeType":"VariableDeclaration","scope":3287,"src":"15191:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"15191:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15190:16:6"},"scope":3698,"src":"15079:3983:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3338,"nodeType":"Block","src":"20278:1062:6","statements":[{"assignments":[3298],"declarations":[{"constant":false,"id":3298,"mutability":"mutable","name":"prod0","nameLocation":"20296:5:6","nodeType":"VariableDeclaration","scope":3338,"src":"20288:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"20288:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3299,"nodeType":"VariableDeclarationStatement","src":"20288:13:6"},{"assignments":[3301],"declarations":[{"constant":false,"id":3301,"mutability":"mutable","name":"prod1","nameLocation":"20319:5:6","nodeType":"VariableDeclaration","scope":3338,"src":"20311:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3300,"name":"uint256","nodeType":"ElementaryTypeName","src":"20311:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3302,"nodeType":"VariableDeclarationStatement","src":"20311:13:6"},{"AST":{"nodeType":"YulBlock","src":"20343:141:6","statements":[{"nodeType":"YulVariableDeclaration","src":"20357:30:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20374:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"20377:1:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20384:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20380:3:6"},"nodeType":"YulFunctionCall","src":"20380:6:6"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"20367:6:6"},"nodeType":"YulFunctionCall","src":"20367:20:6"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"20361:2:6","type":""}]},{"nodeType":"YulAssignment","src":"20400:18:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20413:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"20416:1:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20409:3:6"},"nodeType":"YulFunctionCall","src":"20409:9:6"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"20400:5:6"}]},{"nodeType":"YulAssignment","src":"20431:43:6","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"20448:2:6"},{"name":"prod0","nodeType":"YulIdentifier","src":"20452:5:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20444:3:6"},"nodeType":"YulFunctionCall","src":"20444:14:6"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"20463:2:6"},{"name":"prod0","nodeType":"YulIdentifier","src":"20467:5:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20460:2:6"},"nodeType":"YulFunctionCall","src":"20460:13:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20440:3:6"},"nodeType":"YulFunctionCall","src":"20440:34:6"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"20431:5:6"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":3298,"isOffset":false,"isSlot":false,"src":"20400:5:6","valueSize":1},{"declaration":3298,"isOffset":false,"isSlot":false,"src":"20452:5:6","valueSize":1},{"declaration":3298,"isOffset":false,"isSlot":false,"src":"20467:5:6","valueSize":1},{"declaration":3301,"isOffset":false,"isSlot":false,"src":"20431:5:6","valueSize":1},{"declaration":3290,"isOffset":false,"isSlot":false,"src":"20374:1:6","valueSize":1},{"declaration":3290,"isOffset":false,"isSlot":false,"src":"20413:1:6","valueSize":1},{"declaration":3292,"isOffset":false,"isSlot":false,"src":"20377:1:6","valueSize":1},{"declaration":3292,"isOffset":false,"isSlot":false,"src":"20416:1:6","valueSize":1}],"id":3303,"nodeType":"InlineAssembly","src":"20334:150:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3304,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"20498:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3305,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"20507:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20498:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3312,"nodeType":"IfStatement","src":"20494:92:6","trueBody":{"id":3311,"nodeType":"Block","src":"20514:72:6","statements":[{"errorCall":{"arguments":[{"id":3308,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"20569:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3307,"name":"PRBMath__MulDivFixedPointOverflow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"20535:33:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20535:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3310,"nodeType":"RevertStatement","src":"20528:47:6"}]}},{"assignments":[3314],"declarations":[{"constant":false,"id":3314,"mutability":"mutable","name":"remainder","nameLocation":"20604:9:6","nodeType":"VariableDeclaration","scope":3338,"src":"20596:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"20596:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3315,"nodeType":"VariableDeclarationStatement","src":"20596:17:6"},{"assignments":[3317],"declarations":[{"constant":false,"id":3317,"mutability":"mutable","name":"roundUpUnit","nameLocation":"20631:11:6","nodeType":"VariableDeclaration","scope":3338,"src":"20623:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"20623:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3318,"nodeType":"VariableDeclarationStatement","src":"20623:19:6"},{"AST":{"nodeType":"YulBlock","src":"20661:117:6","statements":[{"nodeType":"YulAssignment","src":"20675:32:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20695:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"20698:1:6"},{"name":"SCALE","nodeType":"YulIdentifier","src":"20701:5:6"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"20688:6:6"},"nodeType":"YulFunctionCall","src":"20688:19:6"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"20675:9:6"}]},{"nodeType":"YulAssignment","src":"20720:48:6","value":{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"20738:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"20749:18:6","type":"","value":"499999999999999999"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20735:2:6"},"nodeType":"YulFunctionCall","src":"20735:33:6"},"variableNames":[{"name":"roundUpUnit","nodeType":"YulIdentifier","src":"20720:11:6"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":1971,"isOffset":false,"isSlot":false,"src":"20701:5:6","valueSize":1},{"declaration":3314,"isOffset":false,"isSlot":false,"src":"20675:9:6","valueSize":1},{"declaration":3314,"isOffset":false,"isSlot":false,"src":"20738:9:6","valueSize":1},{"declaration":3317,"isOffset":false,"isSlot":false,"src":"20720:11:6","valueSize":1},{"declaration":3290,"isOffset":false,"isSlot":false,"src":"20695:1:6","valueSize":1},{"declaration":3292,"isOffset":false,"isSlot":false,"src":"20698:1:6","valueSize":1}],"id":3319,"nodeType":"InlineAssembly","src":"20652:126:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3320,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"20792:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20801:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20792:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3336,"nodeType":"IfStatement","src":"20788:152:6","trueBody":{"id":3335,"nodeType":"Block","src":"20804:136:6","statements":[{"id":3334,"nodeType":"UncheckedBlock","src":"20818:112:6","statements":[{"expression":{"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3323,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"20846:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3324,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"20856:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3325,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"20864:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20856:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3327,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20855:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3328,"name":"roundUpUnit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"20873:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20855:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20846:38:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3331,"nodeType":"ExpressionStatement","src":"20846:38:6"},{"expression":{"id":3332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"20909:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3296,"id":3333,"nodeType":"Return","src":"20902:13:6"}]}]}},{"AST":{"nodeType":"YulBlock","src":"20959:375:6","statements":[{"nodeType":"YulAssignment","src":"20973:351:6","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"21065:5:6"},{"name":"remainder","nodeType":"YulIdentifier","src":"21072:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21061:3:6"},"nodeType":"YulFunctionCall","src":"21061:21:6"},{"name":"SCALE_LPOTD","nodeType":"YulIdentifier","src":"21084:11:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21057:3:6"},"nodeType":"YulFunctionCall","src":"21057:39:6"},{"arguments":[{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"21130:5:6"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"21140:9:6"},{"name":"prod0","nodeType":"YulIdentifier","src":"21151:5:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21137:2:6"},"nodeType":"YulFunctionCall","src":"21137:20:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21126:3:6"},"nodeType":"YulFunctionCall","src":"21126:32:6"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21172:1:6","type":"","value":"0"},{"name":"SCALE_LPOTD","nodeType":"YulIdentifier","src":"21175:11:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21168:3:6"},"nodeType":"YulFunctionCall","src":"21168:19:6"},{"name":"SCALE_LPOTD","nodeType":"YulIdentifier","src":"21189:11:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21164:3:6"},"nodeType":"YulFunctionCall","src":"21164:37:6"},{"kind":"number","nodeType":"YulLiteral","src":"21203:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21160:3:6"},"nodeType":"YulFunctionCall","src":"21160:45:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21122:3:6"},"nodeType":"YulFunctionCall","src":"21122:84:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"21029:2:6"},"nodeType":"YulFunctionCall","src":"21029:199:6"},{"name":"SCALE_INVERSE","nodeType":"YulIdentifier","src":"21250:13:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21004:3:6"},"nodeType":"YulFunctionCall","src":"21004:277:6"},{"name":"roundUpUnit","nodeType":"YulIdentifier","src":"21299:11:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20983:3:6"},"nodeType":"YulFunctionCall","src":"20983:341:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"20973:6:6"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":1979,"isOffset":false,"isSlot":false,"src":"21250:13:6","valueSize":1},{"declaration":1975,"isOffset":false,"isSlot":false,"src":"21084:11:6","valueSize":1},{"declaration":1975,"isOffset":false,"isSlot":false,"src":"21175:11:6","valueSize":1},{"declaration":1975,"isOffset":false,"isSlot":false,"src":"21189:11:6","valueSize":1},{"declaration":3298,"isOffset":false,"isSlot":false,"src":"21065:5:6","valueSize":1},{"declaration":3298,"isOffset":false,"isSlot":false,"src":"21151:5:6","valueSize":1},{"declaration":3301,"isOffset":false,"isSlot":false,"src":"21130:5:6","valueSize":1},{"declaration":3314,"isOffset":false,"isSlot":false,"src":"21072:9:6","valueSize":1},{"declaration":3314,"isOffset":false,"isSlot":false,"src":"21140:9:6","valueSize":1},{"declaration":3295,"isOffset":false,"isSlot":false,"src":"20973:6:6","valueSize":1},{"declaration":3317,"isOffset":false,"isSlot":false,"src":"21299:11:6","valueSize":1}],"id":3337,"nodeType":"InlineAssembly","src":"20950:384:6"}]},"documentation":{"id":3288,"nodeType":"StructuredDocumentation","src":"19068:1118:6","text":"@notice Calculates floor(x*y÷1e18) with full precision.\n @dev Variant of \"mulDiv\" with constant folding, i.e. in which the denominator is always 1e18. Before returning the\n final result, we add 1 if (x * y) % SCALE >= HALF_SCALE. Without this, 6.6e-19 would be truncated to 0 instead of\n being rounded to 1e-18.  See \"Listing 6\" and text above it at https://accu.org/index.php/journals/1717.\n Requirements:\n - The result must fit within uint256.\n Caveats:\n - The body is purposely left uncommented; see the NatSpec comments in \"PRBMath.mulDiv\" to understand how this works.\n - It is assumed that the result can never be type(uint256).max when x and y solve the following two equations:\n     1. x * y = type(uint256).max * SCALE\n     2. (x * y) % SCALE >= SCALE / 2\n @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\n @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\n @return result The result as an unsigned 60.18-decimal fixed-point number."},"id":3339,"implemented":true,"kind":"function","modifiers":[],"name":"mulDivFixedPoint","nameLocation":"20200:16:6","nodeType":"FunctionDefinition","parameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"x","nameLocation":"20225:1:6","nodeType":"VariableDeclaration","scope":3339,"src":"20217:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"20217:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3292,"mutability":"mutable","name":"y","nameLocation":"20236:1:6","nodeType":"VariableDeclaration","scope":3339,"src":"20228:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3291,"name":"uint256","nodeType":"ElementaryTypeName","src":"20228:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20216:22:6"},"returnParameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"result","nameLocation":"20270:6:6","nodeType":"VariableDeclaration","scope":3339,"src":"20262:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"20262:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20261:16:6"},"scope":3698,"src":"20191:1149:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3491,"nodeType":"Block","src":"22011:1264:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3351,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"22025:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22035:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3353,"name":"int256","nodeType":"ElementaryTypeName","src":"22035:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3352,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22030:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22030:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"22030:16:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22025:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3358,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"22050:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22060:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3360,"name":"int256","nodeType":"ElementaryTypeName","src":"22060:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3359,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22055:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22055:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"22055:16:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22050:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22025:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3366,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"22075:11:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22095:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3368,"name":"int256","nodeType":"ElementaryTypeName","src":"22095:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3367,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22090:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22090:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"22090:16:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22075:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22025:81:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3378,"nodeType":"IfStatement","src":"22021:155:6","trueBody":{"id":3377,"nodeType":"Block","src":"22108:68:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3374,"name":"PRBMath__MulDivSignedInputTooSmall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"22129:34:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22129:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3376,"nodeType":"RevertStatement","src":"22122:43:6"}]}},{"assignments":[3380],"declarations":[{"constant":false,"id":3380,"mutability":"mutable","name":"ax","nameLocation":"22266:2:6","nodeType":"VariableDeclaration","scope":3491,"src":"22258:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"22258:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3381,"nodeType":"VariableDeclarationStatement","src":"22258:10:6"},{"assignments":[3383],"declarations":[{"constant":false,"id":3383,"mutability":"mutable","name":"ay","nameLocation":"22286:2:6","nodeType":"VariableDeclaration","scope":3491,"src":"22278:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3382,"name":"uint256","nodeType":"ElementaryTypeName","src":"22278:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3384,"nodeType":"VariableDeclarationStatement","src":"22278:10:6"},{"assignments":[3386],"declarations":[{"constant":false,"id":3386,"mutability":"mutable","name":"ad","nameLocation":"22306:2:6","nodeType":"VariableDeclaration","scope":3491,"src":"22298:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3385,"name":"uint256","nodeType":"ElementaryTypeName","src":"22298:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3387,"nodeType":"VariableDeclarationStatement","src":"22298:10:6"},{"id":3436,"nodeType":"UncheckedBlock","src":"22318:204:6","statements":[{"expression":{"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3388,"name":"ax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"22342:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3389,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"22347:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22351:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22347:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3399,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"22377:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22369:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3397,"name":"uint256","nodeType":"ElementaryTypeName","src":"22369:7:6","typeDescriptions":{}}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22369:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"22347:32:6","trueExpression":{"arguments":[{"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"22363:2:6","subExpression":{"id":3394,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"22364:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22355:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3392,"name":"uint256","nodeType":"ElementaryTypeName","src":"22355:7:6","typeDescriptions":{}}},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22355:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22342:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3403,"nodeType":"ExpressionStatement","src":"22342:37:6"},{"expression":{"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3404,"name":"ay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"22393:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3405,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"22398:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22402:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22398:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3415,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"22428:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22420:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"22420:7:6","typeDescriptions":{}}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22420:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"22398:32:6","trueExpression":{"arguments":[{"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"22414:2:6","subExpression":{"id":3410,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"22415:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22406:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3408,"name":"uint256","nodeType":"ElementaryTypeName","src":"22406:7:6","typeDescriptions":{}}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22406:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3419,"nodeType":"ExpressionStatement","src":"22393:37:6"},{"expression":{"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3420,"name":"ad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"22444:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3421,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"22449:11:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22463:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22449:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3431,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"22499:11:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22491:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3429,"name":"uint256","nodeType":"ElementaryTypeName","src":"22491:7:6","typeDescriptions":{}}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22491:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"22449:62:6","trueExpression":{"arguments":[{"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"22475:12:6","subExpression":{"id":3426,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"22476:11:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22467:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3424,"name":"uint256","nodeType":"ElementaryTypeName","src":"22467:7:6","typeDescriptions":{}}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22467:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22444:67:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3435,"nodeType":"ExpressionStatement","src":"22444:67:6"}]},{"assignments":[3438],"declarations":[{"constant":false,"id":3438,"mutability":"mutable","name":"rAbs","nameLocation":"22636:4:6","nodeType":"VariableDeclaration","scope":3491,"src":"22628:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"22628:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3444,"initialValue":{"arguments":[{"id":3440,"name":"ax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"22650:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3441,"name":"ay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"22654:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3442,"name":"ad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"22658:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3439,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"22643:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22643:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22628:33:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3445,"name":"rAbs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"22675:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":3450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22695:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3449,"name":"int256","nodeType":"ElementaryTypeName","src":"22695:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3448,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22690:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22690:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"22690:16:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22682:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3446,"name":"uint256","nodeType":"ElementaryTypeName","src":"22682:7:6","typeDescriptions":{}}},"id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22682:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22675:32:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3460,"nodeType":"IfStatement","src":"22671:105:6","trueBody":{"id":3459,"nodeType":"Block","src":"22709:67:6","statements":[{"errorCall":{"arguments":[{"id":3456,"name":"rAbs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"22760:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3455,"name":"PRBMath__MulDivSignedOverflow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"22730:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22730:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3458,"nodeType":"RevertStatement","src":"22723:42:6"}]}},{"assignments":[3462],"declarations":[{"constant":false,"id":3462,"mutability":"mutable","name":"sx","nameLocation":"22848:2:6","nodeType":"VariableDeclaration","scope":3491,"src":"22840:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3461,"name":"uint256","nodeType":"ElementaryTypeName","src":"22840:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3463,"nodeType":"VariableDeclarationStatement","src":"22840:10:6"},{"assignments":[3465],"declarations":[{"constant":false,"id":3465,"mutability":"mutable","name":"sy","nameLocation":"22868:2:6","nodeType":"VariableDeclaration","scope":3491,"src":"22860:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3464,"name":"uint256","nodeType":"ElementaryTypeName","src":"22860:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3466,"nodeType":"VariableDeclarationStatement","src":"22860:10:6"},{"assignments":[3468],"declarations":[{"constant":false,"id":3468,"mutability":"mutable","name":"sd","nameLocation":"22888:2:6","nodeType":"VariableDeclaration","scope":3491,"src":"22880:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"22880:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3469,"nodeType":"VariableDeclarationStatement","src":"22880:10:6"},{"AST":{"nodeType":"YulBlock","src":"22909:129:6","statements":[{"nodeType":"YulAssignment","src":"22923:23:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22933:1:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22940:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22943:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22936:3:6"},"nodeType":"YulFunctionCall","src":"22936:9:6"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"22929:3:6"},"nodeType":"YulFunctionCall","src":"22929:17:6"},"variableNames":[{"name":"sx","nodeType":"YulIdentifier","src":"22923:2:6"}]},{"nodeType":"YulAssignment","src":"22959:23:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22969:1:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22976:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22979:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22972:3:6"},"nodeType":"YulFunctionCall","src":"22972:9:6"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"22965:3:6"},"nodeType":"YulFunctionCall","src":"22965:17:6"},"variableNames":[{"name":"sy","nodeType":"YulIdentifier","src":"22959:2:6"}]},{"nodeType":"YulAssignment","src":"22995:33:6","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"23005:11:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23022:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23025:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23018:3:6"},"nodeType":"YulFunctionCall","src":"23018:9:6"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"23001:3:6"},"nodeType":"YulFunctionCall","src":"23001:27:6"},"variableNames":[{"name":"sd","nodeType":"YulIdentifier","src":"22995:2:6"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":3346,"isOffset":false,"isSlot":false,"src":"23005:11:6","valueSize":1},{"declaration":3468,"isOffset":false,"isSlot":false,"src":"22995:2:6","valueSize":1},{"declaration":3462,"isOffset":false,"isSlot":false,"src":"22923:2:6","valueSize":1},{"declaration":3465,"isOffset":false,"isSlot":false,"src":"22959:2:6","valueSize":1},{"declaration":3342,"isOffset":false,"isSlot":false,"src":"22933:1:6","valueSize":1},{"declaration":3344,"isOffset":false,"isSlot":false,"src":"22969:1:6","valueSize":1}],"id":3470,"nodeType":"InlineAssembly","src":"22900:138:6"},{"expression":{"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"23211:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3472,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"23220:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3473,"name":"sy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"23225:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23220:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3475,"name":"sd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"23230:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23220:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23236:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23220:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3486,"name":"rAbs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"23263:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23256:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3484,"name":"int256","nodeType":"ElementaryTypeName","src":"23256:6:6","typeDescriptions":{}}},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23256:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23220:48:6","trueExpression":{"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"23240:13:6","subExpression":{"arguments":[{"id":3481,"name":"rAbs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"23248:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23241:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3479,"name":"int256","nodeType":"ElementaryTypeName","src":"23241:6:6","typeDescriptions":{}}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23241:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23211:57:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3490,"nodeType":"ExpressionStatement","src":"23211:57:6"}]},"documentation":{"id":3340,"nodeType":"StructuredDocumentation","src":"21346:530:6","text":"@notice Calculates floor(x*y÷denominator) with full precision.\n @dev An extension of \"mulDiv\" for signed numbers. Works by computing the signs and the absolute values separately.\n Requirements:\n - None of the inputs can be type(int256).min.\n - The result must fit within int256.\n @param x The multiplicand as an int256.\n @param y The multiplier as an int256.\n @param denominator The divisor as an int256.\n @return result The result as an int256."},"id":3492,"implemented":true,"kind":"function","modifiers":[],"name":"mulDivSigned","nameLocation":"21890:12:6","nodeType":"FunctionDefinition","parameters":{"id":3347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3342,"mutability":"mutable","name":"x","nameLocation":"21919:1:6","nodeType":"VariableDeclaration","scope":3492,"src":"21912:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3341,"name":"int256","nodeType":"ElementaryTypeName","src":"21912:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3344,"mutability":"mutable","name":"y","nameLocation":"21937:1:6","nodeType":"VariableDeclaration","scope":3492,"src":"21930:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3343,"name":"int256","nodeType":"ElementaryTypeName","src":"21930:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3346,"mutability":"mutable","name":"denominator","nameLocation":"21955:11:6","nodeType":"VariableDeclaration","scope":3492,"src":"21948:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3345,"name":"int256","nodeType":"ElementaryTypeName","src":"21948:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21902:70:6"},"returnParameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"result","nameLocation":"22003:6:6","nodeType":"VariableDeclaration","scope":3492,"src":"21996:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3348,"name":"int256","nodeType":"ElementaryTypeName","src":"21996:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21995:15:6"},"scope":3698,"src":"21881:1394:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3696,"nodeType":"Block","src":"23754:1518:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3500,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"23768:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23773:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23768:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3506,"nodeType":"IfStatement","src":"23764:45:6","trueBody":{"id":3505,"nodeType":"Block","src":"23776:33:6","statements":[{"expression":{"hexValue":"30","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23797:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3499,"id":3504,"nodeType":"Return","src":"23790:8:6"}]}},{"assignments":[3508],"declarations":[{"constant":false,"id":3508,"mutability":"mutable","name":"xAux","nameLocation":"23928:4:6","nodeType":"VariableDeclaration","scope":3696,"src":"23920:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3507,"name":"uint256","nodeType":"ElementaryTypeName","src":"23920:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3513,"initialValue":{"arguments":[{"id":3511,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"23943:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23935:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3509,"name":"uint256","nodeType":"ElementaryTypeName","src":"23935:7:6","typeDescriptions":{}}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23935:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23920:25:6"},{"expression":{"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"23955:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23964:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23955:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3517,"nodeType":"ExpressionStatement","src":"23955:10:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3518,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"23979:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3078313030303030303030303030303030303030303030303030303030303030303030","id":3519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23987:35:6","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"value":"0x100000000000000000000000000000000"},"src":"23979:43:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3530,"nodeType":"IfStatement","src":"23975:113:6","trueBody":{"id":3529,"nodeType":"Block","src":"24024:64:6","statements":[{"expression":{"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3521,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"24038:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24047:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"24038:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3524,"nodeType":"ExpressionStatement","src":"24038:12:6"},{"expression":{"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3525,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24064:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24075:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24064:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3528,"nodeType":"ExpressionStatement","src":"24064:13:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3531,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"24101:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783130303030303030303030303030303030","id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24109:19:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"value":"0x10000000000000000"},"src":"24101:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3543,"nodeType":"IfStatement","src":"24097:96:6","trueBody":{"id":3542,"nodeType":"Block","src":"24130:63:6","statements":[{"expression":{"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3534,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"24144:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24144:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3537,"nodeType":"ExpressionStatement","src":"24144:11:6"},{"expression":{"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24169:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24180:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24169:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3541,"nodeType":"ExpressionStatement","src":"24169:13:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3544,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"24206:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3078313030303030303030","id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24214:11:6","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"value":"0x100000000"},"src":"24206:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3556,"nodeType":"IfStatement","src":"24202:88:6","trueBody":{"id":3555,"nodeType":"Block","src":"24227:63:6","statements":[{"expression":{"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3547,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"24241:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24250:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24241:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3550,"nodeType":"ExpressionStatement","src":"24241:11:6"},{"expression":{"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24266:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24277:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24266:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3554,"nodeType":"ExpressionStatement","src":"24266:13:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3557,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"24303:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783130303030","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24311:7:6","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"value":"0x10000"},"src":"24303:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3569,"nodeType":"IfStatement","src":"24299:83:6","trueBody":{"id":3568,"nodeType":"Block","src":"24320:62:6","statements":[{"expression":{"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3560,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"24334:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24343:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24334:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3563,"nodeType":"ExpressionStatement","src":"24334:11:6"},{"expression":{"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24359:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24370:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24359:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3567,"nodeType":"ExpressionStatement","src":"24359:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3570,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"24395:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3078313030","id":3571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24403:5:6","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"0x100"},"src":"24395:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3582,"nodeType":"IfStatement","src":"24391:80:6","trueBody":{"id":3581,"nodeType":"Block","src":"24410:61:6","statements":[{"expression":{"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3573,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"24424:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24433:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24424:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3576,"nodeType":"ExpressionStatement","src":"24424:10:6"},{"expression":{"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3577,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24448:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24459:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24448:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3580,"nodeType":"ExpressionStatement","src":"24448:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3583,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"24484:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783130","id":3584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24492:4:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"0x10"},"src":"24484:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3595,"nodeType":"IfStatement","src":"24480:79:6","trueBody":{"id":3594,"nodeType":"Block","src":"24498:61:6","statements":[{"expression":{"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3586,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"24512:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24521:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24512:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3589,"nodeType":"ExpressionStatement","src":"24512:10:6"},{"expression":{"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24536:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24547:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24536:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3593,"nodeType":"ExpressionStatement","src":"24536:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3596,"name":"xAux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"24572:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"307838","id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24580:3:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x8"},"src":"24572:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3604,"nodeType":"IfStatement","src":"24568:54:6","trueBody":{"id":3603,"nodeType":"Block","src":"24585:37:6","statements":[{"expression":{"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3599,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24599:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24610:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24599:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3602,"nodeType":"ExpressionStatement","src":"24599:12:6"}]}},{"id":3695,"nodeType":"UncheckedBlock","src":"24736:530:6","statements":[{"expression":{"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24760:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3606,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24770:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3607,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"24779:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24783:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24779:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24770:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24769:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24794:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24769:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3615,"nodeType":"ExpressionStatement","src":"24760:35:6"},{"expression":{"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3616,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24809:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3617,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24819:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3618,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"24828:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3619,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24832:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24828:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24819:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3622,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24818:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24843:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24818:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24809:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3626,"nodeType":"ExpressionStatement","src":"24809:35:6"},{"expression":{"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3627,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24858:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3628,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24868:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3629,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"24877:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3630,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24881:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24877:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24868:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3633,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24867:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24892:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24867:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24858:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3637,"nodeType":"ExpressionStatement","src":"24858:35:6"},{"expression":{"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3638,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24907:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3639,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24917:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3640,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"24926:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24930:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24926:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24917:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24916:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24941:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24916:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24907:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3648,"nodeType":"ExpressionStatement","src":"24907:35:6"},{"expression":{"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3649,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24956:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3650,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24966:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3651,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"24975:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"24979:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24975:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24966:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24965:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24990:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24965:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24956:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3659,"nodeType":"ExpressionStatement","src":"24956:35:6"},{"expression":{"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"25005:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"25015:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3662,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"25024:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3663,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"25028:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25024:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25015:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25014:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25039:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25014:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25005:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3670,"nodeType":"ExpressionStatement","src":"25005:35:6"},{"expression":{"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3671,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"25054:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3672,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"25064:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3673,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"25073:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"25077:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25073:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25064:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3677,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25063:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25088:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25063:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25054:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3681,"nodeType":"ExpressionStatement","src":"25054:35:6"},{"assignments":[3683],"declarations":[{"constant":false,"id":3683,"mutability":"mutable","name":"roundedDownResult","nameLocation":"25148:17:6","nodeType":"VariableDeclaration","scope":3695,"src":"25140:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3682,"name":"uint256","nodeType":"ElementaryTypeName","src":"25140:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3687,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3684,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"25168:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3685,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"25172:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25168:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25140:38:6"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3688,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"25199:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3689,"name":"roundedDownResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"25209:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3692,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"25249:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"25199:56:6","trueExpression":{"id":3691,"name":"roundedDownResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"25229:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3499,"id":3694,"nodeType":"Return","src":"25192:63:6"}]}]},"documentation":{"id":3493,"nodeType":"StructuredDocumentation","src":"23281:404:6","text":"@notice Calculates the square root of x, rounding down.\n @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\n Caveats:\n - This function does not work with fixed-point numbers.\n @param x The uint256 number for which to calculate the square root.\n @return result The result as an uint256."},"id":3697,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23699:4:6","nodeType":"FunctionDefinition","parameters":{"id":3496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3495,"mutability":"mutable","name":"x","nameLocation":"23712:1:6","nodeType":"VariableDeclaration","scope":3697,"src":"23704:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3494,"name":"uint256","nodeType":"ElementaryTypeName","src":"23704:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23703:11:6"},"returnParameters":{"id":3499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3498,"mutability":"mutable","name":"result","nameLocation":"23746:6:6","nodeType":"VariableDeclaration","scope":3697,"src":"23738:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"23738:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23737:16:6"},"scope":3698,"src":"23690:1582:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3699,"src":"3951:21323:6","usedErrors":[]}],"src":"38:25237:6"},"id":6},"prb-math/contracts/PRBMathUD60x18.sol":{"ast":{"absolutePath":"prb-math/contracts/PRBMathUD60x18.sol","exportedSymbols":{"PRBMath":[3698],"PRBMathSD59x18__AbsInputTooSmall":[1829],"PRBMathSD59x18__CeilOverflow":[1834],"PRBMathSD59x18__DivInputTooSmall":[1837],"PRBMathSD59x18__DivOverflow":[1842],"PRBMathSD59x18__Exp2InputTooBig":[1852],"PRBMathSD59x18__ExpInputTooBig":[1847],"PRBMathSD59x18__FloorUnderflow":[1857],"PRBMathSD59x18__FromIntOverflow":[1862],"PRBMathSD59x18__FromIntUnderflow":[1867],"PRBMathSD59x18__GmNegativeProduct":[1874],"PRBMathSD59x18__GmOverflow":[1881],"PRBMathSD59x18__LogInputTooSmall":[1886],"PRBMathSD59x18__MulInputTooSmall":[1889],"PRBMathSD59x18__MulOverflow":[1894],"PRBMathSD59x18__PowuOverflow":[1899],"PRBMathSD59x18__SqrtNegativeInput":[1904],"PRBMathSD59x18__SqrtOverflow":[1909],"PRBMathUD60x18":[4308],"PRBMathUD60x18__AddOverflow":[1916],"PRBMathUD60x18__CeilOverflow":[1921],"PRBMathUD60x18__Exp2InputTooBig":[1931],"PRBMathUD60x18__ExpInputTooBig":[1926],"PRBMathUD60x18__FromUintOverflow":[1936],"PRBMathUD60x18__GmOverflow":[1943],"PRBMathUD60x18__LogInputTooSmall":[1948],"PRBMathUD60x18__SqrtOverflow":[1953],"PRBMathUD60x18__SubUnderflow":[1960],"PRBMath__MulDivFixedPointOverflow":[1811],"PRBMath__MulDivOverflow":[1818],"PRBMath__MulDivSignedInputTooSmall":[1821],"PRBMath__MulDivSignedOverflow":[1826]},"id":4309,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":3700,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"38:24:7"},{"absolutePath":"prb-math/contracts/PRBMath.sol","file":"./PRBMath.sol","id":3701,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4309,"sourceUnit":3699,"src":"64:23:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3702,"nodeType":"StructuredDocumentation","src":"89:477:7","text":"@title PRBMathUD60x18\n @author Paul Razvan Berg\n @notice Smart contract library for advanced fixed-point math that works with uint256 numbers considered to have 18\n trailing decimals. We call this number representation unsigned 60.18-decimal fixed-point, since there can be up to 60\n digits in the integer part and up to 18 decimals in the fractional part. The numbers are bound by the minimum and the\n maximum values permitted by the Solidity type uint256."},"fullyImplemented":true,"id":4308,"linearizedBaseContracts":[4308],"name":"PRBMathUD60x18","nameLocation":"574:14:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3703,"nodeType":"StructuredDocumentation","src":"595:31:7","text":"@dev Half the SCALE number."},"id":3706,"mutability":"constant","name":"HALF_SCALE","nameLocation":"657:10:7","nodeType":"VariableDeclaration","scope":4308,"src":"631:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3704,"name":"uint256","nodeType":"ElementaryTypeName","src":"631:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35653137","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"670:4:7","typeDescriptions":{"typeIdentifier":"t_rational_500000000000000000_by_1","typeString":"int_const 500000000000000000"},"value":"5e17"},"visibility":"internal"},{"constant":true,"documentation":{"id":3707,"nodeType":"StructuredDocumentation","src":"681:65:7","text":"@dev log2(e) as an unsigned 60.18-decimal fixed-point number."},"id":3710,"mutability":"constant","name":"LOG2_E","nameLocation":"777:6:7","nodeType":"VariableDeclaration","scope":4308,"src":"751:55:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"315f343432363935303430383838393633343037","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"786:20:7","typeDescriptions":{"typeIdentifier":"t_rational_1442695040888963407_by_1","typeString":"int_const 1442695040888963407"},"value":"1_442695040888963407"},"visibility":"internal"},{"constant":true,"documentation":{"id":3711,"nodeType":"StructuredDocumentation","src":"813:81:7","text":"@dev The maximum value an unsigned 60.18-decimal fixed-point number can have."},"id":3714,"mutability":"constant","name":"MAX_UD60x18","nameLocation":"925:11:7","nodeType":"VariableDeclaration","scope":4308,"src":"899:127:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3712,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3131353739323038393233373331363139353432333537303938353030383638373930373835333236393938343636353634303536343033393435375f353834303037393133313239363339393335","id":3713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"947:79:7","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"},"value":"115792089237316195423570985008687907853269984665640564039457_584007913129639935"},"visibility":"internal"},{"constant":true,"documentation":{"id":3715,"nodeType":"StructuredDocumentation","src":"1033:87:7","text":"@dev The maximum whole value an unsigned 60.18-decimal fixed-point number can have."},"id":3718,"mutability":"constant","name":"MAX_WHOLE_UD60x18","nameLocation":"1151:17:7","nodeType":"VariableDeclaration","scope":4308,"src":"1125:133:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3716,"name":"uint256","nodeType":"ElementaryTypeName","src":"1125:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3131353739323038393233373331363139353432333537303938353030383638373930373835333236393938343636353634303536343033393435375f303030303030303030303030303030303030","id":3717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1179:79:7","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457000000000000000000_by_1","typeString":"int_const 1157...(70 digits omitted)...0000"},"value":"115792089237316195423570985008687907853269984665640564039457_000000000000000000"},"visibility":"internal"},{"constant":true,"documentation":{"id":3719,"nodeType":"StructuredDocumentation","src":"1265:55:7","text":"@dev How many trailing decimals can be represented."},"id":3722,"mutability":"constant","name":"SCALE","nameLocation":"1351:5:7","nodeType":"VariableDeclaration","scope":4308,"src":"1325:38:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"1325:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1359:4:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"body":{"id":3752,"nodeType":"Block","src":"1785:358:7","statements":[{"id":3751,"nodeType":"UncheckedBlock","src":"1841:296:7","statements":[{"expression":{"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3732,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"2084:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3733,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"2094:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2099:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2094:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3736,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2093:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3737,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"2105:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2110:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2105:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3740,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2104:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2093:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3742,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"2116:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3743,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"2120:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2116:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"31","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2124:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2116:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2115:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2093:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2084:42:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3750,"nodeType":"ExpressionStatement","src":"2084:42:7"}]}]},"documentation":{"id":3723,"nodeType":"StructuredDocumentation","src":"1370:336:7","text":"@notice Calculates the arithmetic average of x and y, rounding down.\n @param x The first operand as an unsigned 60.18-decimal fixed-point number.\n @param y The second operand as an unsigned 60.18-decimal fixed-point number.\n @return result The arithmetic average as an unsigned 60.18-decimal fixed-point number."},"id":3753,"implemented":true,"kind":"function","modifiers":[],"name":"avg","nameLocation":"1720:3:7","nodeType":"FunctionDefinition","parameters":{"id":3728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"mutability":"mutable","name":"x","nameLocation":"1732:1:7","nodeType":"VariableDeclaration","scope":3753,"src":"1724:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"1724:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3727,"mutability":"mutable","name":"y","nameLocation":"1743:1:7","nodeType":"VariableDeclaration","scope":3753,"src":"1735:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"1735:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1723:22:7"},"returnParameters":{"id":3731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"result","nameLocation":"1777:6:7","nodeType":"VariableDeclaration","scope":3753,"src":"1769:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"1769:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1768:16:7"},"scope":4308,"src":"1711:432:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3771,"nodeType":"Block","src":"2811:479:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3761,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"2825:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3762,"name":"MAX_WHOLE_UD60x18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"2829:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2825:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3769,"nodeType":"IfStatement","src":"2821:90:7","trueBody":{"id":3768,"nodeType":"Block","src":"2848:63:7","statements":[{"errorCall":{"arguments":[{"id":3765,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"2898:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3764,"name":"PRBMathUD60x18__CeilOverflow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"2869:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2869:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3767,"nodeType":"RevertStatement","src":"2862:38:7"}]}},{"AST":{"nodeType":"YulBlock","src":"2929:355:7","statements":[{"nodeType":"YulVariableDeclaration","src":"2996:30:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3017:1:7"},{"name":"SCALE","nodeType":"YulIdentifier","src":"3020:5:7"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3013:3:7"},"nodeType":"YulFunctionCall","src":"3013:13:7"},"variables":[{"name":"remainder","nodeType":"YulTypedName","src":"3000:9:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3101:34:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"3118:5:7"},{"name":"remainder","nodeType":"YulIdentifier","src":"3125:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3114:3:7"},"nodeType":"YulFunctionCall","src":"3114:21:7"},"variables":[{"name":"delta","nodeType":"YulTypedName","src":"3105:5:7","type":""}]},{"nodeType":"YulAssignment","src":"3228:46:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3242:1:7"},{"arguments":[{"name":"delta","nodeType":"YulIdentifier","src":"3249:5:7"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3259:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3270:1:7","type":"","value":"0"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3256:2:7"},"nodeType":"YulFunctionCall","src":"3256:16:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3245:3:7"},"nodeType":"YulFunctionCall","src":"3245:28:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3238:3:7"},"nodeType":"YulFunctionCall","src":"3238:36:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3228:6:7"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":3722,"isOffset":false,"isSlot":false,"src":"3020:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"3118:5:7","valueSize":1},{"declaration":3759,"isOffset":false,"isSlot":false,"src":"3228:6:7","valueSize":1},{"declaration":3756,"isOffset":false,"isSlot":false,"src":"3017:1:7","valueSize":1},{"declaration":3756,"isOffset":false,"isSlot":false,"src":"3242:1:7","valueSize":1}],"id":3770,"nodeType":"InlineAssembly","src":"2920:364:7"}]},"documentation":{"id":3754,"nodeType":"StructuredDocumentation","src":"2149:593:7","text":"@notice Yields the least unsigned 60.18 decimal fixed-point number greater than or equal to x.\n @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\n See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\n Requirements:\n - x must be less than or equal to MAX_WHOLE_UD60x18.\n @param x The unsigned 60.18-decimal fixed-point number to ceil.\n @param result The least integer greater than or equal to x, as an unsigned 60.18-decimal fixed-point number."},"id":3772,"implemented":true,"kind":"function","modifiers":[],"name":"ceil","nameLocation":"2756:4:7","nodeType":"FunctionDefinition","parameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"x","nameLocation":"2769:1:7","nodeType":"VariableDeclaration","scope":3772,"src":"2761:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"2761:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2760:11:7"},"returnParameters":{"id":3760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3759,"mutability":"mutable","name":"result","nameLocation":"2803:6:7","nodeType":"VariableDeclaration","scope":3772,"src":"2795:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2795:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2794:16:7"},"scope":4308,"src":"2747:543:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3791,"nodeType":"Block","src":"3913:53:7","statements":[{"expression":{"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3782,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"3923:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3785,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"3947:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3786,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"3950:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3787,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"3957:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3783,"name":"PRBMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"3932:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PRBMath_$3698_$","typeString":"type(library PRBMath)"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":3287,"src":"3932:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3932:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3923:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3790,"nodeType":"ExpressionStatement","src":"3923:36:7"}]},"documentation":{"id":3773,"nodeType":"StructuredDocumentation","src":"3296:538:7","text":"@notice Divides two unsigned 60.18-decimal fixed-point numbers, returning a new unsigned 60.18-decimal fixed-point number.\n @dev Uses mulDiv to enable overflow-safe multiplication and division.\n Requirements:\n - The denominator cannot be zero.\n @param x The numerator as an unsigned 60.18-decimal fixed-point number.\n @param y The denominator as an unsigned 60.18-decimal fixed-point number.\n @param result The quotient as an unsigned 60.18-decimal fixed-point number."},"id":3792,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3848:3:7","nodeType":"FunctionDefinition","parameters":{"id":3778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"mutability":"mutable","name":"x","nameLocation":"3860:1:7","nodeType":"VariableDeclaration","scope":3792,"src":"3852:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3774,"name":"uint256","nodeType":"ElementaryTypeName","src":"3852:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3777,"mutability":"mutable","name":"y","nameLocation":"3871:1:7","nodeType":"VariableDeclaration","scope":3792,"src":"3863:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3851:22:7"},"returnParameters":{"id":3781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3780,"mutability":"mutable","name":"result","nameLocation":"3905:6:7","nodeType":"VariableDeclaration","scope":3792,"src":"3897:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3779,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:16:7"},"scope":4308,"src":"3839:127:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3802,"nodeType":"Block","src":"4186:46:7","statements":[{"expression":{"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3798,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"4196:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"325f373138323831383238343539303435323335","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4205:20:7","typeDescriptions":{"typeIdentifier":"t_rational_2718281828459045235_by_1","typeString":"int_const 2718281828459045235"},"value":"2_718281828459045235"},"src":"4196:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3801,"nodeType":"ExpressionStatement","src":"4196:29:7"}]},"documentation":{"id":3793,"nodeType":"StructuredDocumentation","src":"3972:157:7","text":"@notice Returns Euler's number as an unsigned 60.18-decimal fixed-point number.\n @dev See https://en.wikipedia.org/wiki/E_(mathematical_constant)."},"id":3803,"implemented":true,"kind":"function","modifiers":[],"name":"e","nameLocation":"4143:1:7","nodeType":"FunctionDefinition","parameters":{"id":3794,"nodeType":"ParameterList","parameters":[],"src":"4144:2:7"},"returnParameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"result","nameLocation":"4178:6:7","nodeType":"VariableDeclaration","scope":3803,"src":"4170:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"4170:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4169:16:7"},"scope":4308,"src":"4134:98:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3838,"nodeType":"Block","src":"4706:418:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3811,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"4805:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3133335f303834323538363637353039343939343431","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4810:22:7","typeDescriptions":{"typeIdentifier":"t_rational_133084258667509499441_by_1","typeString":"int_const 133084258667509499441"},"value":"133_084258667509499441"},"src":"4805:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3819,"nodeType":"IfStatement","src":"4801:98:7","trueBody":{"id":3818,"nodeType":"Block","src":"4834:65:7","statements":[{"errorCall":{"arguments":[{"id":3815,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"4886:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3814,"name":"PRBMathUD60x18__ExpInputTooBig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"4855:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4855:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3817,"nodeType":"RevertStatement","src":"4848:40:7"}]}},{"id":3837,"nodeType":"UncheckedBlock","src":"4974:144:7","statements":[{"assignments":[3821],"declarations":[{"constant":false,"id":3821,"mutability":"mutable","name":"doubleScaleProduct","nameLocation":"5006:18:7","nodeType":"VariableDeclaration","scope":3837,"src":"4998:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3820,"name":"uint256","nodeType":"ElementaryTypeName","src":"4998:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3825,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3822,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"5027:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3823,"name":"LOG2_E","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"5031:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5027:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4998:39:7"},{"expression":{"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3826,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"5051:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3828,"name":"doubleScaleProduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"5066:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3829,"name":"HALF_SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"5087:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5066:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5065:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3832,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"5101:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3827,"name":"exp2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"5060:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5060:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5051:56:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3836,"nodeType":"ExpressionStatement","src":"5051:56:7"}]}]},"documentation":{"id":3804,"nodeType":"StructuredDocumentation","src":"4238:400:7","text":"@notice Calculates the natural exponent of x.\n @dev Based on the insight that e^x = 2^(x * log2(e)).\n Requirements:\n - All from \"log2\".\n - x must be less than 133.084258667509499441.\n @param x The exponent as an unsigned 60.18-decimal fixed-point number.\n @return result The result as an unsigned 60.18-decimal fixed-point number."},"id":3839,"implemented":true,"kind":"function","modifiers":[],"name":"exp","nameLocation":"4652:3:7","nodeType":"FunctionDefinition","parameters":{"id":3807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3806,"mutability":"mutable","name":"x","nameLocation":"4664:1:7","nodeType":"VariableDeclaration","scope":3839,"src":"4656:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3805,"name":"uint256","nodeType":"ElementaryTypeName","src":"4656:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4655:11:7"},"returnParameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"result","nameLocation":"4698:6:7","nodeType":"VariableDeclaration","scope":3839,"src":"4690:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3808,"name":"uint256","nodeType":"ElementaryTypeName","src":"4690:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4689:16:7"},"scope":4308,"src":"4643:481:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3873,"nodeType":"Block","src":"5638:492:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3847,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"5744:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313932653138","id":3848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5749:6:7","typeDescriptions":{"typeIdentifier":"t_rational_192000000000000000000_by_1","typeString":"int_const 192000000000000000000"},"value":"192e18"},"src":"5744:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3855,"nodeType":"IfStatement","src":"5740:83:7","trueBody":{"id":3854,"nodeType":"Block","src":"5757:66:7","statements":[{"errorCall":{"arguments":[{"id":3851,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"5810:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3850,"name":"PRBMathUD60x18__Exp2InputTooBig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"5778:31:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5778:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3853,"nodeType":"RevertStatement","src":"5771:41:7"}]}},{"id":3872,"nodeType":"UncheckedBlock","src":"5833:291:7","statements":[{"assignments":[3857],"declarations":[{"constant":false,"id":3857,"mutability":"mutable","name":"x192x64","nameLocation":"5928:7:7","nodeType":"VariableDeclaration","scope":3872,"src":"5920:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3856,"name":"uint256","nodeType":"ElementaryTypeName","src":"5920:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3864,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3858,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"5939:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5944:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5939:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3861,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5938:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3862,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"5950:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5938:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5920:35:7"},{"expression":{"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"6083:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3868,"name":"x192x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"6105:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3866,"name":"PRBMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"6092:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PRBMath_$3698_$","typeString":"type(library PRBMath)"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exp2","nodeType":"MemberAccess","referencedDeclaration":3031,"src":"6092:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6092:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6083:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3871,"nodeType":"ExpressionStatement","src":"6083:30:7"}]}]},"documentation":{"id":3840,"nodeType":"StructuredDocumentation","src":"5130:439:7","text":"@notice Calculates the binary exponent of x using the binary fraction method.\n @dev See https://ethereum.stackexchange.com/q/79903/24693.\n Requirements:\n - x must be 192 or less.\n - The result must fit within MAX_UD60x18.\n @param x The exponent as an unsigned 60.18-decimal fixed-point number.\n @return result The result as an unsigned 60.18-decimal fixed-point number."},"id":3874,"implemented":true,"kind":"function","modifiers":[],"name":"exp2","nameLocation":"5583:4:7","nodeType":"FunctionDefinition","parameters":{"id":3843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"x","nameLocation":"5596:1:7","nodeType":"VariableDeclaration","scope":3874,"src":"5588:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3841,"name":"uint256","nodeType":"ElementaryTypeName","src":"5588:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5587:11:7"},"returnParameters":{"id":3846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3845,"mutability":"mutable","name":"result","nameLocation":"5630:6:7","nodeType":"VariableDeclaration","scope":3874,"src":"5622:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3844,"name":"uint256","nodeType":"ElementaryTypeName","src":"5622:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5621:16:7"},"scope":4308,"src":"5574:556:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3883,"nodeType":"Block","src":"6693:279:7","statements":[{"AST":{"nodeType":"YulBlock","src":"6712:254:7","statements":[{"nodeType":"YulVariableDeclaration","src":"6779:30:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6800:1:7"},{"name":"SCALE","nodeType":"YulIdentifier","src":"6803:5:7"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"6796:3:7"},"nodeType":"YulFunctionCall","src":"6796:13:7"},"variables":[{"name":"remainder","nodeType":"YulTypedName","src":"6783:9:7","type":""}]},{"nodeType":"YulAssignment","src":"6906:50:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6920:1:7"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6927:9:7"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6941:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"6952:1:7","type":"","value":"0"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6938:2:7"},"nodeType":"YulFunctionCall","src":"6938:16:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6923:3:7"},"nodeType":"YulFunctionCall","src":"6923:32:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6916:3:7"},"nodeType":"YulFunctionCall","src":"6916:40:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6906:6:7"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":3722,"isOffset":false,"isSlot":false,"src":"6803:5:7","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"6906:6:7","valueSize":1},{"declaration":3877,"isOffset":false,"isSlot":false,"src":"6800:1:7","valueSize":1},{"declaration":3877,"isOffset":false,"isSlot":false,"src":"6920:1:7","valueSize":1}],"id":3882,"nodeType":"InlineAssembly","src":"6703:263:7"}]},"documentation":{"id":3875,"nodeType":"StructuredDocumentation","src":"6136:487:7","text":"@notice Yields the greatest unsigned 60.18 decimal fixed-point number less than or equal to x.\n @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\n See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\n @param x The unsigned 60.18-decimal fixed-point number to floor.\n @param result The greatest integer less than or equal to x, as an unsigned 60.18-decimal fixed-point number."},"id":3884,"implemented":true,"kind":"function","modifiers":[],"name":"floor","nameLocation":"6637:5:7","nodeType":"FunctionDefinition","parameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"mutability":"mutable","name":"x","nameLocation":"6651:1:7","nodeType":"VariableDeclaration","scope":3884,"src":"6643:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"6643:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6642:11:7"},"returnParameters":{"id":3881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"result","nameLocation":"6685:6:7","nodeType":"VariableDeclaration","scope":3884,"src":"6677:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint256","nodeType":"ElementaryTypeName","src":"6677:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6676:16:7"},"scope":4308,"src":"6628:344:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3893,"nodeType":"Block","src":"7386:72:7","statements":[{"AST":{"nodeType":"YulBlock","src":"7405:47:7","statements":[{"nodeType":"YulAssignment","src":"7419:23:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7433:1:7"},{"name":"SCALE","nodeType":"YulIdentifier","src":"7436:5:7"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"7429:3:7"},"nodeType":"YulFunctionCall","src":"7429:13:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7419:6:7"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":3722,"isOffset":false,"isSlot":false,"src":"7436:5:7","valueSize":1},{"declaration":3890,"isOffset":false,"isSlot":false,"src":"7419:6:7","valueSize":1},{"declaration":3887,"isOffset":false,"isSlot":false,"src":"7433:1:7","valueSize":1}],"id":3892,"nodeType":"InlineAssembly","src":"7396:56:7"}]},"documentation":{"id":3885,"nodeType":"StructuredDocumentation","src":"6978:339:7","text":"@notice Yields the excess beyond the floor of x.\n @dev Based on the odd function definition https://en.wikipedia.org/wiki/Fractional_part.\n @param x The unsigned 60.18-decimal fixed-point number to get the fractional part of.\n @param result The fractional part of x as an unsigned 60.18-decimal fixed-point number."},"id":3894,"implemented":true,"kind":"function","modifiers":[],"name":"frac","nameLocation":"7331:4:7","nodeType":"FunctionDefinition","parameters":{"id":3888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3887,"mutability":"mutable","name":"x","nameLocation":"7344:1:7","nodeType":"VariableDeclaration","scope":3894,"src":"7336:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3886,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7335:11:7"},"returnParameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3890,"mutability":"mutable","name":"result","nameLocation":"7378:6:7","nodeType":"VariableDeclaration","scope":3894,"src":"7370:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3889,"name":"uint256","nodeType":"ElementaryTypeName","src":"7370:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7369:16:7"},"scope":4308,"src":"7322:136:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3920,"nodeType":"Block","src":"7898:186:7","statements":[{"id":3919,"nodeType":"UncheckedBlock","src":"7908:170:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3902,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"7936:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":3903,"name":"MAX_UD60x18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"7940:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3904,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"7954:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7940:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7936:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3912,"nodeType":"IfStatement","src":"7932:104:7","trueBody":{"id":3911,"nodeType":"Block","src":"7961:75:7","statements":[{"errorCall":{"arguments":[{"id":3908,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"8019:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3907,"name":"PRBMathUD60x18__FromUintOverflow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"7986:32:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7986:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3910,"nodeType":"RevertStatement","src":"7979:42:7"}]}},{"expression":{"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3913,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"8049:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3914,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"8058:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3915,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"8062:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8058:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8049:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3918,"nodeType":"ExpressionStatement","src":"8049:18:7"}]}]},"documentation":{"id":3895,"nodeType":"StructuredDocumentation","src":"7464:361:7","text":"@notice Converts a number from basic integer form to unsigned 60.18-decimal fixed-point representation.\n @dev Requirements:\n - x must be less than or equal to MAX_UD60x18 divided by SCALE.\n @param x The basic integer to convert.\n @param result The same number in unsigned 60.18-decimal fixed-point representation."},"id":3921,"implemented":true,"kind":"function","modifiers":[],"name":"fromUint","nameLocation":"7839:8:7","nodeType":"FunctionDefinition","parameters":{"id":3898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"x","nameLocation":"7856:1:7","nodeType":"VariableDeclaration","scope":3921,"src":"7848:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3896,"name":"uint256","nodeType":"ElementaryTypeName","src":"7848:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7847:11:7"},"returnParameters":{"id":3901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3900,"mutability":"mutable","name":"result","nameLocation":"7890:6:7","nodeType":"VariableDeclaration","scope":3921,"src":"7882:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3899,"name":"uint256","nodeType":"ElementaryTypeName","src":"7882:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7881:16:7"},"scope":4308,"src":"7830:254:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3964,"nodeType":"Block","src":"8609:557:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3931,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"8623:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8628:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8623:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3937,"nodeType":"IfStatement","src":"8619:45:7","trueBody":{"id":3936,"nodeType":"Block","src":"8631:33:7","statements":[{"expression":{"hexValue":"30","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8652:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3930,"id":3935,"nodeType":"Return","src":"8645:8:7"}]}},{"id":3963,"nodeType":"UncheckedBlock","src":"8674:486:7","statements":[{"assignments":[3939],"declarations":[{"constant":false,"id":3939,"mutability":"mutable","name":"xy","nameLocation":"8791:2:7","nodeType":"VariableDeclaration","scope":3963,"src":"8783:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3938,"name":"uint256","nodeType":"ElementaryTypeName","src":"8783:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3943,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3940,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"8796:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3941,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"8800:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8796:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8783:18:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3944,"name":"xy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"8819:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3945,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"8824:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8819:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3947,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"8829:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8819:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3955,"nodeType":"IfStatement","src":"8815:89:7","trueBody":{"id":3954,"nodeType":"Block","src":"8832:72:7","statements":[{"errorCall":{"arguments":[{"id":3950,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"8884:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3951,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"8887:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3949,"name":"PRBMathUD60x18__GmOverflow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"8857:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8857:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3953,"nodeType":"RevertStatement","src":"8850:39:7"}]}},{"expression":{"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3956,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"9124:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3959,"name":"xy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"9146:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3957,"name":"PRBMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"9133:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PRBMath_$3698_$","typeString":"type(library PRBMath)"}},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":3697,"src":"9133:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9133:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9124:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3962,"nodeType":"ExpressionStatement","src":"9124:25:7"}]}]},"documentation":{"id":3922,"nodeType":"StructuredDocumentation","src":"8090:441:7","text":"@notice Calculates geometric mean of x and y, i.e. sqrt(x * y), rounding down.\n @dev Requirements:\n - x * y must fit within MAX_UD60x18, lest it overflows.\n @param x The first operand as an unsigned 60.18-decimal fixed-point number.\n @param y The second operand as an unsigned 60.18-decimal fixed-point number.\n @return result The result as an unsigned 60.18-decimal fixed-point number."},"id":3965,"implemented":true,"kind":"function","modifiers":[],"name":"gm","nameLocation":"8545:2:7","nodeType":"FunctionDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3924,"mutability":"mutable","name":"x","nameLocation":"8556:1:7","nodeType":"VariableDeclaration","scope":3965,"src":"8548:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"8548:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"y","nameLocation":"8567:1:7","nodeType":"VariableDeclaration","scope":3965,"src":"8559:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"8559:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8547:22:7"},"returnParameters":{"id":3930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"result","nameLocation":"8601:6:7","nodeType":"VariableDeclaration","scope":3965,"src":"8593:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"8593:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8592:16:7"},"scope":4308,"src":"8536:630:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3980,"nodeType":"Block","src":"9545:106:7","statements":[{"id":3979,"nodeType":"UncheckedBlock","src":"9555:90:7","statements":[{"expression":{"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"9617:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31653336","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9626:4:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3975,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"9633:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9626:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9617:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3978,"nodeType":"ExpressionStatement","src":"9617:17:7"}]}]},"documentation":{"id":3966,"nodeType":"StructuredDocumentation","src":"9172:305:7","text":"@notice Calculates 1 / x, rounding toward zero.\n @dev Requirements:\n - x cannot be zero.\n @param x The unsigned 60.18-decimal fixed-point number for which to calculate the inverse.\n @return result The inverse as an unsigned 60.18-decimal fixed-point number."},"id":3981,"implemented":true,"kind":"function","modifiers":[],"name":"inv","nameLocation":"9491:3:7","nodeType":"FunctionDefinition","parameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3968,"mutability":"mutable","name":"x","nameLocation":"9503:1:7","nodeType":"VariableDeclaration","scope":3981,"src":"9495:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"9495:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9494:11:7"},"returnParameters":{"id":3972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"result","nameLocation":"9537:6:7","nodeType":"VariableDeclaration","scope":3981,"src":"9529:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3970,"name":"uint256","nodeType":"ElementaryTypeName","src":"9529:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9528:16:7"},"scope":4308,"src":"9482:169:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4001,"nodeType":"Block","src":"10286:260:7","statements":[{"id":4000,"nodeType":"UncheckedBlock","src":"10470:70:7","statements":[{"expression":{"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3989,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"10494:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3991,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"10509:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3990,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"10504:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10504:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3993,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"10514:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10504:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3995,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10503:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3996,"name":"LOG2_E","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"10523:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10503:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10494:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3999,"nodeType":"ExpressionStatement","src":"10494:35:7"}]}]},"documentation":{"id":3982,"nodeType":"StructuredDocumentation","src":"9657:562:7","text":"@notice Calculates the natural logarithm of x.\n @dev Based on the insight that ln(x) = log2(x) / log2(e).\n Requirements:\n - All from \"log2\".\n Caveats:\n - All from \"log2\".\n - This doesn't return exactly 1 for 2.718281828459045235, for that we would need more fine-grained precision.\n @param x The unsigned 60.18-decimal fixed-point number for which to calculate the natural logarithm.\n @return result The natural logarithm as an unsigned 60.18-decimal fixed-point number."},"id":4002,"implemented":true,"kind":"function","modifiers":[],"name":"ln","nameLocation":"10233:2:7","nodeType":"FunctionDefinition","parameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3984,"mutability":"mutable","name":"x","nameLocation":"10244:1:7","nodeType":"VariableDeclaration","scope":4002,"src":"10236:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3983,"name":"uint256","nodeType":"ElementaryTypeName","src":"10236:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10235:11:7"},"returnParameters":{"id":3988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"mutability":"mutable","name":"result","nameLocation":"10278:6:7","nodeType":"VariableDeclaration","scope":4002,"src":"10270:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3986,"name":"uint256","nodeType":"ElementaryTypeName","src":"10270:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10269:16:7"},"scope":4308,"src":"10224:322:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4037,"nodeType":"Block","src":"11184:7511:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4010,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"11198:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4011,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"11202:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11198:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4018,"nodeType":"IfStatement","src":"11194:82:7","trueBody":{"id":4017,"nodeType":"Block","src":"11209:67:7","statements":[{"errorCall":{"arguments":[{"id":4014,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"11263:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4013,"name":"PRBMathUD60x18__LogInputTooSmall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"11230:32:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11230:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4016,"nodeType":"RevertStatement","src":"11223:42:7"}]}},{"AST":{"nodeType":"YulBlock","src":"11469:6975:7","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"11511:36:7","statements":[{"nodeType":"YulAssignment","src":"11513:32:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"11527:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11538:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11541:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11534:3:7"},"nodeType":"YulFunctionCall","src":"11534:10:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11523:3:7"},"nodeType":"YulFunctionCall","src":"11523:22:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11513:6:7"}]}]},"nodeType":"YulCase","src":"11504:43:7","value":{"kind":"number","nodeType":"YulLiteral","src":"11509:1:7","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"11568:36:7","statements":[{"nodeType":"YulAssignment","src":"11570:32:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"11584:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11595:1:7","type":"","value":"1"},{"kind":"number","nodeType":"YulLiteral","src":"11598:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11591:3:7"},"nodeType":"YulFunctionCall","src":"11591:10:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11580:3:7"},"nodeType":"YulFunctionCall","src":"11580:22:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11570:6:7"}]}]},"nodeType":"YulCase","src":"11560:44:7","value":{"kind":"number","nodeType":"YulLiteral","src":"11565:2:7","type":"","value":"10"}},{"body":{"nodeType":"YulBlock","src":"11626:36:7","statements":[{"nodeType":"YulAssignment","src":"11628:32:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"11642:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11653:1:7","type":"","value":"2"},{"kind":"number","nodeType":"YulLiteral","src":"11656:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11649:3:7"},"nodeType":"YulFunctionCall","src":"11649:10:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11638:3:7"},"nodeType":"YulFunctionCall","src":"11638:22:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11628:6:7"}]}]},"nodeType":"YulCase","src":"11617:45:7","value":{"kind":"number","nodeType":"YulLiteral","src":"11622:3:7","type":"","value":"100"}},{"body":{"nodeType":"YulBlock","src":"11685:36:7","statements":[{"nodeType":"YulAssignment","src":"11687:32:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"11701:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11712:1:7","type":"","value":"3"},{"kind":"number","nodeType":"YulLiteral","src":"11715:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11708:3:7"},"nodeType":"YulFunctionCall","src":"11708:10:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11697:3:7"},"nodeType":"YulFunctionCall","src":"11697:22:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11687:6:7"}]}]},"nodeType":"YulCase","src":"11675:46:7","value":{"kind":"number","nodeType":"YulLiteral","src":"11680:4:7","type":"","value":"1000"}},{"body":{"nodeType":"YulBlock","src":"11745:36:7","statements":[{"nodeType":"YulAssignment","src":"11747:32:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"11761:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11772:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11775:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11768:3:7"},"nodeType":"YulFunctionCall","src":"11768:10:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11757:3:7"},"nodeType":"YulFunctionCall","src":"11757:22:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11747:6:7"}]}]},"nodeType":"YulCase","src":"11734:47:7","value":{"kind":"number","nodeType":"YulLiteral","src":"11739:5:7","type":"","value":"10000"}},{"body":{"nodeType":"YulBlock","src":"11806:36:7","statements":[{"nodeType":"YulAssignment","src":"11808:32:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"11822:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11833:1:7","type":"","value":"5"},{"kind":"number","nodeType":"YulLiteral","src":"11836:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11829:3:7"},"nodeType":"YulFunctionCall","src":"11829:10:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11818:3:7"},"nodeType":"YulFunctionCall","src":"11818:22:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11808:6:7"}]}]},"nodeType":"YulCase","src":"11794:48:7","value":{"kind":"number","nodeType":"YulLiteral","src":"11799:6:7","type":"","value":"100000"}},{"body":{"nodeType":"YulBlock","src":"11868:36:7","statements":[{"nodeType":"YulAssignment","src":"11870:32:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"11884:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11895:1:7","type":"","value":"6"},{"kind":"number","nodeType":"YulLiteral","src":"11898:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11891:3:7"},"nodeType":"YulFunctionCall","src":"11891:10:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11880:3:7"},"nodeType":"YulFunctionCall","src":"11880:22:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11870:6:7"}]}]},"nodeType":"YulCase","src":"11855:49:7","value":{"kind":"number","nodeType":"YulLiteral","src":"11860:7:7","type":"","value":"1000000"}},{"body":{"nodeType":"YulBlock","src":"11931:36:7","statements":[{"nodeType":"YulAssignment","src":"11933:32:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"11947:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11958:1:7","type":"","value":"7"},{"kind":"number","nodeType":"YulLiteral","src":"11961:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11954:3:7"},"nodeType":"YulFunctionCall","src":"11954:10:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11943:3:7"},"nodeType":"YulFunctionCall","src":"11943:22:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11933:6:7"}]}]},"nodeType":"YulCase","src":"11917:50:7","value":{"kind":"number","nodeType":"YulLiteral","src":"11922:8:7","type":"","value":"10000000"}},{"body":{"nodeType":"YulBlock","src":"11995:36:7","statements":[{"nodeType":"YulAssignment","src":"11997:32:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12011:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12022:1:7","type":"","value":"8"},{"kind":"number","nodeType":"YulLiteral","src":"12025:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12018:3:7"},"nodeType":"YulFunctionCall","src":"12018:10:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12007:3:7"},"nodeType":"YulFunctionCall","src":"12007:22:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11997:6:7"}]}]},"nodeType":"YulCase","src":"11980:51:7","value":{"kind":"number","nodeType":"YulLiteral","src":"11985:9:7","type":"","value":"100000000"}},{"body":{"nodeType":"YulBlock","src":"12060:36:7","statements":[{"nodeType":"YulAssignment","src":"12062:32:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12076:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12087:1:7","type":"","value":"9"},{"kind":"number","nodeType":"YulLiteral","src":"12090:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12083:3:7"},"nodeType":"YulFunctionCall","src":"12083:10:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12072:3:7"},"nodeType":"YulFunctionCall","src":"12072:22:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12062:6:7"}]}]},"nodeType":"YulCase","src":"12044:52:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12049:10:7","type":"","value":"1000000000"}},{"body":{"nodeType":"YulBlock","src":"12126:37:7","statements":[{"nodeType":"YulAssignment","src":"12128:33:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12142:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12153:2:7","type":"","value":"10"},{"kind":"number","nodeType":"YulLiteral","src":"12157:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12149:3:7"},"nodeType":"YulFunctionCall","src":"12149:11:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12138:3:7"},"nodeType":"YulFunctionCall","src":"12138:23:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12128:6:7"}]}]},"nodeType":"YulCase","src":"12109:54:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12114:11:7","type":"","value":"10000000000"}},{"body":{"nodeType":"YulBlock","src":"12194:37:7","statements":[{"nodeType":"YulAssignment","src":"12196:33:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12210:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12221:2:7","type":"","value":"11"},{"kind":"number","nodeType":"YulLiteral","src":"12225:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12217:3:7"},"nodeType":"YulFunctionCall","src":"12217:11:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12206:3:7"},"nodeType":"YulFunctionCall","src":"12206:23:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12196:6:7"}]}]},"nodeType":"YulCase","src":"12176:55:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12181:12:7","type":"","value":"100000000000"}},{"body":{"nodeType":"YulBlock","src":"12263:37:7","statements":[{"nodeType":"YulAssignment","src":"12265:33:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12279:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12290:2:7","type":"","value":"12"},{"kind":"number","nodeType":"YulLiteral","src":"12294:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12286:3:7"},"nodeType":"YulFunctionCall","src":"12286:11:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12275:3:7"},"nodeType":"YulFunctionCall","src":"12275:23:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12265:6:7"}]}]},"nodeType":"YulCase","src":"12244:56:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12249:13:7","type":"","value":"1000000000000"}},{"body":{"nodeType":"YulBlock","src":"12333:37:7","statements":[{"nodeType":"YulAssignment","src":"12335:33:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12349:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12360:2:7","type":"","value":"13"},{"kind":"number","nodeType":"YulLiteral","src":"12364:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12356:3:7"},"nodeType":"YulFunctionCall","src":"12356:11:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12345:3:7"},"nodeType":"YulFunctionCall","src":"12345:23:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12335:6:7"}]}]},"nodeType":"YulCase","src":"12313:57:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12318:14:7","type":"","value":"10000000000000"}},{"body":{"nodeType":"YulBlock","src":"12404:37:7","statements":[{"nodeType":"YulAssignment","src":"12406:33:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12420:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12431:2:7","type":"","value":"14"},{"kind":"number","nodeType":"YulLiteral","src":"12435:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12427:3:7"},"nodeType":"YulFunctionCall","src":"12427:11:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12416:3:7"},"nodeType":"YulFunctionCall","src":"12416:23:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12406:6:7"}]}]},"nodeType":"YulCase","src":"12383:58:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12388:15:7","type":"","value":"100000000000000"}},{"body":{"nodeType":"YulBlock","src":"12476:37:7","statements":[{"nodeType":"YulAssignment","src":"12478:33:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12492:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12503:2:7","type":"","value":"15"},{"kind":"number","nodeType":"YulLiteral","src":"12507:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12499:3:7"},"nodeType":"YulFunctionCall","src":"12499:11:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12488:3:7"},"nodeType":"YulFunctionCall","src":"12488:23:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12478:6:7"}]}]},"nodeType":"YulCase","src":"12454:59:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12459:16:7","type":"","value":"1000000000000000"}},{"body":{"nodeType":"YulBlock","src":"12549:37:7","statements":[{"nodeType":"YulAssignment","src":"12551:33:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12565:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12576:2:7","type":"","value":"16"},{"kind":"number","nodeType":"YulLiteral","src":"12580:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12572:3:7"},"nodeType":"YulFunctionCall","src":"12572:11:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12561:3:7"},"nodeType":"YulFunctionCall","src":"12561:23:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12551:6:7"}]}]},"nodeType":"YulCase","src":"12526:60:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12531:17:7","type":"","value":"10000000000000000"}},{"body":{"nodeType":"YulBlock","src":"12623:37:7","statements":[{"nodeType":"YulAssignment","src":"12625:33:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12639:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12650:2:7","type":"","value":"17"},{"kind":"number","nodeType":"YulLiteral","src":"12654:2:7","type":"","value":"18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12646:3:7"},"nodeType":"YulFunctionCall","src":"12646:11:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12635:3:7"},"nodeType":"YulFunctionCall","src":"12635:23:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12625:6:7"}]}]},"nodeType":"YulCase","src":"12599:61:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12604:18:7","type":"","value":"100000000000000000"}},{"body":{"nodeType":"YulBlock","src":"12698:15:7","statements":[{"nodeType":"YulAssignment","src":"12700:11:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12710:1:7","type":"","value":"0"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12700:6:7"}]}]},"nodeType":"YulCase","src":"12673:40:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12678:19:7","type":"","value":"1000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"12752:19:7","statements":[{"nodeType":"YulAssignment","src":"12754:15:7","value":{"name":"SCALE","nodeType":"YulIdentifier","src":"12764:5:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12754:6:7"}]}]},"nodeType":"YulCase","src":"12726:45:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12731:20:7","type":"","value":"10000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"12811:27:7","statements":[{"nodeType":"YulAssignment","src":"12813:23:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12827:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"12834:1:7","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12823:3:7"},"nodeType":"YulFunctionCall","src":"12823:13:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12813:6:7"}]}]},"nodeType":"YulCase","src":"12784:54:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12789:21:7","type":"","value":"100000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"12879:27:7","statements":[{"nodeType":"YulAssignment","src":"12881:23:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12895:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"12902:1:7","type":"","value":"3"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12891:3:7"},"nodeType":"YulFunctionCall","src":"12891:13:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12881:6:7"}]}]},"nodeType":"YulCase","src":"12851:55:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12856:22:7","type":"","value":"1000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"12948:27:7","statements":[{"nodeType":"YulAssignment","src":"12950:23:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"12964:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"12971:1:7","type":"","value":"4"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12960:3:7"},"nodeType":"YulFunctionCall","src":"12960:13:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12950:6:7"}]}]},"nodeType":"YulCase","src":"12919:56:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12924:23:7","type":"","value":"10000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13018:27:7","statements":[{"nodeType":"YulAssignment","src":"13020:23:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13034:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"13041:1:7","type":"","value":"5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13030:3:7"},"nodeType":"YulFunctionCall","src":"13030:13:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13020:6:7"}]}]},"nodeType":"YulCase","src":"12988:57:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12993:24:7","type":"","value":"100000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13089:27:7","statements":[{"nodeType":"YulAssignment","src":"13091:23:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13105:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"13112:1:7","type":"","value":"6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13101:3:7"},"nodeType":"YulFunctionCall","src":"13101:13:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13091:6:7"}]}]},"nodeType":"YulCase","src":"13058:58:7","value":{"kind":"number","nodeType":"YulLiteral","src":"13063:25:7","type":"","value":"1000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13161:27:7","statements":[{"nodeType":"YulAssignment","src":"13163:23:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13177:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"13184:1:7","type":"","value":"7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13173:3:7"},"nodeType":"YulFunctionCall","src":"13173:13:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13163:6:7"}]}]},"nodeType":"YulCase","src":"13129:59:7","value":{"kind":"number","nodeType":"YulLiteral","src":"13134:26:7","type":"","value":"10000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13234:27:7","statements":[{"nodeType":"YulAssignment","src":"13236:23:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13250:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"13257:1:7","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13246:3:7"},"nodeType":"YulFunctionCall","src":"13246:13:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13236:6:7"}]}]},"nodeType":"YulCase","src":"13201:60:7","value":{"kind":"number","nodeType":"YulLiteral","src":"13206:27:7","type":"","value":"100000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13308:27:7","statements":[{"nodeType":"YulAssignment","src":"13310:23:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13324:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"13331:1:7","type":"","value":"9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13320:3:7"},"nodeType":"YulFunctionCall","src":"13320:13:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13310:6:7"}]}]},"nodeType":"YulCase","src":"13274:61:7","value":{"kind":"number","nodeType":"YulLiteral","src":"13279:28:7","type":"","value":"1000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13383:28:7","statements":[{"nodeType":"YulAssignment","src":"13385:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13399:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"13406:2:7","type":"","value":"10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13395:3:7"},"nodeType":"YulFunctionCall","src":"13395:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13385:6:7"}]}]},"nodeType":"YulCase","src":"13348:63:7","value":{"kind":"number","nodeType":"YulLiteral","src":"13353:29:7","type":"","value":"10000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13460:28:7","statements":[{"nodeType":"YulAssignment","src":"13462:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13476:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"13483:2:7","type":"","value":"11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13472:3:7"},"nodeType":"YulFunctionCall","src":"13472:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13462:6:7"}]}]},"nodeType":"YulCase","src":"13424:64:7","value":{"kind":"number","nodeType":"YulLiteral","src":"13429:30:7","type":"","value":"100000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13538:28:7","statements":[{"nodeType":"YulAssignment","src":"13540:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13554:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"13561:2:7","type":"","value":"12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13550:3:7"},"nodeType":"YulFunctionCall","src":"13550:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13540:6:7"}]}]},"nodeType":"YulCase","src":"13501:65:7","value":{"kind":"number","nodeType":"YulLiteral","src":"13506:31:7","type":"","value":"1000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13617:28:7","statements":[{"nodeType":"YulAssignment","src":"13619:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13633:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"13640:2:7","type":"","value":"13"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13629:3:7"},"nodeType":"YulFunctionCall","src":"13629:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13619:6:7"}]}]},"nodeType":"YulCase","src":"13579:66:7","value":{"kind":"number","nodeType":"YulLiteral","src":"13584:32:7","type":"","value":"10000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13697:28:7","statements":[{"nodeType":"YulAssignment","src":"13699:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13713:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"13720:2:7","type":"","value":"14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13709:3:7"},"nodeType":"YulFunctionCall","src":"13709:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13699:6:7"}]}]},"nodeType":"YulCase","src":"13658:67:7","value":{"kind":"number","nodeType":"YulLiteral","src":"13663:33:7","type":"","value":"100000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13778:28:7","statements":[{"nodeType":"YulAssignment","src":"13780:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13794:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"13801:2:7","type":"","value":"15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13790:3:7"},"nodeType":"YulFunctionCall","src":"13790:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13780:6:7"}]}]},"nodeType":"YulCase","src":"13738:68:7","value":{"kind":"number","nodeType":"YulLiteral","src":"13743:34:7","type":"","value":"1000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13860:28:7","statements":[{"nodeType":"YulAssignment","src":"13862:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13876:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"13883:2:7","type":"","value":"16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13872:3:7"},"nodeType":"YulFunctionCall","src":"13872:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13862:6:7"}]}]},"nodeType":"YulCase","src":"13819:69:7","value":{"kind":"number","nodeType":"YulLiteral","src":"13824:35:7","type":"","value":"10000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"13943:28:7","statements":[{"nodeType":"YulAssignment","src":"13945:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"13959:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"13966:2:7","type":"","value":"17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13955:3:7"},"nodeType":"YulFunctionCall","src":"13955:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13945:6:7"}]}]},"nodeType":"YulCase","src":"13901:70:7","value":{"kind":"number","nodeType":"YulLiteral","src":"13906:36:7","type":"","value":"100000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14027:28:7","statements":[{"nodeType":"YulAssignment","src":"14029:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14043:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"14050:2:7","type":"","value":"18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14039:3:7"},"nodeType":"YulFunctionCall","src":"14039:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14029:6:7"}]}]},"nodeType":"YulCase","src":"13984:71:7","value":{"kind":"number","nodeType":"YulLiteral","src":"13989:37:7","type":"","value":"1000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14112:28:7","statements":[{"nodeType":"YulAssignment","src":"14114:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14128:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"14135:2:7","type":"","value":"19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14124:3:7"},"nodeType":"YulFunctionCall","src":"14124:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14114:6:7"}]}]},"nodeType":"YulCase","src":"14068:72:7","value":{"kind":"number","nodeType":"YulLiteral","src":"14073:38:7","type":"","value":"10000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14198:28:7","statements":[{"nodeType":"YulAssignment","src":"14200:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14214:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"14221:2:7","type":"","value":"20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14210:3:7"},"nodeType":"YulFunctionCall","src":"14210:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14200:6:7"}]}]},"nodeType":"YulCase","src":"14153:73:7","value":{"kind":"number","nodeType":"YulLiteral","src":"14158:39:7","type":"","value":"100000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14285:28:7","statements":[{"nodeType":"YulAssignment","src":"14287:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14301:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"14308:2:7","type":"","value":"21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14297:3:7"},"nodeType":"YulFunctionCall","src":"14297:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14287:6:7"}]}]},"nodeType":"YulCase","src":"14239:74:7","value":{"kind":"number","nodeType":"YulLiteral","src":"14244:40:7","type":"","value":"1000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14373:28:7","statements":[{"nodeType":"YulAssignment","src":"14375:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14389:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"14396:2:7","type":"","value":"22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14385:3:7"},"nodeType":"YulFunctionCall","src":"14385:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14375:6:7"}]}]},"nodeType":"YulCase","src":"14326:75:7","value":{"kind":"number","nodeType":"YulLiteral","src":"14331:41:7","type":"","value":"10000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14462:28:7","statements":[{"nodeType":"YulAssignment","src":"14464:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14478:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"14485:2:7","type":"","value":"23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14474:3:7"},"nodeType":"YulFunctionCall","src":"14474:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14464:6:7"}]}]},"nodeType":"YulCase","src":"14414:76:7","value":{"kind":"number","nodeType":"YulLiteral","src":"14419:42:7","type":"","value":"100000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14552:28:7","statements":[{"nodeType":"YulAssignment","src":"14554:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14568:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"14575:2:7","type":"","value":"24"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14564:3:7"},"nodeType":"YulFunctionCall","src":"14564:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14554:6:7"}]}]},"nodeType":"YulCase","src":"14503:77:7","value":{"kind":"number","nodeType":"YulLiteral","src":"14508:43:7","type":"","value":"1000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14643:28:7","statements":[{"nodeType":"YulAssignment","src":"14645:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14659:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"14666:2:7","type":"","value":"25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14655:3:7"},"nodeType":"YulFunctionCall","src":"14655:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14645:6:7"}]}]},"nodeType":"YulCase","src":"14593:78:7","value":{"kind":"number","nodeType":"YulLiteral","src":"14598:44:7","type":"","value":"10000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14735:28:7","statements":[{"nodeType":"YulAssignment","src":"14737:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14751:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"14758:2:7","type":"","value":"26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14747:3:7"},"nodeType":"YulFunctionCall","src":"14747:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14737:6:7"}]}]},"nodeType":"YulCase","src":"14684:79:7","value":{"kind":"number","nodeType":"YulLiteral","src":"14689:45:7","type":"","value":"100000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14828:28:7","statements":[{"nodeType":"YulAssignment","src":"14830:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14844:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"14851:2:7","type":"","value":"27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14840:3:7"},"nodeType":"YulFunctionCall","src":"14840:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14830:6:7"}]}]},"nodeType":"YulCase","src":"14776:80:7","value":{"kind":"number","nodeType":"YulLiteral","src":"14781:46:7","type":"","value":"1000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"14922:28:7","statements":[{"nodeType":"YulAssignment","src":"14924:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"14938:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"14945:2:7","type":"","value":"28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14934:3:7"},"nodeType":"YulFunctionCall","src":"14934:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14924:6:7"}]}]},"nodeType":"YulCase","src":"14869:81:7","value":{"kind":"number","nodeType":"YulLiteral","src":"14874:47:7","type":"","value":"10000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15017:28:7","statements":[{"nodeType":"YulAssignment","src":"15019:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15033:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"15040:2:7","type":"","value":"29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15029:3:7"},"nodeType":"YulFunctionCall","src":"15029:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15019:6:7"}]}]},"nodeType":"YulCase","src":"14963:82:7","value":{"kind":"number","nodeType":"YulLiteral","src":"14968:48:7","type":"","value":"100000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15113:28:7","statements":[{"nodeType":"YulAssignment","src":"15115:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15129:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"15136:2:7","type":"","value":"30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15125:3:7"},"nodeType":"YulFunctionCall","src":"15125:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15115:6:7"}]}]},"nodeType":"YulCase","src":"15058:83:7","value":{"kind":"number","nodeType":"YulLiteral","src":"15063:49:7","type":"","value":"1000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15210:28:7","statements":[{"nodeType":"YulAssignment","src":"15212:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15226:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"15233:2:7","type":"","value":"31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15222:3:7"},"nodeType":"YulFunctionCall","src":"15222:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15212:6:7"}]}]},"nodeType":"YulCase","src":"15154:84:7","value":{"kind":"number","nodeType":"YulLiteral","src":"15159:50:7","type":"","value":"10000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15308:28:7","statements":[{"nodeType":"YulAssignment","src":"15310:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15324:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"15331:2:7","type":"","value":"32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15320:3:7"},"nodeType":"YulFunctionCall","src":"15320:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15310:6:7"}]}]},"nodeType":"YulCase","src":"15251:85:7","value":{"kind":"number","nodeType":"YulLiteral","src":"15256:51:7","type":"","value":"100000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15407:28:7","statements":[{"nodeType":"YulAssignment","src":"15409:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15423:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"15430:2:7","type":"","value":"33"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15419:3:7"},"nodeType":"YulFunctionCall","src":"15419:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15409:6:7"}]}]},"nodeType":"YulCase","src":"15349:86:7","value":{"kind":"number","nodeType":"YulLiteral","src":"15354:52:7","type":"","value":"1000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15507:28:7","statements":[{"nodeType":"YulAssignment","src":"15509:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15523:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"15530:2:7","type":"","value":"34"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15519:3:7"},"nodeType":"YulFunctionCall","src":"15519:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15509:6:7"}]}]},"nodeType":"YulCase","src":"15448:87:7","value":{"kind":"number","nodeType":"YulLiteral","src":"15453:53:7","type":"","value":"10000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15608:28:7","statements":[{"nodeType":"YulAssignment","src":"15610:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15624:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"15631:2:7","type":"","value":"35"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15620:3:7"},"nodeType":"YulFunctionCall","src":"15620:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15610:6:7"}]}]},"nodeType":"YulCase","src":"15548:88:7","value":{"kind":"number","nodeType":"YulLiteral","src":"15553:54:7","type":"","value":"100000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15710:28:7","statements":[{"nodeType":"YulAssignment","src":"15712:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15726:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"15733:2:7","type":"","value":"36"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15722:3:7"},"nodeType":"YulFunctionCall","src":"15722:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15712:6:7"}]}]},"nodeType":"YulCase","src":"15649:89:7","value":{"kind":"number","nodeType":"YulLiteral","src":"15654:55:7","type":"","value":"1000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15813:28:7","statements":[{"nodeType":"YulAssignment","src":"15815:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15829:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"15836:2:7","type":"","value":"37"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15825:3:7"},"nodeType":"YulFunctionCall","src":"15825:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15815:6:7"}]}]},"nodeType":"YulCase","src":"15751:90:7","value":{"kind":"number","nodeType":"YulLiteral","src":"15756:56:7","type":"","value":"10000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"15917:28:7","statements":[{"nodeType":"YulAssignment","src":"15919:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"15933:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"15940:2:7","type":"","value":"38"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15929:3:7"},"nodeType":"YulFunctionCall","src":"15929:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15919:6:7"}]}]},"nodeType":"YulCase","src":"15854:91:7","value":{"kind":"number","nodeType":"YulLiteral","src":"15859:57:7","type":"","value":"100000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16022:28:7","statements":[{"nodeType":"YulAssignment","src":"16024:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16038:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"16045:2:7","type":"","value":"39"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16034:3:7"},"nodeType":"YulFunctionCall","src":"16034:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16024:6:7"}]}]},"nodeType":"YulCase","src":"15958:92:7","value":{"kind":"number","nodeType":"YulLiteral","src":"15963:58:7","type":"","value":"1000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16128:28:7","statements":[{"nodeType":"YulAssignment","src":"16130:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16144:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"16151:2:7","type":"","value":"40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16140:3:7"},"nodeType":"YulFunctionCall","src":"16140:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16130:6:7"}]}]},"nodeType":"YulCase","src":"16063:93:7","value":{"kind":"number","nodeType":"YulLiteral","src":"16068:59:7","type":"","value":"10000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16235:28:7","statements":[{"nodeType":"YulAssignment","src":"16237:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16251:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"16258:2:7","type":"","value":"41"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16247:3:7"},"nodeType":"YulFunctionCall","src":"16247:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16237:6:7"}]}]},"nodeType":"YulCase","src":"16169:94:7","value":{"kind":"number","nodeType":"YulLiteral","src":"16174:60:7","type":"","value":"100000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16343:28:7","statements":[{"nodeType":"YulAssignment","src":"16345:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16359:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"16366:2:7","type":"","value":"42"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16355:3:7"},"nodeType":"YulFunctionCall","src":"16355:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16345:6:7"}]}]},"nodeType":"YulCase","src":"16276:95:7","value":{"kind":"number","nodeType":"YulLiteral","src":"16281:61:7","type":"","value":"1000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16452:28:7","statements":[{"nodeType":"YulAssignment","src":"16454:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16468:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"16475:2:7","type":"","value":"43"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16464:3:7"},"nodeType":"YulFunctionCall","src":"16464:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16454:6:7"}]}]},"nodeType":"YulCase","src":"16384:96:7","value":{"kind":"number","nodeType":"YulLiteral","src":"16389:62:7","type":"","value":"10000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16562:28:7","statements":[{"nodeType":"YulAssignment","src":"16564:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16578:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"16585:2:7","type":"","value":"44"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16574:3:7"},"nodeType":"YulFunctionCall","src":"16574:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16564:6:7"}]}]},"nodeType":"YulCase","src":"16493:97:7","value":{"kind":"number","nodeType":"YulLiteral","src":"16498:63:7","type":"","value":"100000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16673:28:7","statements":[{"nodeType":"YulAssignment","src":"16675:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16689:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"16696:2:7","type":"","value":"45"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16685:3:7"},"nodeType":"YulFunctionCall","src":"16685:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16675:6:7"}]}]},"nodeType":"YulCase","src":"16603:98:7","value":{"kind":"number","nodeType":"YulLiteral","src":"16608:64:7","type":"","value":"1000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16785:28:7","statements":[{"nodeType":"YulAssignment","src":"16787:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16801:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"16808:2:7","type":"","value":"46"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16797:3:7"},"nodeType":"YulFunctionCall","src":"16797:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16787:6:7"}]}]},"nodeType":"YulCase","src":"16714:99:7","value":{"kind":"number","nodeType":"YulLiteral","src":"16719:65:7","type":"","value":"10000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"16898:28:7","statements":[{"nodeType":"YulAssignment","src":"16900:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"16914:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"16921:2:7","type":"","value":"47"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16910:3:7"},"nodeType":"YulFunctionCall","src":"16910:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16900:6:7"}]}]},"nodeType":"YulCase","src":"16826:100:7","value":{"kind":"number","nodeType":"YulLiteral","src":"16831:66:7","type":"","value":"100000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17012:28:7","statements":[{"nodeType":"YulAssignment","src":"17014:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17028:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"17035:2:7","type":"","value":"48"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17024:3:7"},"nodeType":"YulFunctionCall","src":"17024:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17014:6:7"}]}]},"nodeType":"YulCase","src":"16939:101:7","value":{"kind":"number","nodeType":"YulLiteral","src":"16944:67:7","type":"","value":"1000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17127:28:7","statements":[{"nodeType":"YulAssignment","src":"17129:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17143:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"17150:2:7","type":"","value":"49"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17139:3:7"},"nodeType":"YulFunctionCall","src":"17139:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17129:6:7"}]}]},"nodeType":"YulCase","src":"17053:102:7","value":{"kind":"number","nodeType":"YulLiteral","src":"17058:68:7","type":"","value":"10000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17243:28:7","statements":[{"nodeType":"YulAssignment","src":"17245:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17259:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"17266:2:7","type":"","value":"50"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17255:3:7"},"nodeType":"YulFunctionCall","src":"17255:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17245:6:7"}]}]},"nodeType":"YulCase","src":"17168:103:7","value":{"kind":"number","nodeType":"YulLiteral","src":"17173:69:7","type":"","value":"100000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17360:28:7","statements":[{"nodeType":"YulAssignment","src":"17362:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17376:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"17383:2:7","type":"","value":"51"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17372:3:7"},"nodeType":"YulFunctionCall","src":"17372:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17362:6:7"}]}]},"nodeType":"YulCase","src":"17284:104:7","value":{"kind":"number","nodeType":"YulLiteral","src":"17289:70:7","type":"","value":"1000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17478:28:7","statements":[{"nodeType":"YulAssignment","src":"17480:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17494:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"17501:2:7","type":"","value":"52"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17490:3:7"},"nodeType":"YulFunctionCall","src":"17490:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17480:6:7"}]}]},"nodeType":"YulCase","src":"17401:105:7","value":{"kind":"number","nodeType":"YulLiteral","src":"17406:71:7","type":"","value":"10000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17597:28:7","statements":[{"nodeType":"YulAssignment","src":"17599:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17613:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"17620:2:7","type":"","value":"53"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17609:3:7"},"nodeType":"YulFunctionCall","src":"17609:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17599:6:7"}]}]},"nodeType":"YulCase","src":"17519:106:7","value":{"kind":"number","nodeType":"YulLiteral","src":"17524:72:7","type":"","value":"100000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17717:28:7","statements":[{"nodeType":"YulAssignment","src":"17719:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17733:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"17740:2:7","type":"","value":"54"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17729:3:7"},"nodeType":"YulFunctionCall","src":"17729:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17719:6:7"}]}]},"nodeType":"YulCase","src":"17638:107:7","value":{"kind":"number","nodeType":"YulLiteral","src":"17643:73:7","type":"","value":"1000000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17838:28:7","statements":[{"nodeType":"YulAssignment","src":"17840:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17854:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"17861:2:7","type":"","value":"55"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17850:3:7"},"nodeType":"YulFunctionCall","src":"17850:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17840:6:7"}]}]},"nodeType":"YulCase","src":"17758:108:7","value":{"kind":"number","nodeType":"YulLiteral","src":"17763:74:7","type":"","value":"10000000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"17960:28:7","statements":[{"nodeType":"YulAssignment","src":"17962:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"17976:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"17983:2:7","type":"","value":"56"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17972:3:7"},"nodeType":"YulFunctionCall","src":"17972:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17962:6:7"}]}]},"nodeType":"YulCase","src":"17879:109:7","value":{"kind":"number","nodeType":"YulLiteral","src":"17884:75:7","type":"","value":"100000000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"18083:28:7","statements":[{"nodeType":"YulAssignment","src":"18085:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"18099:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"18106:2:7","type":"","value":"57"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18095:3:7"},"nodeType":"YulFunctionCall","src":"18095:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18085:6:7"}]}]},"nodeType":"YulCase","src":"18001:110:7","value":{"kind":"number","nodeType":"YulLiteral","src":"18006:76:7","type":"","value":"1000000000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"18207:28:7","statements":[{"nodeType":"YulAssignment","src":"18209:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"18223:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"18230:2:7","type":"","value":"58"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18219:3:7"},"nodeType":"YulFunctionCall","src":"18219:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18209:6:7"}]}]},"nodeType":"YulCase","src":"18124:111:7","value":{"kind":"number","nodeType":"YulLiteral","src":"18129:77:7","type":"","value":"10000000000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"18332:28:7","statements":[{"nodeType":"YulAssignment","src":"18334:24:7","value":{"arguments":[{"name":"SCALE","nodeType":"YulIdentifier","src":"18348:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"18355:2:7","type":"","value":"59"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18344:3:7"},"nodeType":"YulFunctionCall","src":"18344:14:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18334:6:7"}]}]},"nodeType":"YulCase","src":"18248:112:7","value":{"kind":"number","nodeType":"YulLiteral","src":"18253:78:7","type":"","value":"100000000000000000000000000000000000000000000000000000000000000000000000000000"}},{"body":{"nodeType":"YulBlock","src":"18381:53:7","statements":[{"nodeType":"YulAssignment","src":"18399:21:7","value":{"name":"MAX_UD60x18","nodeType":"YulIdentifier","src":"18409:11:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18399:6:7"}]}]},"nodeType":"YulCase","src":"18373:61:7","value":"default"}],"expression":{"name":"x","nodeType":"YulIdentifier","src":"11490:1:7"},"nodeType":"YulSwitch","src":"11483:6951:7"}]},"evmVersion":"berlin","externalReferences":[{"declaration":3714,"isOffset":false,"isSlot":false,"src":"18409:11:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"11527:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"11584:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"11642:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"11701:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"11761:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"11822:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"11884:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"11947:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"12011:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"12076:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"12142:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"12210:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"12279:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"12349:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"12420:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"12492:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"12565:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"12639:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"12764:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"12827:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"12895:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"12964:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"13034:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"13105:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"13177:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"13250:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"13324:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"13399:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"13476:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"13554:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"13633:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"13713:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"13794:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"13876:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"13959:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"14043:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"14128:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"14214:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"14301:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"14389:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"14478:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"14568:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"14659:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"14751:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"14844:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"14938:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"15033:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"15129:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"15226:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"15324:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"15423:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"15523:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"15624:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"15726:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"15829:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"15933:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"16038:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"16144:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"16251:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"16359:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"16468:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"16578:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"16689:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"16801:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"16914:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"17028:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"17143:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"17259:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"17376:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"17494:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"17613:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"17733:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"17854:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"17976:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"18099:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"18223:5:7","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"18348:5:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"11513:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"11570:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"11628:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"11687:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"11747:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"11808:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"11870:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"11933:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"11997:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"12062:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"12128:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"12196:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"12265:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"12335:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"12406:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"12478:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"12551:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"12625:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"12700:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"12754:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"12813:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"12881:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"12950:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"13020:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"13091:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"13163:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"13236:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"13310:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"13385:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"13462:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"13540:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"13619:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"13699:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"13780:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"13862:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"13945:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"14029:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"14114:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"14200:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"14287:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"14375:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"14464:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"14554:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"14645:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"14737:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"14830:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"14924:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"15019:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"15115:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"15212:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"15310:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"15409:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"15509:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"15610:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"15712:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"15815:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"15919:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"16024:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"16130:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"16237:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"16345:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"16454:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"16564:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"16675:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"16787:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"16900:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"17014:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"17129:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"17245:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"17362:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"17480:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"17599:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"17719:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"17840:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"17962:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"18085:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"18209:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"18334:6:7","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"18399:6:7","valueSize":1},{"declaration":4005,"isOffset":false,"isSlot":false,"src":"11490:1:7","valueSize":1}],"id":4019,"nodeType":"InlineAssembly","src":"11460:6984:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4020,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"18458:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4021,"name":"MAX_UD60x18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"18468:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18458:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4036,"nodeType":"IfStatement","src":"18454:235:7","trueBody":{"id":4035,"nodeType":"Block","src":"18481:208:7","statements":[{"id":4034,"nodeType":"UncheckedBlock","src":"18587:92:7","statements":[{"expression":{"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"18615:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4025,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"18630:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4024,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"18625:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18625:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4027,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"18635:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18625:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4029,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18624:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"335f333231393238303934383837333632333437","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18644:20:7","typeDescriptions":{"typeIdentifier":"t_rational_3321928094887362347_by_1","typeString":"int_const 3321928094887362347"},"value":"3_321928094887362347"},"src":"18624:40:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18615:49:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4033,"nodeType":"ExpressionStatement","src":"18615:49:7"}]}]}}]},"documentation":{"id":4003,"nodeType":"StructuredDocumentation","src":"10552:562:7","text":"@notice Calculates the common logarithm of x.\n @dev First checks if x is an exact power of ten and it stops if yes. If it's not, calculates the common\n logarithm based on the insight that log10(x) = log2(x) / log2(10).\n Requirements:\n - All from \"log2\".\n Caveats:\n - All from \"log2\".\n @param x The unsigned 60.18-decimal fixed-point number for which to calculate the common logarithm.\n @return result The common logarithm as an unsigned 60.18-decimal fixed-point number."},"id":4038,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11128:5:7","nodeType":"FunctionDefinition","parameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"x","nameLocation":"11142:1:7","nodeType":"VariableDeclaration","scope":4038,"src":"11134:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"11134:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11133:11:7"},"returnParameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"result","nameLocation":"11176:6:7","nodeType":"VariableDeclaration","scope":4038,"src":"11168:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4007,"name":"uint256","nodeType":"ElementaryTypeName","src":"11168:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11167:16:7"},"scope":4308,"src":"11119:7576:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4121,"nodeType":"Block","src":"19452:1333:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4046,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"19466:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4047,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"19470:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19466:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4054,"nodeType":"IfStatement","src":"19462:82:7","trueBody":{"id":4053,"nodeType":"Block","src":"19477:67:7","statements":[{"errorCall":{"arguments":[{"id":4050,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"19531:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4049,"name":"PRBMathUD60x18__LogInputTooSmall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"19498:32:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19498:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4052,"nodeType":"RevertStatement","src":"19491:42:7"}]}},{"id":4120,"nodeType":"UncheckedBlock","src":"19553:1226:7","statements":[{"assignments":[4056],"declarations":[{"constant":false,"id":4056,"mutability":"mutable","name":"n","nameLocation":"19707:1:7","nodeType":"VariableDeclaration","scope":4120,"src":"19699:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4055,"name":"uint256","nodeType":"ElementaryTypeName","src":"19699:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4063,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4059,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"19738:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4060,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"19742:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19738:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4057,"name":"PRBMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"19711:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PRBMath_$3698_$","typeString":"type(library PRBMath)"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mostSignificantBit","nodeType":"MemberAccess","referencedDeclaration":3156,"src":"19711:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19711:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19699:49:7"},{"expression":{"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4064,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"19949:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4065,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"19958:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4066,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"19962:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19958:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19949:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4069,"nodeType":"ExpressionStatement","src":"19949:18:7"},{"assignments":[4071],"declarations":[{"constant":false,"id":4071,"mutability":"mutable","name":"y","nameLocation":"20029:1:7","nodeType":"VariableDeclaration","scope":4120,"src":"20021:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4070,"name":"uint256","nodeType":"ElementaryTypeName","src":"20021:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4075,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4072,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"20033:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4073,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"20038:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20033:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20021:18:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4076,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"20112:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4077,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"20117:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20112:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4082,"nodeType":"IfStatement","src":"20108:62:7","trueBody":{"id":4081,"nodeType":"Block","src":"20124:46:7","statements":[{"expression":{"id":4079,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"20149:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4045,"id":4080,"nodeType":"Return","src":"20142:13:7"}]}},{"body":{"id":4118,"nodeType":"Block","src":"20417:352:7","statements":[{"expression":{"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4094,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"20435:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4095,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"20440:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4096,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"20444:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20440:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4098,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20439:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4099,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"20449:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20439:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20435:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4102,"nodeType":"ExpressionStatement","src":"20435:19:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4103,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"20534:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20539:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4105,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"20543:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20539:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20534:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4117,"nodeType":"IfStatement","src":"20530:225:7","trueBody":{"id":4116,"nodeType":"Block","src":"20550:205:7","statements":[{"expression":{"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"20635:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4109,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"20645:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20635:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4111,"nodeType":"ExpressionStatement","src":"20635:15:7"},{"expression":{"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4112,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"20729:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"31","id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20735:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20729:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4115,"nodeType":"ExpressionStatement","src":"20729:7:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4087,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"20393:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20401:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20393:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4119,"initializationExpression":{"assignments":[4084],"declarations":[{"constant":false,"id":4084,"mutability":"mutable","name":"delta","nameLocation":"20373:5:7","nodeType":"VariableDeclaration","scope":4119,"src":"20365:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4083,"name":"uint256","nodeType":"ElementaryTypeName","src":"20365:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4086,"initialValue":{"id":4085,"name":"HALF_SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"20381:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20365:26:7"},"loopExpression":{"expression":{"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4090,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"20404:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"31","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20414:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20404:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4093,"nodeType":"ExpressionStatement","src":"20404:11:7"},"nodeType":"ForStatement","src":"20360:409:7"}]}]},"documentation":{"id":4039,"nodeType":"StructuredDocumentation","src":"18701:682:7","text":"@notice Calculates the binary logarithm of x.\n @dev Based on the iterative approximation algorithm.\n https://en.wikipedia.org/wiki/Binary_logarithm#Iterative_approximation\n Requirements:\n - x must be greater than or equal to SCALE, otherwise the result would be negative.\n Caveats:\n - The results are nor perfectly accurate to the last decimal, due to the lossy precision of the iterative approximation.\n @param x The unsigned 60.18-decimal fixed-point number for which to calculate the binary logarithm.\n @return result The binary logarithm as an unsigned 60.18-decimal fixed-point number."},"id":4122,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"19397:4:7","nodeType":"FunctionDefinition","parameters":{"id":4042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4041,"mutability":"mutable","name":"x","nameLocation":"19410:1:7","nodeType":"VariableDeclaration","scope":4122,"src":"19402:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4040,"name":"uint256","nodeType":"ElementaryTypeName","src":"19402:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19401:11:7"},"returnParameters":{"id":4045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4044,"mutability":"mutable","name":"result","nameLocation":"19444:6:7","nodeType":"VariableDeclaration","scope":4122,"src":"19436:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4043,"name":"uint256","nodeType":"ElementaryTypeName","src":"19436:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19435:16:7"},"scope":4308,"src":"19388:1397:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4140,"nodeType":"Block","src":"21344:56:7","statements":[{"expression":{"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4132,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"21354:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4135,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"21388:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4136,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"21391:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4133,"name":"PRBMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"21363:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PRBMath_$3698_$","typeString":"type(library PRBMath)"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDivFixedPoint","nodeType":"MemberAccess","referencedDeclaration":3339,"src":"21363:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21363:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21354:39:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4139,"nodeType":"ExpressionStatement","src":"21354:39:7"}]},"documentation":{"id":4123,"nodeType":"StructuredDocumentation","src":"20791:474:7","text":"@notice Multiplies two unsigned 60.18-decimal fixed-point numbers together, returning a new unsigned 60.18-decimal\n fixed-point number.\n @dev See the documentation for the \"PRBMath.mulDivFixedPoint\" function.\n @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\n @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\n @return result The product as an unsigned 60.18-decimal fixed-point number."},"id":4141,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"21279:3:7","nodeType":"FunctionDefinition","parameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4125,"mutability":"mutable","name":"x","nameLocation":"21291:1:7","nodeType":"VariableDeclaration","scope":4141,"src":"21283:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4124,"name":"uint256","nodeType":"ElementaryTypeName","src":"21283:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4127,"mutability":"mutable","name":"y","nameLocation":"21302:1:7","nodeType":"VariableDeclaration","scope":4141,"src":"21294:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4126,"name":"uint256","nodeType":"ElementaryTypeName","src":"21294:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21282:22:7"},"returnParameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4130,"mutability":"mutable","name":"result","nameLocation":"21336:6:7","nodeType":"VariableDeclaration","scope":4141,"src":"21328:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4129,"name":"uint256","nodeType":"ElementaryTypeName","src":"21328:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21327:16:7"},"scope":4308,"src":"21270:130:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4151,"nodeType":"Block","src":"21535:46:7","statements":[{"expression":{"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4147,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"21545:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"335f313431353932363533353839373933323338","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21554:20:7","typeDescriptions":{"typeIdentifier":"t_rational_3141592653589793238_by_1","typeString":"int_const 3141592653589793238"},"value":"3_141592653589793238"},"src":"21545:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4150,"nodeType":"ExpressionStatement","src":"21545:29:7"}]},"documentation":{"id":4142,"nodeType":"StructuredDocumentation","src":"21406:71:7","text":"@notice Returns PI as an unsigned 60.18-decimal fixed-point number."},"id":4152,"implemented":true,"kind":"function","modifiers":[],"name":"pi","nameLocation":"21491:2:7","nodeType":"FunctionDefinition","parameters":{"id":4143,"nodeType":"ParameterList","parameters":[],"src":"21493:2:7"},"returnParameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"result","nameLocation":"21527:6:7","nodeType":"VariableDeclaration","scope":4152,"src":"21519:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4144,"name":"uint256","nodeType":"ElementaryTypeName","src":"21519:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21518:16:7"},"scope":4308,"src":"21482:99:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4191,"nodeType":"Block","src":"22239:150:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4162,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"22253:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22258:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22253:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4189,"nodeType":"Block","src":"22328:55:7","statements":[{"expression":{"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4178,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"22342:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":4182,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"22365:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4181,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"22360:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22360:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4184,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"22369:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4180,"name":"mul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"22356:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22356:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4179,"name":"exp2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"22351:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22351:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22342:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4188,"nodeType":"ExpressionStatement","src":"22342:30:7"}]},"id":4190,"nodeType":"IfStatement","src":"22249:134:7","trueBody":{"id":4177,"nodeType":"Block","src":"22261:61:7","statements":[{"expression":{"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4165,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"22275:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4166,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"22284:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22289:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22284:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"hexValue":"30","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22309:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22301:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4170,"name":"uint256","nodeType":"ElementaryTypeName","src":"22301:7:7","typeDescriptions":{}}},"id":4173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22301:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"22284:27:7","trueExpression":{"id":4169,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"22293:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22275:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4176,"nodeType":"ExpressionStatement","src":"22275:36:7"}]}}]},"documentation":{"id":4153,"nodeType":"StructuredDocumentation","src":"21587:573:7","text":"@notice Raises x to the power of y.\n @dev Based on the insight that x^y = 2^(log2(x) * y).\n Requirements:\n - All from \"exp2\", \"log2\" and \"mul\".\n Caveats:\n - All from \"exp2\", \"log2\" and \"mul\".\n - Assumes 0^0 is 1.\n @param x Number to raise to given power y, as an unsigned 60.18-decimal fixed-point number.\n @param y Exponent to raise x to, as an unsigned 60.18-decimal fixed-point number.\n @return result x raised to power y, as an unsigned 60.18-decimal fixed-point number."},"id":4192,"implemented":true,"kind":"function","modifiers":[],"name":"pow","nameLocation":"22174:3:7","nodeType":"FunctionDefinition","parameters":{"id":4158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4155,"mutability":"mutable","name":"x","nameLocation":"22186:1:7","nodeType":"VariableDeclaration","scope":4192,"src":"22178:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4154,"name":"uint256","nodeType":"ElementaryTypeName","src":"22178:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4157,"mutability":"mutable","name":"y","nameLocation":"22197:1:7","nodeType":"VariableDeclaration","scope":4192,"src":"22189:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4156,"name":"uint256","nodeType":"ElementaryTypeName","src":"22189:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22177:22:7"},"returnParameters":{"id":4161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4160,"mutability":"mutable","name":"result","nameLocation":"22231:6:7","nodeType":"VariableDeclaration","scope":4192,"src":"22223:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4159,"name":"uint256","nodeType":"ElementaryTypeName","src":"22223:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22222:16:7"},"scope":4308,"src":"22165:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4249,"nodeType":"Block","src":"23099:437:7","statements":[{"expression":{"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4202,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"23174:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4203,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"23183:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"31","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23187:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23183:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23191:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23183:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4209,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"23199:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23183:21:7","trueExpression":{"id":4208,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"23195:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23174:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4212,"nodeType":"ExpressionStatement","src":"23174:30:7"},{"body":{"id":4247,"nodeType":"Block","src":"23311:219:7","statements":[{"expression":{"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4224,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"23325:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4227,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"23354:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4228,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"23357:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4225,"name":"PRBMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"23329:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PRBMath_$3698_$","typeString":"type(library PRBMath)"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDivFixedPoint","nodeType":"MemberAccess","referencedDeclaration":3339,"src":"23329:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23329:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23325:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4231,"nodeType":"ExpressionStatement","src":"23325:34:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4232,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"23432:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"31","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23436:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23432:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23440:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23432:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4246,"nodeType":"IfStatement","src":"23428:92:7","trueBody":{"id":4245,"nodeType":"Block","src":"23443:77:7","statements":[{"expression":{"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"23461:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"23495:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4241,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"23503:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4238,"name":"PRBMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"23470:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PRBMath_$3698_$","typeString":"type(library PRBMath)"}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDivFixedPoint","nodeType":"MemberAccess","referencedDeclaration":3339,"src":"23470:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23470:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23461:44:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4244,"nodeType":"ExpressionStatement","src":"23461:44:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4217,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"23295:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23299:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23295:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4248,"initializationExpression":{"expression":{"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4213,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"23286:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"31","id":4214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23292:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23286:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4216,"nodeType":"ExpressionStatement","src":"23286:7:7"},"loopExpression":{"expression":{"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4220,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"23302:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"31","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23308:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23302:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4223,"nodeType":"ExpressionStatement","src":"23302:7:7"},"nodeType":"ForStatement","src":"23281:249:7"}]},"documentation":{"id":4193,"nodeType":"StructuredDocumentation","src":"22395:624:7","text":"@notice Raises x (unsigned 60.18-decimal fixed-point number) to the power of y (basic unsigned integer) using the\n famous algorithm \"exponentiation by squaring\".\n @dev See https://en.wikipedia.org/wiki/Exponentiation_by_squaring\n Requirements:\n - The result must fit within MAX_UD60x18.\n Caveats:\n - All from \"mul\".\n - Assumes 0^0 is 1.\n @param x The base as an unsigned 60.18-decimal fixed-point number.\n @param y The exponent as an uint256.\n @return result The result as an unsigned 60.18-decimal fixed-point number."},"id":4250,"implemented":true,"kind":"function","modifiers":[],"name":"powu","nameLocation":"23033:4:7","nodeType":"FunctionDefinition","parameters":{"id":4198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"mutability":"mutable","name":"x","nameLocation":"23046:1:7","nodeType":"VariableDeclaration","scope":4250,"src":"23038:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4194,"name":"uint256","nodeType":"ElementaryTypeName","src":"23038:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4197,"mutability":"mutable","name":"y","nameLocation":"23057:1:7","nodeType":"VariableDeclaration","scope":4250,"src":"23049:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4196,"name":"uint256","nodeType":"ElementaryTypeName","src":"23049:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23037:22:7"},"returnParameters":{"id":4201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"result","nameLocation":"23091:6:7","nodeType":"VariableDeclaration","scope":4250,"src":"23083:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4199,"name":"uint256","nodeType":"ElementaryTypeName","src":"23083:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23082:16:7"},"scope":4308,"src":"23024:512:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4260,"nodeType":"Block","src":"23673:31:7","statements":[{"expression":{"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4256,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"23683:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4257,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"23692:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23683:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4259,"nodeType":"ExpressionStatement","src":"23683:14:7"}]},"documentation":{"id":4251,"nodeType":"StructuredDocumentation","src":"23542:70:7","text":"@notice Returns 1 as an unsigned 60.18-decimal fixed-point number."},"id":4261,"implemented":true,"kind":"function","modifiers":[],"name":"scale","nameLocation":"23626:5:7","nodeType":"FunctionDefinition","parameters":{"id":4252,"nodeType":"ParameterList","parameters":[],"src":"23631:2:7"},"returnParameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"result","nameLocation":"23665:6:7","nodeType":"VariableDeclaration","scope":4261,"src":"23657:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4253,"name":"uint256","nodeType":"ElementaryTypeName","src":"23657:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23656:16:7"},"scope":4308,"src":"23617:87:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4290,"nodeType":"Block","src":"24230:436:7","statements":[{"id":4289,"nodeType":"UncheckedBlock","src":"24240:420:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4269,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"24268:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4270,"name":"MAX_UD60x18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"24272:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4271,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"24286:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24272:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24268:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4279,"nodeType":"IfStatement","src":"24264:100:7","trueBody":{"id":4278,"nodeType":"Block","src":"24293:71:7","statements":[{"errorCall":{"arguments":[{"id":4275,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"24347:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4274,"name":"PRBMathUD60x18__SqrtOverflow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"24318:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24318:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4277,"nodeType":"RevertStatement","src":"24311:38:7"}]}},{"expression":{"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4280,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"24617:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4283,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"24639:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4284,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"24643:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24639:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4281,"name":"PRBMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"24626:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PRBMath_$3698_$","typeString":"type(library PRBMath)"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":3697,"src":"24626:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24626:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24617:32:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4288,"nodeType":"ExpressionStatement","src":"24617:32:7"}]}]},"documentation":{"id":4262,"nodeType":"StructuredDocumentation","src":"23710:451:7","text":"@notice Calculates the square root of x, rounding down.\n @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\n Requirements:\n - x must be less than MAX_UD60x18 / SCALE.\n @param x The unsigned 60.18-decimal fixed-point number for which to calculate the square root.\n @return result The result as an unsigned 60.18-decimal fixed-point ."},"id":4291,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"24175:4:7","nodeType":"FunctionDefinition","parameters":{"id":4265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4264,"mutability":"mutable","name":"x","nameLocation":"24188:1:7","nodeType":"VariableDeclaration","scope":4291,"src":"24180:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4263,"name":"uint256","nodeType":"ElementaryTypeName","src":"24180:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24179:11:7"},"returnParameters":{"id":4268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4267,"mutability":"mutable","name":"result","nameLocation":"24222:6:7","nodeType":"VariableDeclaration","scope":4291,"src":"24214:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4266,"name":"uint256","nodeType":"ElementaryTypeName","src":"24214:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24213:16:7"},"scope":4308,"src":"24166:500:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4306,"nodeType":"Block","src":"24997:69:7","statements":[{"id":4305,"nodeType":"UncheckedBlock","src":"25007:53:7","statements":[{"expression":{"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"25031:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4300,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"25040:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4301,"name":"SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"25044:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25040:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25031:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4304,"nodeType":"ExpressionStatement","src":"25031:18:7"}]}]},"documentation":{"id":4292,"nodeType":"StructuredDocumentation","src":"24672:254:7","text":"@notice Converts a unsigned 60.18-decimal fixed-point number to basic integer form, rounding down in the process.\n @param x The unsigned 60.18-decimal fixed-point number to convert.\n @return result The same number in basic integer form."},"id":4307,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"24940:6:7","nodeType":"FunctionDefinition","parameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4294,"mutability":"mutable","name":"x","nameLocation":"24955:1:7","nodeType":"VariableDeclaration","scope":4307,"src":"24947:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4293,"name":"uint256","nodeType":"ElementaryTypeName","src":"24947:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24946:11:7"},"returnParameters":{"id":4298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4297,"mutability":"mutable","name":"result","nameLocation":"24989:6:7","nodeType":"VariableDeclaration","scope":4307,"src":"24981:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4296,"name":"uint256","nodeType":"ElementaryTypeName","src":"24981:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24980:16:7"},"scope":4308,"src":"24931:135:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4309,"src":"566:24502:7","usedErrors":[]}],"src":"38:25031:7"},"id":7}},"contracts":{"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional enumeration extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Registry.sol":{"Registry":{"abi":[{"inputs":[{"internalType":"string","name":"__symbol","type":"string"},{"internalType":"string","name":"__name","type":"string"},{"internalType":"address[]","name":"addresses","type":"address[]"},{"internalType":"string[]","name":"foundersCids","type":"string[]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccountAlreadyOwnsOneToken","type":"error"},{"inputs":[],"name":"CantChallengeInvalidAccount","type":"error"},{"inputs":[],"name":"ChallangeAlreadyActive","type":"error"},{"inputs":[],"name":"ErrorAccountNotValid","type":"error"},{"inputs":[],"name":"ErrorAccountSolidified","type":"error"},{"inputs":[],"name":"ErrorAlreadyVoted","type":"error"},{"inputs":[],"name":"ErrorChallangeAlreadyExecuted","type":"error"},{"inputs":[],"name":"ErrorChallangeNotActive","type":"error"},{"inputs":[],"name":"ErrorVoteNotFound","type":"error"},{"inputs":[],"name":"ErrorVoteOnOwnChallenge","type":"error"},{"inputs":[],"name":"ErrorVoterCantVote","type":"error"},{"inputs":[],"name":"ErrorVoterValid","type":"error"},{"inputs":[],"name":"ErrorVotingPeriodEnded","type":"error"},{"inputs":[],"name":"ErrorVoucherIsValid","type":"error"},{"inputs":[],"name":"ErrorVoucherNotValid","type":"error"},{"inputs":[{"internalType":"uint256","name":"prod1","type":"uint256"}],"name":"PRBMath__MulDivFixedPointOverflow","type":"error"},{"inputs":[{"internalType":"uint256","name":"prod1","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"PRBMath__MulDivOverflow","type":"error"},{"inputs":[],"name":"UnexpectedExecutedCondition","type":"error"},{"inputs":[],"name":"VoucherNoLongerInvalid","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ChallengeEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"int8","name":"outcome","type":"int8"}],"name":"ChallengeExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"InvalidatedAccountEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"InvalidatedByChallenge","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"InvalidatedByInvalidVoucher","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"voterTokenId","type":"uint256"}],"name":"InvalidatedVoteEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"voterTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"int8","name":"vote","type":"int8"}],"name":"VoteEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newEndDate","type":"uint256"}],"name":"VotingPeriodExtendedEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"from","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"to","type":"uint256"},{"indexed":false,"internalType":"string","name":"personCid","type":"string"}],"name":"VouchEvent","type":"event"},{"inputs":[],"name":"FOUNDERS_VOUCHER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PENDING_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"QUIET_ENDING_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VOTING_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_nEntries","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"voterTokenId","type":"uint256"},{"internalType":"uint256","name":"challengedTokenId","type":"uint256"}],"name":"canVote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"challenge","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"executeVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getAccount","outputs":[{"components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"voucher","type":"uint256"},{"internalType":"bool","name":"valid","type":"bool"},{"internalType":"uint256","name":"timesChallenged","type":"uint256"}],"internalType":"struct Registry.Account","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getChallenge","outputs":[{"internalType":"uint256","name":"creationDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"int8","name":"lastOutcome","type":"int8"},{"internalType":"uint256","name":"nVoted","type":"uint256"},{"internalType":"uint256","name":"nFor","type":"uint256"},{"internalType":"bool","name":"executed","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"voterTokenId","type":"uint256"}],"name":"getChallengeVote","outputs":[{"internalType":"int8","name":"","type":"int8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"challengeIndex","type":"uint256"}],"name":"getSpecificChallenge","outputs":[{"internalType":"uint256","name":"creationDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"int8","name":"lastOutcome","type":"int8"},{"internalType":"uint256","name":"nVoted","type":"uint256"},{"internalType":"uint256","name":"nFor","type":"uint256"},{"internalType":"bool","name":"executed","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"voterTokenId","type":"uint256"},{"internalType":"uint256","name":"challengeIndex","type":"uint256"}],"name":"getSpecificChallengeVote","outputs":[{"internalType":"int8","name":"","type":"int8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getTokenPersonCid","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getTokenVouch","outputs":[{"components":[{"internalType":"string","name":"personCid","type":"string"},{"internalType":"uint256","name":"vouchDate","type":"uint256"}],"internalType":"struct Registry.Vouch","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"getTotalVoters","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"voucherTokenId","type":"uint256"}],"name":"getVoucherVouchesNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"invalidateInvalidVoucher","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"uint256","name":"_voterTokenId","type":"uint256"}],"name":"invalidateVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"isSolidified","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"tokenIdOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"int8","name":"_vote","type":"int8"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"personCid","type":"string"}],"name":"vouch","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"Registry","version":1},"evm":{"bytecode":{"functionDebugData":{"@_454":{"entryPoint":null,"id":454,"parameterSlots":4,"returnSlots":0},"@_vouch_1346":{"entryPoint":337,"id":1346,"parameterSlots":3,"returnSlots":0},"@nextTokenId_1232":{"entryPoint":769,"id":1232,"parameterSlots":0,"returnSlots":1},"abi_decode_array_string_dyn_fromMemory":{"entryPoint":964,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":1125,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":1241,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1544,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1597,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":1648,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1686,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1713,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1764,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":1825,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint8":{"entryPoint":1855,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1890,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1912,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1934,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5415:8","statements":[{"nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nodeType":"YulBlock","src":"88:790:8","statements":[{"body":{"nodeType":"YulBlock","src":"137:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"146:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"149:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"139:6:8"},"nodeType":"YulFunctionCall","src":"139:12:8"},"nodeType":"YulExpressionStatement","src":"139:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"116:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"124:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"112:3:8"},"nodeType":"YulFunctionCall","src":"112:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"131:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:8"},"nodeType":"YulFunctionCall","src":"108:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"101:6:8"},"nodeType":"YulFunctionCall","src":"101:35:8"},"nodeType":"YulIf","src":"98:2:8"},{"nodeType":"YulVariableDeclaration","src":"162:23:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"178:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"172:5:8"},"nodeType":"YulFunctionCall","src":"172:13:8"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"166:2:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"194:14:8","value":{"kind":"number","nodeType":"YulLiteral","src":"204:4:8","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"198:2:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"217:71:8","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"284:2:8"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"244:39:8"},"nodeType":"YulFunctionCall","src":"244:43:8"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"228:15:8"},"nodeType":"YulFunctionCall","src":"228:60:8"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"221:3:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"297:16:8","value":{"name":"dst","nodeType":"YulIdentifier","src":"310:3:8"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"301:5:8","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"329:3:8"},{"name":"_1","nodeType":"YulIdentifier","src":"334:2:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"322:6:8"},"nodeType":"YulFunctionCall","src":"322:15:8"},"nodeType":"YulExpressionStatement","src":"322:15:8"},{"nodeType":"YulAssignment","src":"346:19:8","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"357:3:8"},{"name":"_2","nodeType":"YulIdentifier","src":"362:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"353:3:8"},"nodeType":"YulFunctionCall","src":"353:12:8"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"346:3:8"}]},{"nodeType":"YulVariableDeclaration","src":"374:26:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"389:6:8"},{"name":"_2","nodeType":"YulIdentifier","src":"397:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"385:3:8"},"nodeType":"YulFunctionCall","src":"385:15:8"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"378:3:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"454:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"463:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"466:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"456:6:8"},"nodeType":"YulFunctionCall","src":"456:12:8"},"nodeType":"YulExpressionStatement","src":"456:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"423:6:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"435:1:8","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"438:2:8"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"431:3:8"},"nodeType":"YulFunctionCall","src":"431:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"419:3:8"},"nodeType":"YulFunctionCall","src":"419:23:8"},{"name":"_2","nodeType":"YulIdentifier","src":"444:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"415:3:8"},"nodeType":"YulFunctionCall","src":"415:32:8"},{"name":"end","nodeType":"YulIdentifier","src":"449:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"412:2:8"},"nodeType":"YulFunctionCall","src":"412:41:8"},"nodeType":"YulIf","src":"409:2:8"},{"nodeType":"YulVariableDeclaration","src":"479:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"488:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"483:1:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"498:12:8","value":{"name":"i","nodeType":"YulIdentifier","src":"509:1:8"},"variables":[{"name":"i_1","nodeType":"YulTypedName","src":"502:3:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"570:279:8","statements":[{"nodeType":"YulVariableDeclaration","src":"584:29:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"609:3:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"603:5:8"},"nodeType":"YulFunctionCall","src":"603:10:8"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"588:11:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"665:16:8","statements":[{"expression":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"674:1:8"},{"name":"i","nodeType":"YulIdentifier","src":"677:1:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"667:6:8"},"nodeType":"YulFunctionCall","src":"667:12:8"},"nodeType":"YulExpressionStatement","src":"667:12:8"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"632:11:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"653:2:8","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"657:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"649:3:8"},"nodeType":"YulFunctionCall","src":"649:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"661:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"645:3:8"},"nodeType":"YulFunctionCall","src":"645:18:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"629:2:8"},"nodeType":"YulFunctionCall","src":"629:35:8"},"nodeType":"YulIf","src":"626:2:8"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"701:3:8"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"743:6:8"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"751:11:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"739:3:8"},"nodeType":"YulFunctionCall","src":"739:24:8"},{"name":"_2","nodeType":"YulIdentifier","src":"765:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"735:3:8"},"nodeType":"YulFunctionCall","src":"735:33:8"},{"name":"end","nodeType":"YulIdentifier","src":"770:3:8"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"706:28:8"},"nodeType":"YulFunctionCall","src":"706:68:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"694:6:8"},"nodeType":"YulFunctionCall","src":"694:81:8"},"nodeType":"YulExpressionStatement","src":"694:81:8"},{"nodeType":"YulAssignment","src":"788:19:8","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"799:3:8"},{"name":"_2","nodeType":"YulIdentifier","src":"804:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"795:3:8"},"nodeType":"YulFunctionCall","src":"795:12:8"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"788:3:8"}]},{"nodeType":"YulAssignment","src":"820:19:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"831:3:8"},{"name":"_2","nodeType":"YulIdentifier","src":"836:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"827:3:8"},"nodeType":"YulFunctionCall","src":"827:12:8"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"820:3:8"}]}]},"condition":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"530:3:8"},{"name":"_1","nodeType":"YulIdentifier","src":"535:2:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"527:2:8"},"nodeType":"YulFunctionCall","src":"527:11:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"539:22:8","statements":[{"nodeType":"YulAssignment","src":"541:18:8","value":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"552:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"557:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"548:3:8"},"nodeType":"YulFunctionCall","src":"548:11:8"},"variableNames":[{"name":"i_1","nodeType":"YulIdentifier","src":"541:3:8"}]}]},"pre":{"nodeType":"YulBlock","src":"523:3:8","statements":[]},"src":"519:330:8"},{"nodeType":"YulAssignment","src":"858:14:8","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"867:5:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"858:5:8"}]}]},"name":"abi_decode_array_string_dyn_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"62:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"70:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"78:5:8","type":""}],"src":"14:864:8"},{"body":{"nodeType":"YulBlock","src":"947:433:8","statements":[{"body":{"nodeType":"YulBlock","src":"996:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1005:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1008:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"998:6:8"},"nodeType":"YulFunctionCall","src":"998:12:8"},"nodeType":"YulExpressionStatement","src":"998:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"975:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"983:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"971:3:8"},"nodeType":"YulFunctionCall","src":"971:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"990:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"967:3:8"},"nodeType":"YulFunctionCall","src":"967:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"960:6:8"},"nodeType":"YulFunctionCall","src":"960:35:8"},"nodeType":"YulIf","src":"957:2:8"},{"nodeType":"YulVariableDeclaration","src":"1021:23:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1037:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1031:5:8"},"nodeType":"YulFunctionCall","src":"1031:13:8"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1025:2:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1083:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1085:16:8"},"nodeType":"YulFunctionCall","src":"1085:18:8"},"nodeType":"YulExpressionStatement","src":"1085:18:8"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1059:2:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1071:2:8","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1075:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1067:3:8"},"nodeType":"YulFunctionCall","src":"1067:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"1079:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1063:3:8"},"nodeType":"YulFunctionCall","src":"1063:18:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1056:2:8"},"nodeType":"YulFunctionCall","src":"1056:26:8"},"nodeType":"YulIf","src":"1053:2:8"},{"nodeType":"YulVariableDeclaration","src":"1114:70:8","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1157:2:8"},{"kind":"number","nodeType":"YulLiteral","src":"1161:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1153:3:8"},"nodeType":"YulFunctionCall","src":"1153:13:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1172:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1168:3:8"},"nodeType":"YulFunctionCall","src":"1168:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1149:3:8"},"nodeType":"YulFunctionCall","src":"1149:27:8"},{"kind":"number","nodeType":"YulLiteral","src":"1178:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1145:3:8"},"nodeType":"YulFunctionCall","src":"1145:38:8"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1129:15:8"},"nodeType":"YulFunctionCall","src":"1129:55:8"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"1118:7:8","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"1200:7:8"},{"name":"_1","nodeType":"YulIdentifier","src":"1209:2:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1193:6:8"},"nodeType":"YulFunctionCall","src":"1193:19:8"},"nodeType":"YulExpressionStatement","src":"1193:19:8"},{"body":{"nodeType":"YulBlock","src":"1260:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1269:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1272:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1262:6:8"},"nodeType":"YulFunctionCall","src":"1262:12:8"},"nodeType":"YulExpressionStatement","src":"1262:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1235:6:8"},{"name":"_1","nodeType":"YulIdentifier","src":"1243:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1231:3:8"},"nodeType":"YulFunctionCall","src":"1231:15:8"},{"kind":"number","nodeType":"YulLiteral","src":"1248:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1227:3:8"},"nodeType":"YulFunctionCall","src":"1227:26:8"},{"name":"end","nodeType":"YulIdentifier","src":"1255:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1224:2:8"},"nodeType":"YulFunctionCall","src":"1224:35:8"},"nodeType":"YulIf","src":"1221:2:8"},{"expression":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1311:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1319:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1307:3:8"},"nodeType":"YulFunctionCall","src":"1307:17:8"},{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"1330:7:8"},{"kind":"number","nodeType":"YulLiteral","src":"1339:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1326:3:8"},"nodeType":"YulFunctionCall","src":"1326:18:8"},{"name":"_1","nodeType":"YulIdentifier","src":"1346:2:8"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"1285:21:8"},"nodeType":"YulFunctionCall","src":"1285:64:8"},"nodeType":"YulExpressionStatement","src":"1285:64:8"},{"nodeType":"YulAssignment","src":"1358:16:8","value":{"name":"array_1","nodeType":"YulIdentifier","src":"1367:7:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1358:5:8"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"921:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"929:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"937:5:8","type":""}],"src":"883:497:8"},{"body":{"nodeType":"YulBlock","src":"1597:1463:8","statements":[{"body":{"nodeType":"YulBlock","src":"1644:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1653:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1656:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1646:6:8"},"nodeType":"YulFunctionCall","src":"1646:12:8"},"nodeType":"YulExpressionStatement","src":"1646:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1618:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"1627:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1614:3:8"},"nodeType":"YulFunctionCall","src":"1614:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"1639:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1610:3:8"},"nodeType":"YulFunctionCall","src":"1610:33:8"},"nodeType":"YulIf","src":"1607:2:8"},{"nodeType":"YulVariableDeclaration","src":"1669:30:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1689:9:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1683:5:8"},"nodeType":"YulFunctionCall","src":"1683:16:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1673:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1708:28:8","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1726:2:8","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1730:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1722:3:8"},"nodeType":"YulFunctionCall","src":"1722:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"1734:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1718:3:8"},"nodeType":"YulFunctionCall","src":"1718:18:8"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1712:2:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1763:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1772:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1775:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1765:6:8"},"nodeType":"YulFunctionCall","src":"1765:12:8"},"nodeType":"YulExpressionStatement","src":"1765:12:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1751:6:8"},{"name":"_1","nodeType":"YulIdentifier","src":"1759:2:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1748:2:8"},"nodeType":"YulFunctionCall","src":"1748:14:8"},"nodeType":"YulIf","src":"1745:2:8"},{"nodeType":"YulAssignment","src":"1788:71:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1831:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"1842:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1827:3:8"},"nodeType":"YulFunctionCall","src":"1827:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1851:7:8"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1798:28:8"},"nodeType":"YulFunctionCall","src":"1798:61:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1788:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"1868:12:8","value":{"kind":"number","nodeType":"YulLiteral","src":"1878:2:8","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1872:2:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1889:41:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1915:9:8"},{"name":"_2","nodeType":"YulIdentifier","src":"1926:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1911:3:8"},"nodeType":"YulFunctionCall","src":"1911:18:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1905:5:8"},"nodeType":"YulFunctionCall","src":"1905:25:8"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1893:8:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1959:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1968:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1971:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1961:6:8"},"nodeType":"YulFunctionCall","src":"1961:12:8"},"nodeType":"YulExpressionStatement","src":"1961:12:8"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1945:8:8"},{"name":"_1","nodeType":"YulIdentifier","src":"1955:2:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1942:2:8"},"nodeType":"YulFunctionCall","src":"1942:16:8"},"nodeType":"YulIf","src":"1939:2:8"},{"nodeType":"YulAssignment","src":"1984:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2027:9:8"},{"name":"offset_1","nodeType":"YulIdentifier","src":"2038:8:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2023:3:8"},"nodeType":"YulFunctionCall","src":"2023:24:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2049:7:8"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1994:28:8"},"nodeType":"YulFunctionCall","src":"1994:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1984:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"2066:41:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2092:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2103:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2088:3:8"},"nodeType":"YulFunctionCall","src":"2088:18:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2082:5:8"},"nodeType":"YulFunctionCall","src":"2082:25:8"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"2070:8:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2136:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2145:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2148:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2138:6:8"},"nodeType":"YulFunctionCall","src":"2138:12:8"},"nodeType":"YulExpressionStatement","src":"2138:12:8"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"2122:8:8"},{"name":"_1","nodeType":"YulIdentifier","src":"2132:2:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2119:2:8"},"nodeType":"YulFunctionCall","src":"2119:16:8"},"nodeType":"YulIf","src":"2116:2:8"},{"nodeType":"YulVariableDeclaration","src":"2161:34:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2175:9:8"},{"name":"offset_2","nodeType":"YulIdentifier","src":"2186:8:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2171:3:8"},"nodeType":"YulFunctionCall","src":"2171:24:8"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2165:2:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2243:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2252:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2255:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2245:6:8"},"nodeType":"YulFunctionCall","src":"2245:12:8"},"nodeType":"YulExpressionStatement","src":"2245:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2222:2:8"},{"kind":"number","nodeType":"YulLiteral","src":"2226:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2218:3:8"},"nodeType":"YulFunctionCall","src":"2218:13:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2233:7:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2214:3:8"},"nodeType":"YulFunctionCall","src":"2214:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2207:6:8"},"nodeType":"YulFunctionCall","src":"2207:35:8"},"nodeType":"YulIf","src":"2204:2:8"},{"nodeType":"YulVariableDeclaration","src":"2268:19:8","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2284:2:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2278:5:8"},"nodeType":"YulFunctionCall","src":"2278:9:8"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"2272:2:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2296:71:8","value":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"2363:2:8"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"2323:39:8"},"nodeType":"YulFunctionCall","src":"2323:43:8"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2307:15:8"},"nodeType":"YulFunctionCall","src":"2307:60:8"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2300:3:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2376:16:8","value":{"name":"dst","nodeType":"YulIdentifier","src":"2389:3:8"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"2380:5:8","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2408:3:8"},{"name":"_4","nodeType":"YulIdentifier","src":"2413:2:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2401:6:8"},"nodeType":"YulFunctionCall","src":"2401:15:8"},"nodeType":"YulExpressionStatement","src":"2401:15:8"},{"nodeType":"YulAssignment","src":"2425:19:8","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2436:3:8"},{"name":"_2","nodeType":"YulIdentifier","src":"2441:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2432:3:8"},"nodeType":"YulFunctionCall","src":"2432:12:8"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2425:3:8"}]},{"nodeType":"YulVariableDeclaration","src":"2453:22:8","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2468:2:8"},{"name":"_2","nodeType":"YulIdentifier","src":"2472:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2464:3:8"},"nodeType":"YulFunctionCall","src":"2464:11:8"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"2457:3:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2538:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2541:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2531:6:8"},"nodeType":"YulFunctionCall","src":"2531:12:8"},"nodeType":"YulExpressionStatement","src":"2531:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2498:2:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2506:1:8","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"2509:2:8"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2502:3:8"},"nodeType":"YulFunctionCall","src":"2502:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2494:3:8"},"nodeType":"YulFunctionCall","src":"2494:19:8"},{"name":"_2","nodeType":"YulIdentifier","src":"2515:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:8"},"nodeType":"YulFunctionCall","src":"2490:28:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2520:7:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2487:2:8"},"nodeType":"YulFunctionCall","src":"2487:41:8"},"nodeType":"YulIf","src":"2484:2:8"},{"nodeType":"YulVariableDeclaration","src":"2554:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"2563:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2558:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2618:225:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2632:23:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2651:3:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2645:5:8"},"nodeType":"YulFunctionCall","src":"2645:10:8"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2636:5:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2722:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2731:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2734:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2724:6:8"},"nodeType":"YulFunctionCall","src":"2724:12:8"},"nodeType":"YulExpressionStatement","src":"2724:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2681:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2692:5:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2707:3:8","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2712:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2703:3:8"},"nodeType":"YulFunctionCall","src":"2703:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"2716:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2699:3:8"},"nodeType":"YulFunctionCall","src":"2699:19:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2688:3:8"},"nodeType":"YulFunctionCall","src":"2688:31:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2678:2:8"},"nodeType":"YulFunctionCall","src":"2678:42:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2671:6:8"},"nodeType":"YulFunctionCall","src":"2671:50:8"},"nodeType":"YulIf","src":"2668:2:8"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2758:3:8"},{"name":"value","nodeType":"YulIdentifier","src":"2763:5:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2751:6:8"},"nodeType":"YulFunctionCall","src":"2751:18:8"},"nodeType":"YulExpressionStatement","src":"2751:18:8"},{"nodeType":"YulAssignment","src":"2782:19:8","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2793:3:8"},{"name":"_2","nodeType":"YulIdentifier","src":"2798:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2789:3:8"},"nodeType":"YulFunctionCall","src":"2789:12:8"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2782:3:8"}]},{"nodeType":"YulAssignment","src":"2814:19:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2825:3:8"},{"name":"_2","nodeType":"YulIdentifier","src":"2830:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2821:3:8"},"nodeType":"YulFunctionCall","src":"2821:12:8"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2814:3:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2584:1:8"},{"name":"_4","nodeType":"YulIdentifier","src":"2587:2:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2581:2:8"},"nodeType":"YulFunctionCall","src":"2581:9:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2591:18:8","statements":[{"nodeType":"YulAssignment","src":"2593:14:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2602:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"2605:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2598:3:8"},"nodeType":"YulFunctionCall","src":"2598:9:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2593:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"2577:3:8","statements":[]},"src":"2573:270:8"},{"nodeType":"YulAssignment","src":"2852:15:8","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"2862:5:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2852:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"2876:41:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2902:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2913:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2898:3:8"},"nodeType":"YulFunctionCall","src":"2898:18:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2892:5:8"},"nodeType":"YulFunctionCall","src":"2892:25:8"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"2880:8:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2946:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2955:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2958:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2948:6:8"},"nodeType":"YulFunctionCall","src":"2948:12:8"},"nodeType":"YulExpressionStatement","src":"2948:12:8"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"2932:8:8"},{"name":"_1","nodeType":"YulIdentifier","src":"2942:2:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2929:2:8"},"nodeType":"YulFunctionCall","src":"2929:16:8"},"nodeType":"YulIf","src":"2926:2:8"},{"nodeType":"YulAssignment","src":"2971:83:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3024:9:8"},{"name":"offset_3","nodeType":"YulIdentifier","src":"3035:8:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3020:3:8"},"nodeType":"YulFunctionCall","src":"3020:24:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3046:7:8"}],"functionName":{"name":"abi_decode_array_string_dyn_fromMemory","nodeType":"YulIdentifier","src":"2981:38:8"},"nodeType":"YulFunctionCall","src":"2981:73:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2971:6:8"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1539:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1550:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1562:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1570:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1578:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1586:6:8","type":""}],"src":"1385:1675:8"},{"body":{"nodeType":"YulBlock","src":"3186:262:8","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3203:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3214:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3196:6:8"},"nodeType":"YulFunctionCall","src":"3196:21:8"},"nodeType":"YulExpressionStatement","src":"3196:21:8"},{"nodeType":"YulVariableDeclaration","src":"3226:27:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3246:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3240:5:8"},"nodeType":"YulFunctionCall","src":"3240:13:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3230:6:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3273:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3284:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3269:3:8"},"nodeType":"YulFunctionCall","src":"3269:18:8"},{"name":"length","nodeType":"YulIdentifier","src":"3289:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3262:6:8"},"nodeType":"YulFunctionCall","src":"3262:34:8"},"nodeType":"YulExpressionStatement","src":"3262:34:8"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3331:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3339:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3327:3:8"},"nodeType":"YulFunctionCall","src":"3327:15:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3359:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:8"},"nodeType":"YulFunctionCall","src":"3344:18:8"},{"name":"length","nodeType":"YulIdentifier","src":"3364:6:8"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3305:21:8"},"nodeType":"YulFunctionCall","src":"3305:66:8"},"nodeType":"YulExpressionStatement","src":"3305:66:8"},{"nodeType":"YulAssignment","src":"3380:62:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3396:9:8"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3415:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3423:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3411:3:8"},"nodeType":"YulFunctionCall","src":"3411:15:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3432:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3428:3:8"},"nodeType":"YulFunctionCall","src":"3428:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3407:3:8"},"nodeType":"YulFunctionCall","src":"3407:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3392:3:8"},"nodeType":"YulFunctionCall","src":"3392:45:8"},{"kind":"number","nodeType":"YulLiteral","src":"3439:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3388:3:8"},"nodeType":"YulFunctionCall","src":"3388:54:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3380:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3155:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3166:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3177:4:8","type":""}],"src":"3065:383:8"},{"body":{"nodeType":"YulBlock","src":"3498:230:8","statements":[{"nodeType":"YulAssignment","src":"3508:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3524:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3518:5:8"},"nodeType":"YulFunctionCall","src":"3518:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3508:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"3536:58:8","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3558:6:8"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3574:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"3580:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3570:3:8"},"nodeType":"YulFunctionCall","src":"3570:13:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3589:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3585:3:8"},"nodeType":"YulFunctionCall","src":"3585:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3566:3:8"},"nodeType":"YulFunctionCall","src":"3566:27:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3554:3:8"},"nodeType":"YulFunctionCall","src":"3554:40:8"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3540:10:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"3669:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3671:16:8"},"nodeType":"YulFunctionCall","src":"3671:18:8"},"nodeType":"YulExpressionStatement","src":"3671:18:8"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3612:10:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3632:2:8","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3636:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3628:3:8"},"nodeType":"YulFunctionCall","src":"3628:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"3640:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3624:3:8"},"nodeType":"YulFunctionCall","src":"3624:18:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3609:2:8"},"nodeType":"YulFunctionCall","src":"3609:34:8"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3648:10:8"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3660:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3645:2:8"},"nodeType":"YulFunctionCall","src":"3645:22:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3606:2:8"},"nodeType":"YulFunctionCall","src":"3606:62:8"},"nodeType":"YulIf","src":"3603:2:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3707:2:8","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3711:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3700:6:8"},"nodeType":"YulFunctionCall","src":"3700:22:8"},"nodeType":"YulExpressionStatement","src":"3700:22:8"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3478:4:8","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3487:6:8","type":""}],"src":"3453:275:8"},{"body":{"nodeType":"YulBlock","src":"3802:114:8","statements":[{"body":{"nodeType":"YulBlock","src":"3846:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3848:16:8"},"nodeType":"YulFunctionCall","src":"3848:18:8"},"nodeType":"YulExpressionStatement","src":"3848:18:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3818:6:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3834:2:8","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3838:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3830:3:8"},"nodeType":"YulFunctionCall","src":"3830:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"3842:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3826:3:8"},"nodeType":"YulFunctionCall","src":"3826:18:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3815:2:8"},"nodeType":"YulFunctionCall","src":"3815:30:8"},"nodeType":"YulIf","src":"3812:2:8"},{"nodeType":"YulAssignment","src":"3877:33:8","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3893:1:8","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"3896:6:8"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3889:3:8"},"nodeType":"YulFunctionCall","src":"3889:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"3905:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3885:3:8"},"nodeType":"YulFunctionCall","src":"3885:25:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3877:4:8"}]}]},"name":"array_allocation_size_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3782:6:8","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3793:4:8","type":""}],"src":"3733:183:8"},{"body":{"nodeType":"YulBlock","src":"3969:80:8","statements":[{"body":{"nodeType":"YulBlock","src":"3996:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3998:16:8"},"nodeType":"YulFunctionCall","src":"3998:18:8"},"nodeType":"YulExpressionStatement","src":"3998:18:8"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3985:1:8"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3992:1:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3988:3:8"},"nodeType":"YulFunctionCall","src":"3988:6:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3982:2:8"},"nodeType":"YulFunctionCall","src":"3982:13:8"},"nodeType":"YulIf","src":"3979:2:8"},{"nodeType":"YulAssignment","src":"4027:16:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4038:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"4041:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4034:3:8"},"nodeType":"YulFunctionCall","src":"4034:9:8"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4027:3:8"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3952:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"3955:1:8","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3961:3:8","type":""}],"src":"3921:128:8"},{"body":{"nodeType":"YulBlock","src":"4107:205:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4117:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4126:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4121:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"4186:63:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4211:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"4216:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4207:3:8"},"nodeType":"YulFunctionCall","src":"4207:11:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4230:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"4235:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4226:3:8"},"nodeType":"YulFunctionCall","src":"4226:11:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4220:5:8"},"nodeType":"YulFunctionCall","src":"4220:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4200:6:8"},"nodeType":"YulFunctionCall","src":"4200:39:8"},"nodeType":"YulExpressionStatement","src":"4200:39:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4147:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"4150:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4144:2:8"},"nodeType":"YulFunctionCall","src":"4144:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4158:19:8","statements":[{"nodeType":"YulAssignment","src":"4160:15:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4169:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"4172:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4165:3:8"},"nodeType":"YulFunctionCall","src":"4165:10:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4160:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"4140:3:8","statements":[]},"src":"4136:113:8"},{"body":{"nodeType":"YulBlock","src":"4275:31:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4288:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"4293:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4284:3:8"},"nodeType":"YulFunctionCall","src":"4284:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"4302:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4277:6:8"},"nodeType":"YulFunctionCall","src":"4277:27:8"},"nodeType":"YulExpressionStatement","src":"4277:27:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4264:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"4267:6:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4261:2:8"},"nodeType":"YulFunctionCall","src":"4261:13:8"},"nodeType":"YulIf","src":"4258:2:8"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4085:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4090:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"4095:6:8","type":""}],"src":"4054:258:8"},{"body":{"nodeType":"YulBlock","src":"4372:325:8","statements":[{"nodeType":"YulAssignment","src":"4382:22:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4396:1:8","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"4399:4:8"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4392:3:8"},"nodeType":"YulFunctionCall","src":"4392:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4382:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"4413:38:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4443:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"4449:1:8","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4439:3:8"},"nodeType":"YulFunctionCall","src":"4439:12:8"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4417:18:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"4490:31:8","statements":[{"nodeType":"YulAssignment","src":"4492:27:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4506:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"4514:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4502:3:8"},"nodeType":"YulFunctionCall","src":"4502:17:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4492:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4470:18:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4463:6:8"},"nodeType":"YulFunctionCall","src":"4463:26:8"},"nodeType":"YulIf","src":"4460:2:8"},{"body":{"nodeType":"YulBlock","src":"4580:111:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4601:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4608:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4613:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4604:3:8"},"nodeType":"YulFunctionCall","src":"4604:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4594:6:8"},"nodeType":"YulFunctionCall","src":"4594:31:8"},"nodeType":"YulExpressionStatement","src":"4594:31:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4645:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4648:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4638:6:8"},"nodeType":"YulFunctionCall","src":"4638:15:8"},"nodeType":"YulExpressionStatement","src":"4638:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4673:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4676:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4666:6:8"},"nodeType":"YulFunctionCall","src":"4666:15:8"},"nodeType":"YulExpressionStatement","src":"4666:15:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4536:18:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4559:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"4567:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4556:2:8"},"nodeType":"YulFunctionCall","src":"4556:14:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4533:2:8"},"nodeType":"YulFunctionCall","src":"4533:38:8"},"nodeType":"YulIf","src":"4530:2:8"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4352:4:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4361:6:8","type":""}],"src":"4317:380:8"},{"body":{"nodeType":"YulBlock","src":"4749:88:8","statements":[{"body":{"nodeType":"YulBlock","src":"4780:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4782:16:8"},"nodeType":"YulFunctionCall","src":"4782:18:8"},"nodeType":"YulExpressionStatement","src":"4782:18:8"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4765:5:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4776:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4772:3:8"},"nodeType":"YulFunctionCall","src":"4772:6:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4762:2:8"},"nodeType":"YulFunctionCall","src":"4762:17:8"},"nodeType":"YulIf","src":"4759:2:8"},{"nodeType":"YulAssignment","src":"4811:20:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4822:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"4829:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4818:3:8"},"nodeType":"YulFunctionCall","src":"4818:13:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4811:3:8"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4731:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4741:3:8","type":""}],"src":"4702:135:8"},{"body":{"nodeType":"YulBlock","src":"4887:130:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4897:31:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4916:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"4923:4:8","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4912:3:8"},"nodeType":"YulFunctionCall","src":"4912:16:8"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4901:7:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"4958:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4960:16:8"},"nodeType":"YulFunctionCall","src":"4960:18:8"},"nodeType":"YulExpressionStatement","src":"4960:18:8"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4943:7:8"},{"kind":"number","nodeType":"YulLiteral","src":"4952:4:8","type":"","value":"0xff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4940:2:8"},"nodeType":"YulFunctionCall","src":"4940:17:8"},"nodeType":"YulIf","src":"4937:2:8"},{"nodeType":"YulAssignment","src":"4989:22:8","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"5000:7:8"},{"kind":"number","nodeType":"YulLiteral","src":"5009:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4996:3:8"},"nodeType":"YulFunctionCall","src":"4996:15:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4989:3:8"}]}]},"name":"increment_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4869:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4879:3:8","type":""}],"src":"4842:175:8"},{"body":{"nodeType":"YulBlock","src":"5054:95:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5071:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5078:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5083:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5074:3:8"},"nodeType":"YulFunctionCall","src":"5074:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5064:6:8"},"nodeType":"YulFunctionCall","src":"5064:31:8"},"nodeType":"YulExpressionStatement","src":"5064:31:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5111:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5114:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5104:6:8"},"nodeType":"YulFunctionCall","src":"5104:15:8"},"nodeType":"YulExpressionStatement","src":"5104:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5135:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5138:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5128:6:8"},"nodeType":"YulFunctionCall","src":"5128:15:8"},"nodeType":"YulExpressionStatement","src":"5128:15:8"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5022:127:8"},{"body":{"nodeType":"YulBlock","src":"5186:95:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5203:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5210:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5215:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5206:3:8"},"nodeType":"YulFunctionCall","src":"5206:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5196:6:8"},"nodeType":"YulFunctionCall","src":"5196:31:8"},"nodeType":"YulExpressionStatement","src":"5196:31:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5243:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5246:4:8","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5236:6:8"},"nodeType":"YulFunctionCall","src":"5236:15:8"},"nodeType":"YulExpressionStatement","src":"5236:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5267:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5270:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5260:6:8"},"nodeType":"YulFunctionCall","src":"5260:15:8"},"nodeType":"YulExpressionStatement","src":"5260:15:8"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5154:127:8"},{"body":{"nodeType":"YulBlock","src":"5318:95:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5335:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5342:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5347:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5338:3:8"},"nodeType":"YulFunctionCall","src":"5338:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5328:6:8"},"nodeType":"YulFunctionCall","src":"5328:31:8"},"nodeType":"YulExpressionStatement","src":"5328:31:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5375:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5378:4:8","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5368:6:8"},"nodeType":"YulFunctionCall","src":"5368:15:8"},"nodeType":"YulExpressionStatement","src":"5368:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5399:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5402:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5392:6:8"},"nodeType":"YulFunctionCall","src":"5392:15:8"},"nodeType":"YulExpressionStatement","src":"5392:15:8"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5286:127:8"}]},"contents":"{\n    { }\n    function abi_decode_array_string_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(0, 0) }\n        let i := 0\n        let i_1 := i\n        for { } lt(i_1, _1) { i_1 := add(i_1, 1) }\n        {\n            let innerOffset := mload(src)\n            if gt(innerOffset, sub(shl(64, 1), 1)) { revert(i, i) }\n            mstore(dst, abi_decode_string_fromMemory(add(add(offset, innerOffset), _2), end))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory(add(offset, 0x20), add(array_1, 0x20), _1)\n        array := array_1\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let _2 := 32\n        let offset_1 := mload(add(headStart, _2))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let offset_2 := mload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_2)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _2)\n        let src := add(_3, _2)\n        if gt(add(add(_3, shl(5, _4)), _2), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            let value := mload(src)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            mstore(dst, value)\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        value2 := dst_1\n        let offset_3 := mload(add(headStart, 96))\n        if gt(offset_3, _1) { revert(0, 0) }\n        value3 := abi_decode_array_string_dyn_fromMemory(add(headStart, offset_3), dataEnd)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH3 0xED4E00 PUSH1 0x0 SSTORE PUSH3 0x13C680 PUSH1 0x1 SSTORE PUSH3 0x2A300 PUSH1 0x2 SSTORE PUSH1 0x0 NOT PUSH1 0x3 SSTORE PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x7 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH7 0x697066733A2F2F PUSH1 0xC8 SHL PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH3 0x45 SWAP2 PUSH1 0x4 SWAP2 SWAP1 PUSH3 0x31E JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x270C CODESIZE SUB DUP1 PUSH3 0x270C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x76 SWAP2 PUSH3 0x4D9 JUMP JUMPDEST DUP4 MLOAD PUSH3 0x8B SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 PUSH3 0x31E JUMP JUMPDEST POP DUP3 MLOAD PUSH3 0xA1 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x31E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0xC DUP2 SWAP1 SSTORE JUMPDEST DUP3 MLOAD DUP2 PUSH1 0xFF AND LT ISZERO PUSH3 0x146 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SLOAD DUP4 MLOAD PUSH3 0x131 SWAP2 SWAP1 DUP6 SWAP1 PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH3 0xFD JUMPI PUSH3 0xFD PUSH3 0x778 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH3 0x11D JUMPI PUSH3 0x11D PUSH3 0x778 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH3 0x151 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH3 0x13D DUP2 PUSH3 0x73F JUMP JUMPDEST SWAP2 POP POP PUSH3 0xAF JUMP JUMPDEST POP POP POP POP POP PUSH3 0x7A4 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15D PUSH3 0x301 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH3 0x193 JUMPI PUSH1 0x40 MLOAD PUSH4 0x119AB1C9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH3 0x1CB JUMPI PUSH1 0x40 MLOAD PUSH4 0xCB502EF1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x1 DUP2 ADD DUP4 MSTORE SWAP3 KECCAK256 DUP5 MLOAD SWAP1 SWAP2 PUSH3 0x1FB SWAP2 DUP4 SWAP2 DUP8 ADD SWAP1 PUSH3 0x31E JUMP JUMPDEST POP TIMESTAMP PUSH1 0x1 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP1 DUP2 OR DUP3 SSTORE DUP2 DUP7 ADD DUP13 SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 OR SWAP1 SSTORE DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP6 SWAP1 SSTORE DUP4 SLOAD DUP5 SWAP2 SWAP1 PUSH3 0x265 SWAP1 DUP5 SWAP1 PUSH3 0x696 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x281 SWAP2 SWAP1 PUSH3 0x696 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 DUP3 DUP7 PUSH32 0xCD7F391A9646E0AB41EC2096F1D380FEBCDD775905C957EC790AB3738F9FDD78 DUP7 PUSH1 0x40 MLOAD PUSH3 0x2F1 SWAP2 SWAP1 PUSH3 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP2 SLOAD PUSH3 0x314 SWAP1 PUSH3 0x721 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x32C SWAP1 PUSH3 0x6E4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x350 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x39B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x36B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x39B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x39B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x39B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x37E JUMP JUMPDEST POP PUSH3 0x3A9 SWAP3 SWAP2 POP PUSH3 0x3AD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3A9 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3AE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH3 0x3EF PUSH3 0x3E9 DUP4 PUSH3 0x670 JUMP JUMPDEST PUSH3 0x63D JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH3 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH3 0x457 JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x433 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH3 0x443 DUP12 DUP9 DUP4 DUP14 ADD ADD PUSH3 0x465 JUMP JUMPDEST DUP7 MSTORE POP SWAP4 DUP6 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH3 0x414 JUMP JUMPDEST POP SWAP2 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x493 JUMPI PUSH3 0x493 PUSH3 0x78E JUMP JUMPDEST PUSH3 0x4A8 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH3 0x63D JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH3 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x4D1 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x6B1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x516 DUP9 DUP4 DUP10 ADD PUSH3 0x465 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 SWAP2 POP DUP2 DUP8 ADD MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x53C DUP10 DUP3 DUP11 ADD PUSH3 0x465 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0x1F DUP2 ADD DUP10 SGT PUSH3 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH3 0x575 PUSH3 0x3E9 DUP3 PUSH3 0x670 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP6 DUP3 ADD SWAP2 POP DUP6 DUP5 ADD DUP13 DUP8 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH3 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH3 0x5D1 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH3 0x59B JUMP JUMPDEST POP PUSH1 0x60 DUP12 ADD MLOAD SWAP1 SWAP8 POP SWAP5 POP POP POP POP DUP1 DUP3 GT ISZERO PUSH3 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x5FC DUP8 DUP3 DUP9 ADD PUSH3 0x3C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x629 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x6B1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x668 JUMPI PUSH3 0x668 PUSH3 0x78E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH3 0x68C JUMPI PUSH3 0x68C PUSH3 0x78E JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x6AC JUMPI PUSH3 0x6AC PUSH3 0x762 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x6CE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x6B4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x6DE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x6F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x71B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x738 JUMPI PUSH3 0x738 PUSH3 0x762 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH3 0x759 JUMPI PUSH3 0x759 PUSH3 0x762 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1F58 DUP1 PUSH3 0x7B4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x227 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x773C02D4 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0xEE650248 EQ PUSH2 0x597 JUMPI DUP1 PUSH4 0xEF233C0B EQ PUSH2 0x5AA JUMPI DUP1 PUSH4 0xF98A4ECA EQ PUSH2 0x5BD JUMPI DUP1 PUSH4 0xFE131778 EQ PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0xCE88B145 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xD61255F3 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xD9EEEBED EQ PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x9A489620 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0xAB82D9A0 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xB1610D7E EQ PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x773C02D4 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x82C0833B EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x84864BE7 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x912DAC06 EQ PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x43D3A4C1 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x43D3A4C1 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x5D1F0A31 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x5E3BEE73 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x3C823B6B EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x3FB1A836 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC104878 GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0xC104878 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x130A8D80 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x173AC141 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x1BDD4B74 EQ PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x290 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x240 PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1DCA JUMP JUMPDEST PUSH2 0x278 PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x1B87 JUMP JUMPDEST POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A2 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B34 JUMP JUMPDEST PUSH2 0x66B JUMP JUMPDEST PUSH2 0x2CA PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x309 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x0 SWAP4 SWAP1 SWAP4 SIGNEXTEND SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A52 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x93E JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x309 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C36 JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x41E PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB8 JUMP JUMPDEST PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x25D PUSH2 0xB28 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x447 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0xBA8 JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x484 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A8E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x25D PUSH2 0x499 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x51D PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP4 DUP5 ADD DUP3 SWAP1 MSTORE SWAP5 DUP2 MSTORE PUSH1 0x8 DUP6 MSTORE DUP4 SWAP1 KECCAK256 DUP4 MLOAD SWAP2 DUP3 ADD DUP5 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x41E PUSH2 0x569 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C36 JUMP JUMPDEST PUSH2 0xD91 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x57C CALLDATASIZE PUSH1 0x4 PUSH2 0x1C36 JUMP JUMPDEST PUSH2 0xE20 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x58F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x5A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C11 JUMP JUMPDEST PUSH2 0xE38 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x5B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C36 JUMP JUMPDEST PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x5CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x109D JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x5E8 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x614 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x661 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x636 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x661 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x644 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68D CALLER JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x6D0 DUP2 DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x10B4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP5 DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE DUP4 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP1 DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE DUP6 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x72F SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x75B SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x77D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7A8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x78B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CE PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH4 0x5E3BEE73 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 ADDRESS SWAP1 PUSH4 0x5E3BEE73 SWAP1 PUSH1 0x44 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x842 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x866 SWAP2 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST SWAP5 SWAP14 SWAP4 SWAP13 POP SWAP2 SWAP11 POP SWAP9 POP SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP1 DUP6 MSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP7 DUP7 MSTORE SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0x8B8 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E4 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x931 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x906 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x931 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x914 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD SLOAD DUP1 DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x3 SLOAD DUP4 EQ ISZERO PUSH2 0x97A JUMPI DUP2 SLOAD PUSH2 0x977 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x9B1 JUMPI PUSH2 0x9B1 PUSH2 0x1EEC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x6 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD DUP3 SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP15 SWAP2 SWAP14 POP PUSH2 0x100 DUP2 DIV SWAP1 SWAP5 SIGNEXTEND SWAP12 POP SWAP2 SWAP10 POP SWAP8 POP PUSH1 0xFF SWAP1 SWAP2 AND SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA13 DUP3 PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP3 DUP7 ADD DUP2 SWAP1 MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP4 DUP7 ADD MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP2 DUP6 MSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP7 DUP7 MSTORE DUP3 ADD SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 ADD SLOAD DUP3 DUP2 ISZERO DUP1 PUSH2 0xABE JUMPI POP PUSH1 0x0 SLOAD PUSH2 0xABA SWAP1 DUP4 PUSH2 0x1E0F JUMP JUMPDEST TIMESTAMP GT ISZERO JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0xACF JUMPI POP DUP3 PUSH1 0x40 ADD MLOAD JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xAFB JUMPI PUSH2 0xAFB PUSH2 0x1EEC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x3 PUSH1 0x6 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SIGNEXTEND SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x5E8 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD DUP1 DUP4 MSTORE SWAP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6425D3F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x946CCF7529D18D55B60565307325EAA52971532B461C039424DB6A003D5791D6 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0x29E DUP3 PUSH2 0x12A9 JUMP JUMPDEST PUSH2 0xBB1 DUP2 PUSH2 0xA42 JUMP JUMPDEST ISZERO PUSH2 0xBCF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1994E321 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xC01 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3C1391FD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC0C DUP3 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92060F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC55 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4DC137DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x1 DUP1 DUP4 ADD DUP3 SWAP1 SSTORE SLOAD PUSH2 0xC68 SWAP2 PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0xFF00 OR DUP2 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0xFB4749A8BF40D9D3F0FBE28026FEDBE06DC90952EBA3759C2B3EC0A7D5697F31 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP1 DUP6 MSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP7 DUP7 MSTORE SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP4 SWAP2 SWAP1 PUSH2 0xCE5 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD11 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD5E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD33 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD5E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD41 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x4 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD79 SWAP3 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH4 0x4896D603 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0x912DAC06 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97A SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2B DUP4 PUSH2 0x1383 JUMP JUMPDEST SWAP1 POP PUSH2 0x34F DUP4 DUP3 DUP5 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE43 CALLER PUSH2 0x672 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE50 DUP5 PUSH2 0x1383 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xE78 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1EB4F4E7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA238277 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0xEC0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35C84AEB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xECA DUP3 DUP6 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0xEE7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7CD1A649 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SIGNEXTEND SWAP1 SIGNEXTEND ISZERO PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD PUSH4 0x8601A095 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 SIGNEXTEND PUSH1 0x1 EQ PUSH2 0xF2D JUMPI PUSH1 0x0 NOT PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 DUP3 SIGNEXTEND PUSH1 0xFF AND PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xF6A SWAP1 DUP5 SWAP1 PUSH2 0x1E0F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x0 DUP5 SWAP1 SIGNEXTEND EQ PUSH2 0xF82 JUMPI PUSH1 0x0 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND DUP2 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF9B SWAP2 SWAP1 PUSH2 0x1E0F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 DUP6 SWAP1 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE DUP4 SWAP2 PUSH32 0xBDC899FF9789426DEC6B3C3BC128ED8CC0A9B248C274DD93CFDB3709E5A2125E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x6D0 DUP2 DUP6 PUSH2 0x14EB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 EQ ISZERO PUSH2 0xFFA JUMPI POP PUSH1 0x0 PUSH2 0xA13 JUMP JUMPDEST DUP3 PUSH2 0x1007 JUMPI POP PUSH1 0x0 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD DUP1 DUP4 MSTORE SWAP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1043 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB0B9DA2D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 EQ DUP1 PUSH2 0x1061 JUMPI POP DUP2 DUP6 EQ JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1082 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x1092 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0xA13 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A8 DUP3 PUSH2 0x1383 JUMP JUMPDEST SWAP1 POP PUSH2 0x29E DUP2 DUP4 PUSH2 0x14EB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BE PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x10F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x119AB1C9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x112A JUMPI PUSH1 0x40 MLOAD PUSH4 0xCB502EF1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x1 DUP2 ADD DUP4 MSTORE SWAP3 KECCAK256 DUP5 MLOAD SWAP1 SWAP2 PUSH2 0x1158 SWAP2 DUP4 SWAP2 DUP8 ADD SWAP1 PUSH2 0x1906 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x1 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP1 DUP2 OR DUP3 SSTORE DUP2 DUP7 ADD DUP13 SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 OR SWAP1 SSTORE DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP6 SWAP1 SSTORE DUP4 SLOAD DUP5 SWAP2 SWAP1 PUSH2 0x11C0 SWAP1 DUP5 SWAP1 PUSH2 0x1E0F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11DA SWAP2 SWAP1 PUSH2 0x1E0F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 DUP3 DUP7 PUSH32 0xCD7F391A9646E0AB41EC2096F1D380FEBCDD775905C957EC790AB3738F9FDD78 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1248 SWAP2 SWAP1 PUSH2 0x1DCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1291 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x129C JUMPI PUSH1 0x0 PUSH2 0x129F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x12DC JUMPI PUSH1 0x40 MLOAD PUSH4 0x92C9B599 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 SSTORE PUSH1 0x1 DUP1 DUP6 ADD SLOAD DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1335 SWAP1 DUP5 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x134F SWAP2 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x8401ED0B52520270FFBA65C5383931FC1C6E30B27E1FC692D871D4F669D1F1EA SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x13A0 DUP2 PUSH1 0x1 PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ PUSH2 0x13CC JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD DUP2 SSTORE SWAP1 MSTORE JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x13EC JUMPI PUSH2 0x13EC PUSH2 0x1EEC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH2 0x1434 JUMPI PUSH1 0x40 MLOAD PUSH4 0x59DC3029 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1467 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5C2A53C5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x147C SWAP2 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x1 EQ ISZERO PUSH2 0x14B9 JUMPI PUSH1 0x1 DUP3 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14B3 SWAP2 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 DUP5 SWAP1 PUSH32 0x6A5DE386C49C7E87D450F082EACE65D7329E7123BDF11460295F7747ADAD1105 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP6 PUSH1 0x4 ADD SLOAD GT ISZERO PUSH2 0x153E JUMPI PUSH2 0x153B PUSH2 0x1530 PUSH2 0x1521 PUSH8 0xDE0B6B3A7640000 DUP9 PUSH1 0x4 ADD SLOAD PUSH2 0x1750 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x175C JUMP JUMPDEST PUSH1 0x5 DUP8 ADD SLOAD SWAP1 PUSH2 0x1750 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH8 0x6F05B59D3B20000 DUP3 LT ISZERO PUSH2 0x1558 JUMPI PUSH1 0x0 NOT PUSH2 0x155B JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP7 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 DUP3 DUP2 SIGNEXTEND PUSH2 0x100 SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND EQ PUSH2 0x160D JUMPI DUP6 SLOAD PUSH1 0x0 DUP3 DUP2 SIGNEXTEND PUSH1 0xFF AND PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP8 SSTORE PUSH1 0x2 DUP8 ADD SLOAD PUSH2 0x159F SWAP1 TIMESTAMP SWAP1 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x160B JUMPI PUSH1 0x0 DUP2 PUSH1 0x2 SLOAD PUSH2 0x15BB SWAP2 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP9 PUSH1 0x2 ADD SLOAD PUSH2 0x15CA SWAP2 SWAP1 PUSH2 0x1E0F JUMP JUMPDEST SWAP1 POP PUSH32 0x5073BEC5C188828181E51012E5967FBDAC7312BD400B8120CF3DCB0B8EE0F11E DUP2 PUSH1 0x40 MLOAD PUSH2 0x15FD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x2 DUP9 ADD SSTORE JUMPDEST POP JUMPDEST DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0x1650 JUMPI PUSH1 0x0 PUSH2 0x1623 DUP7 PUSH2 0x93E JUMP JUMPDEST SWAP1 POP PUSH2 0x1648 PUSH2 0x163D PUSH2 0x1521 DUP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1750 JUMP JUMPDEST PUSH1 0x5 DUP10 ADD SLOAD SWAP1 PUSH2 0x1750 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x1 SWAP4 POP DUP2 SWAP3 POP JUMPDEST PUSH1 0x0 PUSH8 0x6F05B59D3B20000 DUP5 LT ISZERO PUSH2 0x1672 JUMPI PUSH1 0x0 NOT PUSH2 0x1675 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 SIGNEXTEND PUSH1 0x1 EQ ISZERO PUSH2 0x16BC JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 SWAP6 POP DUP7 SWAP1 PUSH32 0xA3B99CEC0CD3A7EE24EC2A54714E340CC9A7116AA4B0FF7730371682CB47F580 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0x16BC DUP7 PUSH2 0x12A9 JUMP JUMPDEST DUP5 ISZERO PUSH2 0x172C JUMPI PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x0 DUP4 SWAP1 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x4E4D413658C729B8CF2DEE49DA9D98754C99A09654D209CE00244648FEBC1E54 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP7 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP8 SSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP2 PUSH2 0x1726 DUP4 PUSH2 0x1EA5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP2 SLOAD PUSH2 0x1746 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB21 DUP4 DUP4 PUSH2 0x1771 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB21 DUP4 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP5 DUP7 MULMOD DUP5 DUP7 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH2 0x17BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x698D9A01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP7 DUP9 MULMOD SWAP2 POP POP PUSH8 0x6F05B59D3B1FFFF DUP2 GT DUP3 PUSH2 0x17F4 JUMPI DUP1 PUSH8 0xDE0B6B3A7640000 DUP6 DIV ADD SWAP5 POP POP POP POP POP PUSH2 0xA13 JUMP JUMPDEST PUSH3 0x40000 DUP3 DUP6 SUB DIV SWAP4 SWAP1 SWAP2 GT SWAP1 SWAP2 SUB PUSH1 0x1 PUSH1 0xEE SHL MUL SWAP2 SWAP1 SWAP2 OR PUSH32 0xACCB18165BD6FE31AE1CF318DC5B51EEE0E1BA569B88CD74C1773B91FAC10669 MUL ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH1 0x0 EQ ISZERO PUSH2 0x1873 JUMPI DUP4 DUP3 DUP2 PUSH2 0x1869 JUMPI PUSH2 0x1869 PUSH2 0x1ED6 JUMP JUMPDEST DIV SWAP3 POP POP POP PUSH2 0xB21 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x189D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DCF3063 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x17B1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x2 PUSH1 0x1 DUP8 NOT DUP2 ADD DUP9 AND SWAP8 DUP9 SWAP1 DIV PUSH1 0x3 DUP2 MUL DUP4 XOR DUP1 DUP3 MUL DUP5 SUB MUL DUP1 DUP3 MUL DUP5 SUB MUL DUP1 DUP3 MUL DUP5 SUB MUL DUP1 DUP3 MUL DUP5 SUB MUL DUP1 DUP3 MUL DUP5 SUB MUL SWAP1 DUP2 MUL SWAP1 SWAP3 SUB SWAP1 SWAP2 MUL PUSH1 0x0 DUP9 SWAP1 SUB DUP9 SWAP1 DIV SWAP1 SWAP2 ADD DUP6 DUP4 GT SWAP1 SWAP5 SUB SWAP4 SWAP1 SWAP4 MUL SWAP4 SUB SWAP5 SWAP1 SWAP5 DIV SWAP2 SWAP1 SWAP2 OR MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1912 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1934 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x197A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x194D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x197A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x197A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x197A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x195F JUMP JUMPDEST POP PUSH2 0x1986 SWAP3 SWAP2 POP PUSH2 0x198A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1986 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x198B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x19B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x19CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x19FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB21 DUP3 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A3B DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A49 PUSH1 0x20 DUP5 ADD PUSH2 0x199F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A70 DUP5 PUSH2 0x199F JUMP JUMPDEST SWAP3 POP PUSH2 0x1A7E PUSH1 0x20 DUP6 ADD PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AAF DUP7 PUSH2 0x199F JUMP JUMPDEST SWAP5 POP PUSH2 0x1ABD PUSH1 0x20 DUP8 ADD PUSH2 0x199F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AEC DUP9 DUP3 DUP10 ADD PUSH2 0x19BB JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B19 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B29 DUP2 PUSH2 0x1F02 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B52 DUP5 PUSH2 0x199F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B7A DUP7 DUP3 DUP8 ADD PUSH2 0x19BB JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BA3 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB21 DUP2 PUSH2 0x1F13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B29 DUP2 PUSH2 0x1F13 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1C71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 MLOAD SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP5 POP PUSH1 0x40 DUP8 ADD MLOAD PUSH2 0x1C8A DUP2 PUSH2 0x1F13 JUMP JUMPDEST DUP1 SWAP5 POP POP PUSH1 0x60 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x80 DUP8 ADD MLOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD MLOAD PUSH2 0x1CAA DUP2 PUSH2 0x1F02 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1CFC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x1D22 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E3E JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x1D48 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x1D68 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1D7C JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1D8D JUMPI PUSH2 0x1DBA JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x1DBA JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1DB2 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x1D99 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP PUSH2 0xACF DUP2 DUP6 PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB21 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CE4 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1DF9 PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x1CE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1E22 JUMPI PUSH2 0x1E22 PUSH2 0x1EC0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1E39 JUMPI PUSH2 0x1E39 PUSH2 0x1EC0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E59 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E41 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6D0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1E7E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1E9F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1EB9 JUMPI PUSH2 0x1EB9 PUSH2 0x1EC0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1F10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x0 SIGNEXTEND DUP2 EQ PUSH2 0x1F10 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SWAP6 0xCA CALLCODE SWAP7 0x27 PUSH19 0xA31C05F7CC14B667643496F6DB0194D9C570B8 SWAP8 SWAP8 0xB8 DUP13 0xB6 0xAC PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"536:8:5:-:0;504:40;;581:7;550:38;;631:6;594:43;;-1:-1:-1;;644:51:5;;701:35;404:17459;701:35;;404:17459;701:35;;;-1:-1:-1;;;701:35:5;;;;;;;;;;:::i;:::-;;3167:491;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3293:18;;;;:7;;:18;;;;;:::i;:::-;-1:-1:-1;3321:14:5;;;;:5;;:14;;;;;:::i;:::-;-1:-1:-1;3361:1:5;3345:13;:17;;;3372:9;:13;;;3395:257;3419:9;:16;3414:2;:21;;;3395:257;;;3540:16;;;3531:26;;;;:8;:26;;;;;:32;;:39;;-1:-1:-1;;3531:39:5;3566:4;3531:39;;;3591:16;3609:13;;3584:57;;3591:16;3609:9;;3531:39;3609:13;;;;;;;;;:::i;:::-;;;;;;;3624:12;3637:2;3624:16;;;;;;;;;;:::i;:::-;;;;;;;3584:6;;;:57;;:::i;:::-;3437:4;;;;:::i;:::-;;;;3395:257;;;;3167:491;;;;404:17459;;11947:1073;12051:16;12070:13;:11;:13::i;:::-;12097:25;;;;:8;:25;;;;;:31;;;12051:32;;-1:-1:-1;12097:31:5;;12093:66;;12137:22;;-1:-1:-1;;;12137:22:5;;;;;;;;;;;12093:66;-1:-1:-1;;;;;12173:15:5;;;;;;:5;:15;;;;;;:20;12169:61;;12202:28;;-1:-1:-1;;;12202:28:5;;;;;;;;;;;12169:61;12249:28;12280:24;;;:7;:24;;;;;;;;12338:30;;;:20;;;:30;;;;12575;;12338;;12575;;12338;;12575;;;;:::i;:::-;-1:-1:-1;12635:15:5;12615:17;;;;:35;;;;12661:18;;;;:8;:18;;;;;;;;:37;;-1:-1:-1;;;;;;12661:37:5;-1:-1:-1;;;;;12661:37:5;;;;;;;12708:26;;;:44;;;12762:24;;;;:31;;-1:-1:-1;;12762:31:5;;;;;12804:15;;:5;:15;;;;;:26;;;12841:24;;;;12661:18;12841:24;;12615:17;;12841:24;:::i;:::-;;;;;;;;12892:1;12875:13;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;;12909:40:5;;12940:8;;-1:-1:-1;;;;;12909:40:5;;;12926:1;;12909:40;;12926:1;;12909:40;12992:8;12975:15;12964:49;13002:10;12964:49;;;;;;:::i;:::-;;;;;;;;12041:979;;;11947:1073;;;:::o;11681:85::-;11722:7;11750:9;;11748:11;;;;;:::i;:::-;;;;;-1:-1:-1;11748:11:5;11681:85;-1:-1:-1;11681:85:5:o;404:17459::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;404:17459:5;;;-1:-1:-1;404:17459:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:864:8;78:5;131:3;124:4;116:6;112:17;108:27;98:2;;149:1;146;139:12;98:2;178:6;172:13;204:4;228:60;244:43;284:2;244:43;:::i;:::-;228:60;:::i;:::-;310:3;334:2;329:3;322:15;362:2;357:3;353:12;346:19;;397:2;389:6;385:15;449:3;444:2;438;435:1;431:10;423:6;419:23;415:32;412:41;409:2;;;466:1;463;456:12;409:2;488:1;509;519:330;535:2;530:3;527:11;519:330;;;603:10;;-1:-1:-1;;;;;629:35:8;;626:2;;;677:1;674;667:12;626:2;706:68;770:3;765:2;751:11;743:6;739:24;735:33;706:68;:::i;:::-;694:81;;-1:-1:-1;795:12:8;;;;827;;;;557:1;548:11;519:330;;;-1:-1:-1;867:5:8;;88:790;-1:-1:-1;;;;;;;;88:790:8:o;883:497::-;937:5;990:3;983:4;975:6;971:17;967:27;957:2;;1008:1;1005;998:12;957:2;1031:13;;-1:-1:-1;;;;;1056:26:8;;1053:2;;;1085:18;;:::i;:::-;1129:55;1172:2;1153:13;;-1:-1:-1;;1149:27:8;1178:4;1145:38;1129:55;:::i;:::-;1209:2;1200:7;1193:19;1255:3;1248:4;1243:2;1235:6;1231:15;1227:26;1224:35;1221:2;;;1272:1;1269;1262:12;1221:2;1285:64;1346:2;1339:4;1330:7;1326:18;1319:4;1311:6;1307:17;1285:64;:::i;:::-;1367:7;947:433;-1:-1:-1;;;;947:433:8:o;1385:1675::-;1562:6;1570;1578;1586;1639:3;1627:9;1618:7;1614:23;1610:33;1607:2;;;1656:1;1653;1646:12;1607:2;1683:16;;-1:-1:-1;;;;;1748:14:8;;;1745:2;;;1775:1;1772;1765:12;1745:2;1798:61;1851:7;1842:6;1831:9;1827:22;1798:61;:::i;:::-;1788:71;;1878:2;1868:12;;1926:2;1915:9;1911:18;1905:25;1955:2;1945:8;1942:16;1939:2;;;1971:1;1968;1961:12;1939:2;1994:63;2049:7;2038:8;2027:9;2023:24;1994:63;:::i;:::-;1984:73;;;2103:2;2092:9;2088:18;2082:25;2132:2;2122:8;2119:16;2116:2;;;2148:1;2145;2138:12;2116:2;2171:24;;2226:4;2218:13;;2214:27;-1:-1:-1;2204:2:8;;2255:1;2252;2245:12;2204:2;2284;2278:9;2307:60;2323:43;2363:2;2323:43;:::i;2307:60::-;2389:3;2413:2;2408:3;2401:15;2441:2;2436:3;2432:12;2425:19;;2472:2;2468;2464:11;2520:7;2515:2;2509;2506:1;2502:10;2498:2;2494:19;2490:28;2487:41;2484:2;;;2541:1;2538;2531:12;2484:2;2563:1;2554:10;;2573:270;2587:2;2584:1;2581:9;2573:270;;;2645:10;;-1:-1:-1;;;;;2688:31:8;;2678:42;;2668:2;;2734:1;2731;2724:12;2668:2;2751:18;;2605:1;2598:9;;;;;2789:12;;;;2821;;2573:270;;;-1:-1:-1;2913:2:8;2898:18;;2892:25;2862:5;;-1:-1:-1;2892:25:8;-1:-1:-1;;;;2929:16:8;;;2926:2;;;2958:1;2955;2948:12;2926:2;;2981:73;3046:7;3035:8;3024:9;3020:24;2981:73;:::i;:::-;2971:83;;;1597:1463;;;;;;;:::o;3065:383::-;3214:2;3203:9;3196:21;3177:4;3246:6;3240:13;3289:6;3284:2;3273:9;3269:18;3262:34;3305:66;3364:6;3359:2;3348:9;3344:18;3339:2;3331:6;3327:15;3305:66;:::i;:::-;3432:2;3411:15;-1:-1:-1;;3407:29:8;3392:45;;;;3439:2;3388:54;;3186:262;-1:-1:-1;;3186:262:8:o;3453:275::-;3524:2;3518:9;3589:2;3570:13;;-1:-1:-1;;3566:27:8;3554:40;;-1:-1:-1;;;;;3609:34:8;;3645:22;;;3606:62;3603:2;;;3671:18;;:::i;:::-;3707:2;3700:22;3498:230;;-1:-1:-1;3498:230:8:o;3733:183::-;3793:4;-1:-1:-1;;;;;3815:30:8;;3812:2;;;3848:18;;:::i;:::-;-1:-1:-1;3893:1:8;3889:14;3905:4;3885:25;;3802:114::o;3921:128::-;3961:3;3992:1;3988:6;3985:1;3982:13;3979:2;;;3998:18;;:::i;:::-;-1:-1:-1;4034:9:8;;3969:80::o;4054:258::-;4126:1;4136:113;4150:6;4147:1;4144:13;4136:113;;;4226:11;;;4220:18;4207:11;;;4200:39;4172:2;4165:10;4136:113;;;4267:6;4264:1;4261:13;4258:2;;;4302:1;4293:6;4288:3;4284:16;4277:27;4258:2;;4107:205;;;:::o;4317:380::-;4396:1;4392:12;;;;4439;;;4460:2;;4514:4;4506:6;4502:17;4492:27;;4460:2;4567;4559:6;4556:14;4536:18;4533:38;4530:2;;;4613:10;4608:3;4604:20;4601:1;4594:31;4648:4;4645:1;4638:15;4676:4;4673:1;4666:15;4530:2;;4372:325;;;:::o;4702:135::-;4741:3;-1:-1:-1;;4762:17:8;;4759:2;;;4782:18;;:::i;:::-;-1:-1:-1;4829:1:8;4818:13;;4749:88::o;4842:175::-;4879:3;4923:4;4916:5;4912:16;4952:4;4943:7;4940:17;4937:2;;;4960:18;;:::i;:::-;5009:1;4996:15;;4887:130;-1:-1:-1;;4887:130:8:o;5022:127::-;5083:10;5078:3;5074:20;5071:1;5064:31;5114:4;5111:1;5104:15;5138:4;5135:1;5128:15;5154:127;5215:10;5210:3;5206:20;5203:1;5196:31;5246:4;5243:1;5236:15;5270:4;5267:1;5260:15;5286:127;5347:10;5342:3;5338:20;5335:1;5328:31;5378:4;5375:1;5368:15;5402:4;5399:1;5392:15;5318:95;404:17459:5;;;;;;"},"deployedBytecode":{"functionDebugData":{"@FOUNDERS_VOUCHER_240":{"entryPoint":null,"id":240,"parameterSlots":0,"returnSlots":0},"@PENDING_PERIOD_227":{"entryPoint":null,"id":227,"parameterSlots":0,"returnSlots":0},"@QUIET_ENDING_PERIOD_233":{"entryPoint":null,"id":233,"parameterSlots":0,"returnSlots":0},"@VOTING_PERIOD_230":{"entryPoint":null,"id":230,"parameterSlots":0,"returnSlots":0},"@_balanceOf_1019":{"entryPoint":4696,"id":1019,"parameterSlots":1,"returnSlots":1},"@_executeVote_1606":{"entryPoint":5355,"id":1606,"parameterSlots":2,"returnSlots":0},"@_invalidateAccount_1404":{"entryPoint":4777,"id":1404,"parameterSlots":1,"returnSlots":0},"@_invalidateVote_1661":{"entryPoint":5122,"id":1661,"parameterSlots":3,"returnSlots":0},"@_msgSender_185":{"entryPoint":null,"id":185,"parameterSlots":0,"returnSlots":1},"@_nEntries_311":{"entryPoint":null,"id":311,"parameterSlots":0,"returnSlots":0},"@_ownerOf_1045":{"entryPoint":null,"id":1045,"parameterSlots":1,"returnSlots":1},"@_tokenIdOf_980":{"entryPoint":null,"id":980,"parameterSlots":1,"returnSlots":1},"@_totalSupply_783":{"entryPoint":null,"id":783,"parameterSlots":0,"returnSlots":1},"@_vouch_1346":{"entryPoint":4276,"id":1346,"parameterSlots":3,"returnSlots":0},"@approve_1714":{"entryPoint":null,"id":1714,"parameterSlots":2,"returnSlots":0},"@balanceOf_993":{"entryPoint":2585,"id":993,"parameterSlots":1,"returnSlots":1},"@canVote_911":{"entryPoint":4072,"id":911,"parameterSlots":2,"returnSlots":1},"@challenge_586":{"entryPoint":2984,"id":586,"parameterSlots":1,"returnSlots":0},"@div_3792":{"entryPoint":5980,"id":3792,"parameterSlots":2,"returnSlots":1},"@executeVote_716":{"entryPoint":4253,"id":716,"parameterSlots":1,"returnSlots":0},"@getAccount_1223":{"entryPoint":null,"id":1223,"parameterSlots":1,"returnSlots":1},"@getApproved_1737":{"entryPoint":null,"id":1737,"parameterSlots":1,"returnSlots":1},"@getChallengeVote_1100":{"entryPoint":3473,"id":1100,"parameterSlots":2,"returnSlots":1},"@getChallenge_1076":{"entryPoint":2003,"id":1076,"parameterSlots":1,"returnSlots":6},"@getCurrentChallenge_514":{"entryPoint":4995,"id":514,"parameterSlots":1,"returnSlots":1},"@getSpecificChallengeVote_1169":{"entryPoint":2776,"id":1169,"parameterSlots":3,"returnSlots":1},"@getSpecificChallenge_1143":{"entryPoint":2434,"id":1143,"parameterSlots":2,"returnSlots":6},"@getTokenPersonCid_806":{"entryPoint":2171,"id":806,"parameterSlots":1,"returnSlots":1},"@getTokenVouch_1210":{"entryPoint":1750,"id":1210,"parameterSlots":1,"returnSlots":1},"@getTotalVoters_848":{"entryPoint":2366,"id":848,"parameterSlots":1,"returnSlots":1},"@getVoucherVouchesNumber_1187":{"entryPoint":null,"id":1187,"parameterSlots":1,"returnSlots":1},"@invalidateInvalidVoucher_745":{"entryPoint":2871,"id":745,"parameterSlots":1,"returnSlots":0},"@invalidateVote_766":{"entryPoint":3616,"id":766,"parameterSlots":2,"returnSlots":0},"@isApprovedForAll_1750":{"entryPoint":null,"id":1750,"parameterSlots":2,"returnSlots":1},"@isSolidified_956":{"entryPoint":2626,"id":956,"parameterSlots":1,"returnSlots":1},"@mulDivFixedPoint_3339":{"entryPoint":6001,"id":3339,"parameterSlots":2,"returnSlots":1},"@mulDiv_3287":{"entryPoint":6200,"id":3287,"parameterSlots":3,"returnSlots":1},"@mul_4141":{"entryPoint":5968,"id":4141,"parameterSlots":2,"returnSlots":1},"@name_1759":{"entryPoint":1497,"id":1759,"parameterSlots":0,"returnSlots":1},"@nextTokenId_1232":{"entryPoint":5941,"id":1232,"parameterSlots":0,"returnSlots":1},"@ownerOf_1032":{"entryPoint":2554,"id":1032,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1683":{"entryPoint":null,"id":1683,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_1694":{"entryPoint":null,"id":1694,"parameterSlots":3,"returnSlots":0},"@setApprovalForAll_1723":{"entryPoint":null,"id":1723,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1670":{"entryPoint":null,"id":1670,"parameterSlots":1,"returnSlots":1},"@symbol_1768":{"entryPoint":2856,"id":1768,"parameterSlots":0,"returnSlots":1},"@tokenIdOf_968":{"entryPoint":2596,"id":968,"parameterSlots":1,"returnSlots":1},"@tokenURI_1803":{"entryPoint":3241,"id":1803,"parameterSlots":1,"returnSlots":1},"@totalSupply_775":{"entryPoint":1987,"id":775,"parameterSlots":0,"returnSlots":1},"@transferFrom_1705":{"entryPoint":null,"id":1705,"parameterSlots":3,"returnSlots":0},"@vote_698":{"entryPoint":3640,"id":698,"parameterSlots":2,"returnSlots":0},"@vouch_476":{"entryPoint":1643,"id":476,"parameterSlots":3,"returnSlots":0},"abi_decode_address":{"entryPoint":6559,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":6587,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":6660,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6687,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6738,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":6798,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6909,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_calldata_ptr":{"entryPoint":6964,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7047,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7089,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_int8_fromMemory":{"entryPoint":7131,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7160,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_int8":{"entryPoint":7185,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":7222,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_int8t_uint256t_uint256t_bool_fromMemory":{"entryPoint":7256,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint256t_uint256t_uint256":{"entryPoint":7352,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_string":{"entryPoint":7440,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":7396,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7468,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int8__to_t_int8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7626,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Account_$269_memory_ptr__to_t_struct$_Account_$269_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Vouch_$252_memory_ptr__to_t_struct$_Vouch_$252_memory_ptr__fromStack_reversed":{"entryPoint":7645,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_int8__to_t_uint256_t_int8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_int8_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_int8_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7695,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7719,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":7742,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7786,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":7845,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7872,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":7894,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7916,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bool":{"entryPoint":7938,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_int8":{"entryPoint":7955,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12041:8","statements":[{"nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:8","statements":[{"nodeType":"YulAssignment","src":"73:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:8"},"nodeType":"YulFunctionCall","src":"82:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:8"}]},{"body":{"nodeType":"YulBlock","src":"165:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:8"},"nodeType":"YulFunctionCall","src":"167:12:8"},"nodeType":"YulExpressionStatement","src":"167:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:8","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:8"},"nodeType":"YulFunctionCall","src":"146:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:8"},"nodeType":"YulFunctionCall","src":"142:19:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:8"},"nodeType":"YulFunctionCall","src":"131:31:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:8"},"nodeType":"YulFunctionCall","src":"121:42:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:8"},"nodeType":"YulFunctionCall","src":"114:50:8"},"nodeType":"YulIf","src":"111:2:8"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:8","type":""}],"src":"14:173:8"},{"body":{"nodeType":"YulBlock","src":"264:275:8","statements":[{"body":{"nodeType":"YulBlock","src":"313:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"322:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"325:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"315:6:8"},"nodeType":"YulFunctionCall","src":"315:12:8"},"nodeType":"YulExpressionStatement","src":"315:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"292:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"300:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"288:3:8"},"nodeType":"YulFunctionCall","src":"288:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"307:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"284:3:8"},"nodeType":"YulFunctionCall","src":"284:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"277:6:8"},"nodeType":"YulFunctionCall","src":"277:35:8"},"nodeType":"YulIf","src":"274:2:8"},{"nodeType":"YulAssignment","src":"338:30:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"361:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"348:12:8"},"nodeType":"YulFunctionCall","src":"348:20:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"338:6:8"}]},{"body":{"nodeType":"YulBlock","src":"411:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"420:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"423:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"413:6:8"},"nodeType":"YulFunctionCall","src":"413:12:8"},"nodeType":"YulExpressionStatement","src":"413:12:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"383:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"391:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"380:2:8"},"nodeType":"YulFunctionCall","src":"380:30:8"},"nodeType":"YulIf","src":"377:2:8"},{"nodeType":"YulAssignment","src":"436:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"452:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"460:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"448:3:8"},"nodeType":"YulFunctionCall","src":"448:17:8"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"436:8:8"}]},{"body":{"nodeType":"YulBlock","src":"517:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:8"},"nodeType":"YulFunctionCall","src":"519:12:8"},"nodeType":"YulExpressionStatement","src":"519:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"488:6:8"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"484:3:8"},"nodeType":"YulFunctionCall","src":"484:19:8"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"480:3:8"},"nodeType":"YulFunctionCall","src":"480:30:8"},{"name":"end","nodeType":"YulIdentifier","src":"512:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"477:2:8"},"nodeType":"YulFunctionCall","src":"477:39:8"},"nodeType":"YulIf","src":"474:2:8"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"227:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"235:3:8","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"243:8:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"253:6:8","type":""}],"src":"192:347:8"},{"body":{"nodeType":"YulBlock","src":"614:116:8","statements":[{"body":{"nodeType":"YulBlock","src":"660:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"669:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"672:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"662:6:8"},"nodeType":"YulFunctionCall","src":"662:12:8"},"nodeType":"YulExpressionStatement","src":"662:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"635:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"644:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"631:3:8"},"nodeType":"YulFunctionCall","src":"631:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"656:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"627:3:8"},"nodeType":"YulFunctionCall","src":"627:32:8"},"nodeType":"YulIf","src":"624:2:8"},{"nodeType":"YulAssignment","src":"685:39:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"714:9:8"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"695:18:8"},"nodeType":"YulFunctionCall","src":"695:29:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"685:6:8"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"580:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"591:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"603:6:8","type":""}],"src":"544:186:8"},{"body":{"nodeType":"YulBlock","src":"822:173:8","statements":[{"body":{"nodeType":"YulBlock","src":"868:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"877:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"880:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"870:6:8"},"nodeType":"YulFunctionCall","src":"870:12:8"},"nodeType":"YulExpressionStatement","src":"870:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"843:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"852:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"839:3:8"},"nodeType":"YulFunctionCall","src":"839:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"864:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"835:3:8"},"nodeType":"YulFunctionCall","src":"835:32:8"},"nodeType":"YulIf","src":"832:2:8"},{"nodeType":"YulAssignment","src":"893:39:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"922:9:8"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"903:18:8"},"nodeType":"YulFunctionCall","src":"903:29:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"893:6:8"}]},{"nodeType":"YulAssignment","src":"941:48:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"974:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"970:3:8"},"nodeType":"YulFunctionCall","src":"970:18:8"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"951:18:8"},"nodeType":"YulFunctionCall","src":"951:38:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"941:6:8"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"780:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"791:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"803:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"811:6:8","type":""}],"src":"735:260:8"},{"body":{"nodeType":"YulBlock","src":"1104:224:8","statements":[{"body":{"nodeType":"YulBlock","src":"1150:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1159:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1162:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1152:6:8"},"nodeType":"YulFunctionCall","src":"1152:12:8"},"nodeType":"YulExpressionStatement","src":"1152:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1125:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"1134:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1121:3:8"},"nodeType":"YulFunctionCall","src":"1121:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"1146:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1117:3:8"},"nodeType":"YulFunctionCall","src":"1117:32:8"},"nodeType":"YulIf","src":"1114:2:8"},{"nodeType":"YulAssignment","src":"1175:39:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1204:9:8"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1185:18:8"},"nodeType":"YulFunctionCall","src":"1185:29:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1175:6:8"}]},{"nodeType":"YulAssignment","src":"1223:48:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1256:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1267:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1252:3:8"},"nodeType":"YulFunctionCall","src":"1252:18:8"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1233:18:8"},"nodeType":"YulFunctionCall","src":"1233:38:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1223:6:8"}]},{"nodeType":"YulAssignment","src":"1280:42:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1318:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:8"},"nodeType":"YulFunctionCall","src":"1303:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1290:12:8"},"nodeType":"YulFunctionCall","src":"1290:32:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1280:6:8"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1054:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1065:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1077:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1085:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1093:6:8","type":""}],"src":"1000:328:8"},{"body":{"nodeType":"YulBlock","src":"1473:486:8","statements":[{"body":{"nodeType":"YulBlock","src":"1520:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1529:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1532:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1522:6:8"},"nodeType":"YulFunctionCall","src":"1522:12:8"},"nodeType":"YulExpressionStatement","src":"1522:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1494:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"1503:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1490:3:8"},"nodeType":"YulFunctionCall","src":"1490:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"1515:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1486:3:8"},"nodeType":"YulFunctionCall","src":"1486:33:8"},"nodeType":"YulIf","src":"1483:2:8"},{"nodeType":"YulAssignment","src":"1545:39:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1574:9:8"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1555:18:8"},"nodeType":"YulFunctionCall","src":"1555:29:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1545:6:8"}]},{"nodeType":"YulAssignment","src":"1593:48:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1637:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:8"},"nodeType":"YulFunctionCall","src":"1622:18:8"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1603:18:8"},"nodeType":"YulFunctionCall","src":"1603:38:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1593:6:8"}]},{"nodeType":"YulAssignment","src":"1650:42:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1677:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1688:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1673:3:8"},"nodeType":"YulFunctionCall","src":"1673:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1660:12:8"},"nodeType":"YulFunctionCall","src":"1660:32:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1650:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"1701:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1732:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1743:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1728:3:8"},"nodeType":"YulFunctionCall","src":"1728:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1715:12:8"},"nodeType":"YulFunctionCall","src":"1715:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1705:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1790:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1799:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1802:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1792:6:8"},"nodeType":"YulFunctionCall","src":"1792:12:8"},"nodeType":"YulExpressionStatement","src":"1792:12:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1762:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1770:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1759:2:8"},"nodeType":"YulFunctionCall","src":"1759:30:8"},"nodeType":"YulIf","src":"1756:2:8"},{"nodeType":"YulVariableDeclaration","src":"1815:84:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1871:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"1882:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1867:3:8"},"nodeType":"YulFunctionCall","src":"1867:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1891:7:8"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1841:25:8"},"nodeType":"YulFunctionCall","src":"1841:58:8"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"1819:8:8","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"1829:8:8","type":""}]},{"nodeType":"YulAssignment","src":"1908:18:8","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"1918:8:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1908:6:8"}]},{"nodeType":"YulAssignment","src":"1935:18:8","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"1945:8:8"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1935:6:8"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1407:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1418:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1430:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1438:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1446:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1454:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1462:6:8","type":""}],"src":"1333:626:8"},{"body":{"nodeType":"YulBlock","src":"2048:231:8","statements":[{"body":{"nodeType":"YulBlock","src":"2094:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2103:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2106:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2096:6:8"},"nodeType":"YulFunctionCall","src":"2096:12:8"},"nodeType":"YulExpressionStatement","src":"2096:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2069:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2078:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2065:3:8"},"nodeType":"YulFunctionCall","src":"2065:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"2090:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2061:3:8"},"nodeType":"YulFunctionCall","src":"2061:32:8"},"nodeType":"YulIf","src":"2058:2:8"},{"nodeType":"YulAssignment","src":"2119:39:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2148:9:8"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2129:18:8"},"nodeType":"YulFunctionCall","src":"2129:29:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2119:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"2167:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2197:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2208:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2193:3:8"},"nodeType":"YulFunctionCall","src":"2193:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2180:12:8"},"nodeType":"YulFunctionCall","src":"2180:32:8"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2171:5:8","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2243:5:8"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"2221:21:8"},"nodeType":"YulFunctionCall","src":"2221:28:8"},"nodeType":"YulExpressionStatement","src":"2221:28:8"},{"nodeType":"YulAssignment","src":"2258:15:8","value":{"name":"value","nodeType":"YulIdentifier","src":"2268:5:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2258:6:8"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2006:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2017:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2029:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2037:6:8","type":""}],"src":"1964:315:8"},{"body":{"nodeType":"YulBlock","src":"2391:377:8","statements":[{"body":{"nodeType":"YulBlock","src":"2437:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2446:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2449:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2439:6:8"},"nodeType":"YulFunctionCall","src":"2439:12:8"},"nodeType":"YulExpressionStatement","src":"2439:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2412:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2421:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2408:3:8"},"nodeType":"YulFunctionCall","src":"2408:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"2433:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2404:3:8"},"nodeType":"YulFunctionCall","src":"2404:32:8"},"nodeType":"YulIf","src":"2401:2:8"},{"nodeType":"YulAssignment","src":"2462:39:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2491:9:8"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2472:18:8"},"nodeType":"YulFunctionCall","src":"2472:29:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2462:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"2510:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2541:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2552:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2537:3:8"},"nodeType":"YulFunctionCall","src":"2537:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2524:12:8"},"nodeType":"YulFunctionCall","src":"2524:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2514:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2599:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2608:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2611:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2601:6:8"},"nodeType":"YulFunctionCall","src":"2601:12:8"},"nodeType":"YulExpressionStatement","src":"2601:12:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2571:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2579:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2568:2:8"},"nodeType":"YulFunctionCall","src":"2568:30:8"},"nodeType":"YulIf","src":"2565:2:8"},{"nodeType":"YulVariableDeclaration","src":"2624:84:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2680:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"2691:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2676:3:8"},"nodeType":"YulFunctionCall","src":"2676:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2700:7:8"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"2650:25:8"},"nodeType":"YulFunctionCall","src":"2650:58:8"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"2628:8:8","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"2638:8:8","type":""}]},{"nodeType":"YulAssignment","src":"2717:18:8","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"2727:8:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2717:6:8"}]},{"nodeType":"YulAssignment","src":"2744:18:8","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"2754:8:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2744:6:8"}]}]},"name":"abi_decode_tuple_t_addresst_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2341:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2352:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2364:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2372:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2380:6:8","type":""}],"src":"2284:484:8"},{"body":{"nodeType":"YulBlock","src":"2860:167:8","statements":[{"body":{"nodeType":"YulBlock","src":"2906:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2915:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2918:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2908:6:8"},"nodeType":"YulFunctionCall","src":"2908:12:8"},"nodeType":"YulExpressionStatement","src":"2908:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2881:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2890:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2877:3:8"},"nodeType":"YulFunctionCall","src":"2877:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"2902:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2873:3:8"},"nodeType":"YulFunctionCall","src":"2873:32:8"},"nodeType":"YulIf","src":"2870:2:8"},{"nodeType":"YulAssignment","src":"2931:39:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2960:9:8"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2941:18:8"},"nodeType":"YulFunctionCall","src":"2941:29:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2931:6:8"}]},{"nodeType":"YulAssignment","src":"2979:42:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3006:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3017:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3002:3:8"},"nodeType":"YulFunctionCall","src":"3002:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2989:12:8"},"nodeType":"YulFunctionCall","src":"2989:32:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2979:6:8"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2818:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2829:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2841:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2849:6:8","type":""}],"src":"2773:254:8"},{"body":{"nodeType":"YulBlock","src":"3101:217:8","statements":[{"body":{"nodeType":"YulBlock","src":"3147:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3156:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3159:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3149:6:8"},"nodeType":"YulFunctionCall","src":"3149:12:8"},"nodeType":"YulExpressionStatement","src":"3149:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3122:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3131:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3118:3:8"},"nodeType":"YulFunctionCall","src":"3118:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"3143:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3114:3:8"},"nodeType":"YulFunctionCall","src":"3114:32:8"},"nodeType":"YulIf","src":"3111:2:8"},{"nodeType":"YulVariableDeclaration","src":"3172:36:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3198:9:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3185:12:8"},"nodeType":"YulFunctionCall","src":"3185:23:8"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3176:5:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"3272:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3281:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3284:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3274:6:8"},"nodeType":"YulFunctionCall","src":"3274:12:8"},"nodeType":"YulExpressionStatement","src":"3274:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3230:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3241:5:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3252:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3257:10:8","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3248:3:8"},"nodeType":"YulFunctionCall","src":"3248:20:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3237:3:8"},"nodeType":"YulFunctionCall","src":"3237:32:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3227:2:8"},"nodeType":"YulFunctionCall","src":"3227:43:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3220:6:8"},"nodeType":"YulFunctionCall","src":"3220:51:8"},"nodeType":"YulIf","src":"3217:2:8"},{"nodeType":"YulAssignment","src":"3297:15:8","value":{"name":"value","nodeType":"YulIdentifier","src":"3307:5:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3297:6:8"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3067:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3078:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3090:6:8","type":""}],"src":"3032:286:8"},{"body":{"nodeType":"YulBlock","src":"3401:167:8","statements":[{"body":{"nodeType":"YulBlock","src":"3447:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3456:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3459:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3449:6:8"},"nodeType":"YulFunctionCall","src":"3449:12:8"},"nodeType":"YulExpressionStatement","src":"3449:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3422:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3431:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3418:3:8"},"nodeType":"YulFunctionCall","src":"3418:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"3443:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3414:3:8"},"nodeType":"YulFunctionCall","src":"3414:32:8"},"nodeType":"YulIf","src":"3411:2:8"},{"nodeType":"YulVariableDeclaration","src":"3472:29:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3491:9:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3485:5:8"},"nodeType":"YulFunctionCall","src":"3485:16:8"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3476:5:8","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3532:5:8"}],"functionName":{"name":"validator_revert_int8","nodeType":"YulIdentifier","src":"3510:21:8"},"nodeType":"YulFunctionCall","src":"3510:28:8"},"nodeType":"YulExpressionStatement","src":"3510:28:8"},{"nodeType":"YulAssignment","src":"3547:15:8","value":{"name":"value","nodeType":"YulIdentifier","src":"3557:5:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3547:6:8"}]}]},"name":"abi_decode_tuple_t_int8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3367:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3378:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3390:6:8","type":""}],"src":"3323:245:8"},{"body":{"nodeType":"YulBlock","src":"3643:110:8","statements":[{"body":{"nodeType":"YulBlock","src":"3689:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3698:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3701:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3691:6:8"},"nodeType":"YulFunctionCall","src":"3691:12:8"},"nodeType":"YulExpressionStatement","src":"3691:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3664:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3673:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3660:3:8"},"nodeType":"YulFunctionCall","src":"3660:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"3685:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3656:3:8"},"nodeType":"YulFunctionCall","src":"3656:32:8"},"nodeType":"YulIf","src":"3653:2:8"},{"nodeType":"YulAssignment","src":"3714:33:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3737:9:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3724:12:8"},"nodeType":"YulFunctionCall","src":"3724:23:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3714:6:8"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3609:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3620:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3632:6:8","type":""}],"src":"3573:180:8"},{"body":{"nodeType":"YulBlock","src":"3842:225:8","statements":[{"body":{"nodeType":"YulBlock","src":"3888:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3897:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3900:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3890:6:8"},"nodeType":"YulFunctionCall","src":"3890:12:8"},"nodeType":"YulExpressionStatement","src":"3890:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3863:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3872:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3859:3:8"},"nodeType":"YulFunctionCall","src":"3859:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"3884:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3855:3:8"},"nodeType":"YulFunctionCall","src":"3855:32:8"},"nodeType":"YulIf","src":"3852:2:8"},{"nodeType":"YulAssignment","src":"3913:33:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3936:9:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3923:12:8"},"nodeType":"YulFunctionCall","src":"3923:23:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3913:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"3955:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3985:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3996:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3981:3:8"},"nodeType":"YulFunctionCall","src":"3981:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3968:12:8"},"nodeType":"YulFunctionCall","src":"3968:32:8"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3959:5:8","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4031:5:8"}],"functionName":{"name":"validator_revert_int8","nodeType":"YulIdentifier","src":"4009:21:8"},"nodeType":"YulFunctionCall","src":"4009:28:8"},"nodeType":"YulExpressionStatement","src":"4009:28:8"},{"nodeType":"YulAssignment","src":"4046:15:8","value":{"name":"value","nodeType":"YulIdentifier","src":"4056:5:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4046:6:8"}]}]},"name":"abi_decode_tuple_t_uint256t_int8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3800:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3811:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3823:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3831:6:8","type":""}],"src":"3758:309:8"},{"body":{"nodeType":"YulBlock","src":"4159:161:8","statements":[{"body":{"nodeType":"YulBlock","src":"4205:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4214:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4217:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4207:6:8"},"nodeType":"YulFunctionCall","src":"4207:12:8"},"nodeType":"YulExpressionStatement","src":"4207:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4180:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"4189:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4176:3:8"},"nodeType":"YulFunctionCall","src":"4176:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"4201:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4172:3:8"},"nodeType":"YulFunctionCall","src":"4172:32:8"},"nodeType":"YulIf","src":"4169:2:8"},{"nodeType":"YulAssignment","src":"4230:33:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4253:9:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4240:12:8"},"nodeType":"YulFunctionCall","src":"4240:23:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4230:6:8"}]},{"nodeType":"YulAssignment","src":"4272:42:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4299:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4310:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4295:3:8"},"nodeType":"YulFunctionCall","src":"4295:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4282:12:8"},"nodeType":"YulFunctionCall","src":"4282:32:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4272:6:8"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4117:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4128:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4140:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4148:6:8","type":""}],"src":"4072:248:8"},{"body":{"nodeType":"YulBlock","src":"4485:460:8","statements":[{"body":{"nodeType":"YulBlock","src":"4532:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4541:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4544:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4534:6:8"},"nodeType":"YulFunctionCall","src":"4534:12:8"},"nodeType":"YulExpressionStatement","src":"4534:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4506:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"4515:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4502:3:8"},"nodeType":"YulFunctionCall","src":"4502:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"4527:3:8","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4498:3:8"},"nodeType":"YulFunctionCall","src":"4498:33:8"},"nodeType":"YulIf","src":"4495:2:8"},{"nodeType":"YulAssignment","src":"4557:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4573:9:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4567:5:8"},"nodeType":"YulFunctionCall","src":"4567:16:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4557:6:8"}]},{"nodeType":"YulAssignment","src":"4592:35:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4612:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4623:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:8"},"nodeType":"YulFunctionCall","src":"4608:18:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:8"},"nodeType":"YulFunctionCall","src":"4602:25:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4592:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"4636:38:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4659:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4670:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4655:3:8"},"nodeType":"YulFunctionCall","src":"4655:18:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4649:5:8"},"nodeType":"YulFunctionCall","src":"4649:25:8"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4640:5:8","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4705:5:8"}],"functionName":{"name":"validator_revert_int8","nodeType":"YulIdentifier","src":"4683:21:8"},"nodeType":"YulFunctionCall","src":"4683:28:8"},"nodeType":"YulExpressionStatement","src":"4683:28:8"},{"nodeType":"YulAssignment","src":"4720:15:8","value":{"name":"value","nodeType":"YulIdentifier","src":"4730:5:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4720:6:8"}]},{"nodeType":"YulAssignment","src":"4744:35:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4764:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4775:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4760:3:8"},"nodeType":"YulFunctionCall","src":"4760:18:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4754:5:8"},"nodeType":"YulFunctionCall","src":"4754:25:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4744:6:8"}]},{"nodeType":"YulAssignment","src":"4788:36:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4808:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4819:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4804:3:8"},"nodeType":"YulFunctionCall","src":"4804:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4798:5:8"},"nodeType":"YulFunctionCall","src":"4798:26:8"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4788:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"4833:41:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4858:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4869:3:8","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4854:3:8"},"nodeType":"YulFunctionCall","src":"4854:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4848:5:8"},"nodeType":"YulFunctionCall","src":"4848:26:8"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4837:7:8","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4905:7:8"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"4883:21:8"},"nodeType":"YulFunctionCall","src":"4883:30:8"},"nodeType":"YulExpressionStatement","src":"4883:30:8"},{"nodeType":"YulAssignment","src":"4922:17:8","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4932:7:8"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4922:6:8"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_int8t_uint256t_uint256t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4411:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4422:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4434:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4442:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4450:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4458:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4466:6:8","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4474:6:8","type":""}],"src":"4325:620:8"},{"body":{"nodeType":"YulBlock","src":"5054:212:8","statements":[{"body":{"nodeType":"YulBlock","src":"5100:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5109:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5112:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5102:6:8"},"nodeType":"YulFunctionCall","src":"5102:12:8"},"nodeType":"YulExpressionStatement","src":"5102:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5075:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"5084:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5071:3:8"},"nodeType":"YulFunctionCall","src":"5071:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"5096:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5067:3:8"},"nodeType":"YulFunctionCall","src":"5067:32:8"},"nodeType":"YulIf","src":"5064:2:8"},{"nodeType":"YulAssignment","src":"5125:33:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5148:9:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5135:12:8"},"nodeType":"YulFunctionCall","src":"5135:23:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5125:6:8"}]},{"nodeType":"YulAssignment","src":"5167:42:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5194:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5205:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5190:3:8"},"nodeType":"YulFunctionCall","src":"5190:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5177:12:8"},"nodeType":"YulFunctionCall","src":"5177:32:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5167:6:8"}]},{"nodeType":"YulAssignment","src":"5218:42:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5245:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5256:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5241:3:8"},"nodeType":"YulFunctionCall","src":"5241:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5228:12:8"},"nodeType":"YulFunctionCall","src":"5228:32:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5218:6:8"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5004:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5015:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5027:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5035:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5043:6:8","type":""}],"src":"4950:316:8"},{"body":{"nodeType":"YulBlock","src":"5331:208:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5341:26:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5361:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5355:5:8"},"nodeType":"YulFunctionCall","src":"5355:12:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5345:6:8","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5383:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"5388:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5376:6:8"},"nodeType":"YulFunctionCall","src":"5376:19:8"},"nodeType":"YulExpressionStatement","src":"5376:19:8"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5430:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"5437:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5426:3:8"},"nodeType":"YulFunctionCall","src":"5426:16:8"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5448:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"5453:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5444:3:8"},"nodeType":"YulFunctionCall","src":"5444:14:8"},{"name":"length","nodeType":"YulIdentifier","src":"5460:6:8"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5404:21:8"},"nodeType":"YulFunctionCall","src":"5404:63:8"},"nodeType":"YulExpressionStatement","src":"5404:63:8"},{"nodeType":"YulAssignment","src":"5476:57:8","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5491:3:8"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5504:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"5512:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5500:3:8"},"nodeType":"YulFunctionCall","src":"5500:15:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5521:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5517:3:8"},"nodeType":"YulFunctionCall","src":"5517:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5496:3:8"},"nodeType":"YulFunctionCall","src":"5496:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5487:3:8"},"nodeType":"YulFunctionCall","src":"5487:39:8"},{"kind":"number","nodeType":"YulLiteral","src":"5528:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5483:3:8"},"nodeType":"YulFunctionCall","src":"5483:50:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5476:3:8"}]}]},"name":"abi_encode_string_to_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5308:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5315:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5323:3:8","type":""}],"src":"5271:268:8"},{"body":{"nodeType":"YulBlock","src":"5594:135:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5604:26:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5624:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5618:5:8"},"nodeType":"YulFunctionCall","src":"5618:12:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5608:6:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5665:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"5672:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5661:3:8"},"nodeType":"YulFunctionCall","src":"5661:16:8"},{"name":"pos","nodeType":"YulIdentifier","src":"5679:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"5684:6:8"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5639:21:8"},"nodeType":"YulFunctionCall","src":"5639:52:8"},"nodeType":"YulExpressionStatement","src":"5639:52:8"},{"nodeType":"YulAssignment","src":"5700:23:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5711:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"5716:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5707:3:8"},"nodeType":"YulFunctionCall","src":"5707:16:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5700:3:8"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5571:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5578:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5586:3:8","type":""}],"src":"5544:185:8"},{"body":{"nodeType":"YulBlock","src":"5918:990:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5928:12:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5939:1:8","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"5932:3:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5949:30:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5972:6:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5966:5:8"},"nodeType":"YulFunctionCall","src":"5966:13:8"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"5953:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5988:17:8","value":{"name":"ret","nodeType":"YulIdentifier","src":"6002:3:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5992:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6014:11:8","value":{"kind":"number","nodeType":"YulLiteral","src":"6024:1:8","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6018:2:8","type":""}]},{"nodeType":"YulAssignment","src":"6034:28:8","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6048:2:8"},{"name":"slotValue","nodeType":"YulIdentifier","src":"6052:9:8"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6044:3:8"},"nodeType":"YulFunctionCall","src":"6044:18:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6034:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"6071:44:8","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"6101:9:8"},{"name":"_1","nodeType":"YulIdentifier","src":"6112:2:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6097:3:8"},"nodeType":"YulFunctionCall","src":"6097:18:8"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6075:18:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"6154:31:8","statements":[{"nodeType":"YulAssignment","src":"6156:27:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6170:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6178:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6166:3:8"},"nodeType":"YulFunctionCall","src":"6166:17:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6156:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6134:18:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6127:6:8"},"nodeType":"YulFunctionCall","src":"6127:26:8"},"nodeType":"YulIf","src":"6124:2:8"},{"nodeType":"YulVariableDeclaration","src":"6194:12:8","value":{"kind":"number","nodeType":"YulLiteral","src":"6204:2:8","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6198:2:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"6265:115:8","statements":[{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"6286:3:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6295:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6300:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6291:3:8"},"nodeType":"YulFunctionCall","src":"6291:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6279:6:8"},"nodeType":"YulFunctionCall","src":"6279:33:8"},"nodeType":"YulExpressionStatement","src":"6279:33:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6332:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6335:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6325:6:8"},"nodeType":"YulFunctionCall","src":"6325:15:8"},"nodeType":"YulExpressionStatement","src":"6325:15:8"},{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"6360:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"6365:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6353:6:8"},"nodeType":"YulFunctionCall","src":"6353:17:8"},"nodeType":"YulExpressionStatement","src":"6353:17:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6221:18:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6244:6:8"},{"name":"_2","nodeType":"YulIdentifier","src":"6252:2:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6241:2:8"},"nodeType":"YulFunctionCall","src":"6241:14:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6218:2:8"},"nodeType":"YulFunctionCall","src":"6218:38:8"},"nodeType":"YulIf","src":"6215:2:8"},{"cases":[{"body":{"nodeType":"YulBlock","src":"6430:97:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6451:3:8"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"6460:9:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6475:3:8","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6471:3:8"},"nodeType":"YulFunctionCall","src":"6471:8:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6456:3:8"},"nodeType":"YulFunctionCall","src":"6456:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6444:6:8"},"nodeType":"YulFunctionCall","src":"6444:37:8"},"nodeType":"YulExpressionStatement","src":"6444:37:8"},{"nodeType":"YulAssignment","src":"6494:23:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6505:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"6510:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6501:3:8"},"nodeType":"YulFunctionCall","src":"6501:16:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6494:3:8"}]}]},"nodeType":"YulCase","src":"6423:104:8","value":{"kind":"number","nodeType":"YulLiteral","src":"6428:1:8","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"6543:313:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6557:52:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6602:6:8"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"6572:29:8"},"nodeType":"YulFunctionCall","src":"6572:37:8"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"6561:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6622:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"6631:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6626:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"6699:111:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6728:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"6733:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6724:3:8"},"nodeType":"YulFunctionCall","src":"6724:11:8"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"6743:7:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6737:5:8"},"nodeType":"YulFunctionCall","src":"6737:14:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6717:6:8"},"nodeType":"YulFunctionCall","src":"6717:35:8"},"nodeType":"YulExpressionStatement","src":"6717:35:8"},{"nodeType":"YulAssignment","src":"6769:27:8","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"6784:7:8"},{"name":"_1","nodeType":"YulIdentifier","src":"6793:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6780:3:8"},"nodeType":"YulFunctionCall","src":"6780:16:8"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"6769:7:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6656:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"6659:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6653:2:8"},"nodeType":"YulFunctionCall","src":"6653:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6667:19:8","statements":[{"nodeType":"YulAssignment","src":"6669:15:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6678:1:8"},{"name":"_2","nodeType":"YulIdentifier","src":"6681:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6674:3:8"},"nodeType":"YulFunctionCall","src":"6674:10:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6669:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"6649:3:8","statements":[]},"src":"6645:165:8"},{"nodeType":"YulAssignment","src":"6823:23:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6834:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"6839:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6830:3:8"},"nodeType":"YulFunctionCall","src":"6830:16:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6823:3:8"}]}]},"nodeType":"YulCase","src":"6536:320:8","value":{"kind":"number","nodeType":"YulLiteral","src":"6541:1:8","type":"","value":"1"}}],"expression":{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6396:18:8"},"nodeType":"YulSwitch","src":"6389:467:8"},{"nodeType":"YulAssignment","src":"6865:37:8","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6890:6:8"},{"name":"ret","nodeType":"YulIdentifier","src":"6898:3:8"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"6872:17:8"},"nodeType":"YulFunctionCall","src":"6872:30:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6865:3:8"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5886:3:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5891:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5899:6:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5910:3:8","type":""}],"src":"5734:1174:8"},{"body":{"nodeType":"YulBlock","src":"7014:102:8","statements":[{"nodeType":"YulAssignment","src":"7024:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7036:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7047:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7032:3:8"},"nodeType":"YulFunctionCall","src":"7032:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7024:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7066:9:8"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7081:6:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7097:3:8","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7102:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7093:3:8"},"nodeType":"YulFunctionCall","src":"7093:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"7106:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7089:3:8"},"nodeType":"YulFunctionCall","src":"7089:19:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7077:3:8"},"nodeType":"YulFunctionCall","src":"7077:32:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7059:6:8"},"nodeType":"YulFunctionCall","src":"7059:51:8"},"nodeType":"YulExpressionStatement","src":"7059:51:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6983:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6994:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7005:4:8","type":""}],"src":"6913:203:8"},{"body":{"nodeType":"YulBlock","src":"7216:92:8","statements":[{"nodeType":"YulAssignment","src":"7226:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7238:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7249:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7234:3:8"},"nodeType":"YulFunctionCall","src":"7234:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7226:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7268:9:8"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7293:6:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7286:6:8"},"nodeType":"YulFunctionCall","src":"7286:14:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7279:6:8"},"nodeType":"YulFunctionCall","src":"7279:22:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7261:6:8"},"nodeType":"YulFunctionCall","src":"7261:41:8"},"nodeType":"YulExpressionStatement","src":"7261:41:8"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7185:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7196:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7207:4:8","type":""}],"src":"7121:187:8"},{"body":{"nodeType":"YulBlock","src":"7408:91:8","statements":[{"nodeType":"YulAssignment","src":"7418:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7430:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7441:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7426:3:8"},"nodeType":"YulFunctionCall","src":"7426:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7418:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7460:9:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7482:1:8","type":"","value":"0"},{"name":"value0","nodeType":"YulIdentifier","src":"7485:6:8"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"7471:10:8"},"nodeType":"YulFunctionCall","src":"7471:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7453:6:8"},"nodeType":"YulFunctionCall","src":"7453:40:8"},"nodeType":"YulExpressionStatement","src":"7453:40:8"}]},"name":"abi_encode_tuple_t_int8__to_t_int8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7377:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7388:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7399:4:8","type":""}],"src":"7313:186:8"},{"body":{"nodeType":"YulBlock","src":"7625:109:8","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7642:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7653:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7635:6:8"},"nodeType":"YulFunctionCall","src":"7635:21:8"},"nodeType":"YulExpressionStatement","src":"7635:21:8"},{"nodeType":"YulAssignment","src":"7665:63:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7701:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7713:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7724:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7709:3:8"},"nodeType":"YulFunctionCall","src":"7709:18:8"}],"functionName":{"name":"abi_encode_string_to_string","nodeType":"YulIdentifier","src":"7673:27:8"},"nodeType":"YulFunctionCall","src":"7673:55:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7665:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7594:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7605:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7616:4:8","type":""}],"src":"7504:230:8"},{"body":{"nodeType":"YulBlock","src":"7888:315:8","statements":[{"nodeType":"YulAssignment","src":"7898:27:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7910:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7921:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7906:3:8"},"nodeType":"YulFunctionCall","src":"7906:19:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7898:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7941:9:8"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7962:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7956:5:8"},"nodeType":"YulFunctionCall","src":"7956:13:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7979:3:8","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7984:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7975:3:8"},"nodeType":"YulFunctionCall","src":"7975:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"7988:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7971:3:8"},"nodeType":"YulFunctionCall","src":"7971:19:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7952:3:8"},"nodeType":"YulFunctionCall","src":"7952:39:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7934:6:8"},"nodeType":"YulFunctionCall","src":"7934:58:8"},"nodeType":"YulExpressionStatement","src":"7934:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8012:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8023:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8008:3:8"},"nodeType":"YulFunctionCall","src":"8008:20:8"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8040:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8048:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8036:3:8"},"nodeType":"YulFunctionCall","src":"8036:17:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8030:5:8"},"nodeType":"YulFunctionCall","src":"8030:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8001:6:8"},"nodeType":"YulFunctionCall","src":"8001:54:8"},"nodeType":"YulExpressionStatement","src":"8001:54:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8075:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8086:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8071:3:8"},"nodeType":"YulFunctionCall","src":"8071:20:8"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8117:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8125:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8113:3:8"},"nodeType":"YulFunctionCall","src":"8113:17:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8107:5:8"},"nodeType":"YulFunctionCall","src":"8107:24:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8100:6:8"},"nodeType":"YulFunctionCall","src":"8100:32:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8093:6:8"},"nodeType":"YulFunctionCall","src":"8093:40:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8064:6:8"},"nodeType":"YulFunctionCall","src":"8064:70:8"},"nodeType":"YulExpressionStatement","src":"8064:70:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8154:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8165:4:8","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8150:3:8"},"nodeType":"YulFunctionCall","src":"8150:20:8"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8182:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8190:4:8","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8178:3:8"},"nodeType":"YulFunctionCall","src":"8178:17:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8172:5:8"},"nodeType":"YulFunctionCall","src":"8172:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8143:6:8"},"nodeType":"YulFunctionCall","src":"8143:54:8"},"nodeType":"YulExpressionStatement","src":"8143:54:8"}]},"name":"abi_encode_tuple_t_struct$_Account_$269_memory_ptr__to_t_struct$_Account_$269_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7857:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7868:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7879:4:8","type":""}],"src":"7739:464:8"},{"body":{"nodeType":"YulBlock","src":"8353:288:8","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8370:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8381:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8363:6:8"},"nodeType":"YulFunctionCall","src":"8363:21:8"},"nodeType":"YulExpressionStatement","src":"8363:21:8"},{"nodeType":"YulVariableDeclaration","src":"8393:33:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8419:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8413:5:8"},"nodeType":"YulFunctionCall","src":"8413:13:8"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8397:12:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8446:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8457:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8442:3:8"},"nodeType":"YulFunctionCall","src":"8442:18:8"},{"kind":"number","nodeType":"YulLiteral","src":"8462:4:8","type":"","value":"0x40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8435:6:8"},"nodeType":"YulFunctionCall","src":"8435:32:8"},"nodeType":"YulExpressionStatement","src":"8435:32:8"},{"nodeType":"YulVariableDeclaration","src":"8476:75:8","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8518:12:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8536:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8547:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8532:3:8"},"nodeType":"YulFunctionCall","src":"8532:18:8"}],"functionName":{"name":"abi_encode_string_to_string","nodeType":"YulIdentifier","src":"8490:27:8"},"nodeType":"YulFunctionCall","src":"8490:61:8"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"8480:6:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8571:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8582:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8567:3:8"},"nodeType":"YulFunctionCall","src":"8567:20:8"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8599:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8607:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8595:3:8"},"nodeType":"YulFunctionCall","src":"8595:15:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8589:5:8"},"nodeType":"YulFunctionCall","src":"8589:22:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8560:6:8"},"nodeType":"YulFunctionCall","src":"8560:52:8"},"nodeType":"YulExpressionStatement","src":"8560:52:8"},{"nodeType":"YulAssignment","src":"8621:14:8","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"8629:6:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8621:4:8"}]}]},"name":"abi_encode_tuple_t_struct$_Vouch_$252_memory_ptr__to_t_struct$_Vouch_$252_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8322:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8333:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8344:4:8","type":""}],"src":"8208:433:8"},{"body":{"nodeType":"YulBlock","src":"8747:76:8","statements":[{"nodeType":"YulAssignment","src":"8757:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8769:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8780:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8765:3:8"},"nodeType":"YulFunctionCall","src":"8765:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8757:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8799:9:8"},{"name":"value0","nodeType":"YulIdentifier","src":"8810:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8792:6:8"},"nodeType":"YulFunctionCall","src":"8792:25:8"},"nodeType":"YulExpressionStatement","src":"8792:25:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8716:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8727:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8738:4:8","type":""}],"src":"8646:177:8"},{"body":{"nodeType":"YulBlock","src":"8951:134:8","statements":[{"nodeType":"YulAssignment","src":"8961:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8973:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8984:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8969:3:8"},"nodeType":"YulFunctionCall","src":"8969:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8961:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9003:9:8"},{"name":"value0","nodeType":"YulIdentifier","src":"9014:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8996:6:8"},"nodeType":"YulFunctionCall","src":"8996:25:8"},"nodeType":"YulExpressionStatement","src":"8996:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9041:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9052:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9037:3:8"},"nodeType":"YulFunctionCall","src":"9037:18:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9068:1:8","type":"","value":"0"},{"name":"value1","nodeType":"YulIdentifier","src":"9071:6:8"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"9057:10:8"},"nodeType":"YulFunctionCall","src":"9057:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9030:6:8"},"nodeType":"YulFunctionCall","src":"9030:49:8"},"nodeType":"YulExpressionStatement","src":"9030:49:8"}]},"name":"abi_encode_tuple_t_uint256_t_int8__to_t_uint256_t_int8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8912:9:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8923:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8931:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8942:4:8","type":""}],"src":"8828:257:8"},{"body":{"nodeType":"YulBlock","src":"9219:119:8","statements":[{"nodeType":"YulAssignment","src":"9229:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9241:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9252:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9237:3:8"},"nodeType":"YulFunctionCall","src":"9237:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9229:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9271:9:8"},{"name":"value0","nodeType":"YulIdentifier","src":"9282:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9264:6:8"},"nodeType":"YulFunctionCall","src":"9264:25:8"},"nodeType":"YulExpressionStatement","src":"9264:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9309:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9320:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9305:3:8"},"nodeType":"YulFunctionCall","src":"9305:18:8"},{"name":"value1","nodeType":"YulIdentifier","src":"9325:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9298:6:8"},"nodeType":"YulFunctionCall","src":"9298:34:8"},"nodeType":"YulExpressionStatement","src":"9298:34:8"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9180:9:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9191:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9199:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9210:4:8","type":""}],"src":"9090:248:8"},{"body":{"nodeType":"YulBlock","src":"9572:325:8","statements":[{"nodeType":"YulAssignment","src":"9582:27:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9594:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9605:3:8","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9590:3:8"},"nodeType":"YulFunctionCall","src":"9590:19:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9582:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9625:9:8"},{"name":"value0","nodeType":"YulIdentifier","src":"9636:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9618:6:8"},"nodeType":"YulFunctionCall","src":"9618:25:8"},"nodeType":"YulExpressionStatement","src":"9618:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9663:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9674:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9659:3:8"},"nodeType":"YulFunctionCall","src":"9659:18:8"},{"name":"value1","nodeType":"YulIdentifier","src":"9679:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9652:6:8"},"nodeType":"YulFunctionCall","src":"9652:34:8"},"nodeType":"YulExpressionStatement","src":"9652:34:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9706:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9717:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9702:3:8"},"nodeType":"YulFunctionCall","src":"9702:18:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9733:1:8","type":"","value":"0"},{"name":"value2","nodeType":"YulIdentifier","src":"9736:6:8"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"9722:10:8"},"nodeType":"YulFunctionCall","src":"9722:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9695:6:8"},"nodeType":"YulFunctionCall","src":"9695:49:8"},"nodeType":"YulExpressionStatement","src":"9695:49:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9764:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9775:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9760:3:8"},"nodeType":"YulFunctionCall","src":"9760:18:8"},{"name":"value3","nodeType":"YulIdentifier","src":"9780:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9753:6:8"},"nodeType":"YulFunctionCall","src":"9753:34:8"},"nodeType":"YulExpressionStatement","src":"9753:34:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9807:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9818:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9803:3:8"},"nodeType":"YulFunctionCall","src":"9803:19:8"},{"name":"value4","nodeType":"YulIdentifier","src":"9824:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9796:6:8"},"nodeType":"YulFunctionCall","src":"9796:35:8"},"nodeType":"YulExpressionStatement","src":"9796:35:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9851:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9862:3:8","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9847:3:8"},"nodeType":"YulFunctionCall","src":"9847:19:8"},{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9882:6:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9875:6:8"},"nodeType":"YulFunctionCall","src":"9875:14:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9868:6:8"},"nodeType":"YulFunctionCall","src":"9868:22:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9840:6:8"},"nodeType":"YulFunctionCall","src":"9840:51:8"},"nodeType":"YulExpressionStatement","src":"9840:51:8"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_int8_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_int8_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9501:9:8","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9512:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9520:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9528:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9536:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9544:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9552:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9563:4:8","type":""}],"src":"9343:554:8"},{"body":{"nodeType":"YulBlock","src":"10059:162:8","statements":[{"nodeType":"YulAssignment","src":"10069:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10081:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10092:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10077:3:8"},"nodeType":"YulFunctionCall","src":"10077:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10069:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10111:9:8"},{"name":"value0","nodeType":"YulIdentifier","src":"10122:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10104:6:8"},"nodeType":"YulFunctionCall","src":"10104:25:8"},"nodeType":"YulExpressionStatement","src":"10104:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10149:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10160:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10145:3:8"},"nodeType":"YulFunctionCall","src":"10145:18:8"},{"name":"value1","nodeType":"YulIdentifier","src":"10165:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10138:6:8"},"nodeType":"YulFunctionCall","src":"10138:34:8"},"nodeType":"YulExpressionStatement","src":"10138:34:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10192:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10203:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10188:3:8"},"nodeType":"YulFunctionCall","src":"10188:18:8"},{"name":"value2","nodeType":"YulIdentifier","src":"10208:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10181:6:8"},"nodeType":"YulFunctionCall","src":"10181:34:8"},"nodeType":"YulExpressionStatement","src":"10181:34:8"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10012:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10023:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10031:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10039:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10050:4:8","type":""}],"src":"9902:319:8"},{"body":{"nodeType":"YulBlock","src":"10282:65:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10299:1:8","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"10302:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10292:6:8"},"nodeType":"YulFunctionCall","src":"10292:14:8"},"nodeType":"YulExpressionStatement","src":"10292:14:8"},{"nodeType":"YulAssignment","src":"10315:26:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10333:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10336:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"10323:9:8"},"nodeType":"YulFunctionCall","src":"10323:18:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10315:4:8"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10265:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"10273:4:8","type":""}],"src":"10226:121:8"},{"body":{"nodeType":"YulBlock","src":"10400:80:8","statements":[{"body":{"nodeType":"YulBlock","src":"10427:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10429:16:8"},"nodeType":"YulFunctionCall","src":"10429:18:8"},"nodeType":"YulExpressionStatement","src":"10429:18:8"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10416:1:8"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10423:1:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10419:3:8"},"nodeType":"YulFunctionCall","src":"10419:6:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10413:2:8"},"nodeType":"YulFunctionCall","src":"10413:13:8"},"nodeType":"YulIf","src":"10410:2:8"},{"nodeType":"YulAssignment","src":"10458:16:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10469:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"10472:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10465:3:8"},"nodeType":"YulFunctionCall","src":"10465:9:8"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10458:3:8"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10383:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"10386:1:8","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10392:3:8","type":""}],"src":"10352:128:8"},{"body":{"nodeType":"YulBlock","src":"10534:76:8","statements":[{"body":{"nodeType":"YulBlock","src":"10556:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10558:16:8"},"nodeType":"YulFunctionCall","src":"10558:18:8"},"nodeType":"YulExpressionStatement","src":"10558:18:8"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10550:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"10553:1:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10547:2:8"},"nodeType":"YulFunctionCall","src":"10547:8:8"},"nodeType":"YulIf","src":"10544:2:8"},{"nodeType":"YulAssignment","src":"10587:17:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10599:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"10602:1:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10595:3:8"},"nodeType":"YulFunctionCall","src":"10595:9:8"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"10587:4:8"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10516:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"10519:1:8","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"10525:4:8","type":""}],"src":"10485:125:8"},{"body":{"nodeType":"YulBlock","src":"10668:205:8","statements":[{"nodeType":"YulVariableDeclaration","src":"10678:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"10687:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10682:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"10747:63:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10772:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"10777:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10768:3:8"},"nodeType":"YulFunctionCall","src":"10768:11:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10791:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"10796:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10787:3:8"},"nodeType":"YulFunctionCall","src":"10787:11:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10781:5:8"},"nodeType":"YulFunctionCall","src":"10781:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10761:6:8"},"nodeType":"YulFunctionCall","src":"10761:39:8"},"nodeType":"YulExpressionStatement","src":"10761:39:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10708:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"10711:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10705:2:8"},"nodeType":"YulFunctionCall","src":"10705:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10719:19:8","statements":[{"nodeType":"YulAssignment","src":"10721:15:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10730:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"10733:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10726:3:8"},"nodeType":"YulFunctionCall","src":"10726:10:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10721:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"10701:3:8","statements":[]},"src":"10697:113:8"},{"body":{"nodeType":"YulBlock","src":"10836:31:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10849:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"10854:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10845:3:8"},"nodeType":"YulFunctionCall","src":"10845:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"10863:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10838:6:8"},"nodeType":"YulFunctionCall","src":"10838:27:8"},"nodeType":"YulExpressionStatement","src":"10838:27:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10825:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"10828:6:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10822:2:8"},"nodeType":"YulFunctionCall","src":"10822:13:8"},"nodeType":"YulIf","src":"10819:2:8"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10646:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10651:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"10656:6:8","type":""}],"src":"10615:258:8"},{"body":{"nodeType":"YulBlock","src":"10933:325:8","statements":[{"nodeType":"YulAssignment","src":"10943:22:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10957:1:8","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"10960:4:8"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10953:3:8"},"nodeType":"YulFunctionCall","src":"10953:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10943:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"10974:38:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11004:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"11010:1:8","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11000:3:8"},"nodeType":"YulFunctionCall","src":"11000:12:8"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10978:18:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"11051:31:8","statements":[{"nodeType":"YulAssignment","src":"11053:27:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11067:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"11075:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11063:3:8"},"nodeType":"YulFunctionCall","src":"11063:17:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11053:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11031:18:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11024:6:8"},"nodeType":"YulFunctionCall","src":"11024:26:8"},"nodeType":"YulIf","src":"11021:2:8"},{"body":{"nodeType":"YulBlock","src":"11141:111:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11162:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11169:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11174:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11165:3:8"},"nodeType":"YulFunctionCall","src":"11165:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11155:6:8"},"nodeType":"YulFunctionCall","src":"11155:31:8"},"nodeType":"YulExpressionStatement","src":"11155:31:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11206:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11209:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11199:6:8"},"nodeType":"YulFunctionCall","src":"11199:15:8"},"nodeType":"YulExpressionStatement","src":"11199:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11234:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11237:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11227:6:8"},"nodeType":"YulFunctionCall","src":"11227:15:8"},"nodeType":"YulExpressionStatement","src":"11227:15:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11097:18:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11120:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"11128:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11117:2:8"},"nodeType":"YulFunctionCall","src":"11117:14:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11094:2:8"},"nodeType":"YulFunctionCall","src":"11094:38:8"},"nodeType":"YulIf","src":"11091:2:8"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10913:4:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10922:6:8","type":""}],"src":"10878:380:8"},{"body":{"nodeType":"YulBlock","src":"11310:88:8","statements":[{"body":{"nodeType":"YulBlock","src":"11341:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11343:16:8"},"nodeType":"YulFunctionCall","src":"11343:18:8"},"nodeType":"YulExpressionStatement","src":"11343:18:8"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11326:5:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11337:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11333:3:8"},"nodeType":"YulFunctionCall","src":"11333:6:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11323:2:8"},"nodeType":"YulFunctionCall","src":"11323:17:8"},"nodeType":"YulIf","src":"11320:2:8"},{"nodeType":"YulAssignment","src":"11372:20:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11383:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"11390:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11379:3:8"},"nodeType":"YulFunctionCall","src":"11379:13:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11372:3:8"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11292:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11302:3:8","type":""}],"src":"11263:135:8"},{"body":{"nodeType":"YulBlock","src":"11435:95:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11452:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11459:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11464:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11455:3:8"},"nodeType":"YulFunctionCall","src":"11455:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11445:6:8"},"nodeType":"YulFunctionCall","src":"11445:31:8"},"nodeType":"YulExpressionStatement","src":"11445:31:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11492:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11495:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11485:6:8"},"nodeType":"YulFunctionCall","src":"11485:15:8"},"nodeType":"YulExpressionStatement","src":"11485:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11516:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11519:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11509:6:8"},"nodeType":"YulFunctionCall","src":"11509:15:8"},"nodeType":"YulExpressionStatement","src":"11509:15:8"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11403:127:8"},{"body":{"nodeType":"YulBlock","src":"11567:95:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11584:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11591:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11596:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11587:3:8"},"nodeType":"YulFunctionCall","src":"11587:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11577:6:8"},"nodeType":"YulFunctionCall","src":"11577:31:8"},"nodeType":"YulExpressionStatement","src":"11577:31:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11624:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11627:4:8","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11617:6:8"},"nodeType":"YulFunctionCall","src":"11617:15:8"},"nodeType":"YulExpressionStatement","src":"11617:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11648:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11651:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11641:6:8"},"nodeType":"YulFunctionCall","src":"11641:15:8"},"nodeType":"YulExpressionStatement","src":"11641:15:8"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"11535:127:8"},{"body":{"nodeType":"YulBlock","src":"11699:95:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11716:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11723:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11728:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11719:3:8"},"nodeType":"YulFunctionCall","src":"11719:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11709:6:8"},"nodeType":"YulFunctionCall","src":"11709:31:8"},"nodeType":"YulExpressionStatement","src":"11709:31:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11756:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11759:4:8","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11749:6:8"},"nodeType":"YulFunctionCall","src":"11749:15:8"},"nodeType":"YulExpressionStatement","src":"11749:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11780:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11783:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11773:6:8"},"nodeType":"YulFunctionCall","src":"11773:15:8"},"nodeType":"YulExpressionStatement","src":"11773:15:8"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"11667:127:8"},{"body":{"nodeType":"YulBlock","src":"11841:76:8","statements":[{"body":{"nodeType":"YulBlock","src":"11895:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11904:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11907:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11897:6:8"},"nodeType":"YulFunctionCall","src":"11897:12:8"},"nodeType":"YulExpressionStatement","src":"11897:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11864:5:8"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11885:5:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11878:6:8"},"nodeType":"YulFunctionCall","src":"11878:13:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11871:6:8"},"nodeType":"YulFunctionCall","src":"11871:21:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11861:2:8"},"nodeType":"YulFunctionCall","src":"11861:32:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11854:6:8"},"nodeType":"YulFunctionCall","src":"11854:40:8"},"nodeType":"YulIf","src":"11851:2:8"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11830:5:8","type":""}],"src":"11799:118:8"},{"body":{"nodeType":"YulBlock","src":"11964:75:8","statements":[{"body":{"nodeType":"YulBlock","src":"12017:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12026:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12029:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12019:6:8"},"nodeType":"YulFunctionCall","src":"12019:12:8"},"nodeType":"YulExpressionStatement","src":"12019:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11987:5:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12005:1:8","type":"","value":"0"},{"name":"value","nodeType":"YulIdentifier","src":"12008:5:8"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"11994:10:8"},"nodeType":"YulFunctionCall","src":"11994:20:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11984:2:8"},"nodeType":"YulFunctionCall","src":"11984:31:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11977:6:8"},"nodeType":"YulFunctionCall","src":"11977:39:8"},"nodeType":"YulIf","src":"11974:2:8"}]},"name":"validator_revert_int8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11953:5:8","type":""}],"src":"11922:117:8"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_int8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_int8(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_int8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_int8(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_int8t_uint256t_uint256t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        validator_revert_int8(value)\n        value2 := value\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n        let value_1 := mload(add(headStart, 160))\n        validator_revert_bool(value_1)\n        value5 := value_1\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_string_to_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := ret\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            let dataPos := array_dataslot_string_storage(value0)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := abi_encode_string(value1, ret)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_int8__to_t_int8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, signextend(0, value0))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_to_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_struct$_Account_$269_memory_ptr__to_t_struct$_Account_$269_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(mload(value0), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), iszero(iszero(mload(add(value0, 0x40)))))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n    }\n    function abi_encode_tuple_t_struct$_Vouch_$252_memory_ptr__to_t_struct$_Vouch_$252_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let memberValue0 := mload(value0)\n        mstore(add(headStart, 32), 0x40)\n        let tail_1 := abi_encode_string_to_string(memberValue0, add(headStart, 96))\n        mstore(add(headStart, 0x40), mload(add(value0, 32)))\n        tail := tail_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_int8__to_t_uint256_t_int8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), signextend(0, value1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_int8_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_int8_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), signextend(0, value2))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function validator_revert_int8(value)\n    {\n        if iszero(eq(value, signextend(0, value))) { revert(0, 0) }\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106102275760003560e01c8063773c02d411610130578063b88d4fde116100b8578063e985e9c51161007c578063e985e9c514610581578063ee65024814610597578063ef233c0b146105aa578063f98a4eca146105bd578063fe131778146105d057600080fd5b8063b88d4fde14610476578063c87b56dd1461048b578063ce88b1451461049e578063d61255f31461055b578063d9eeebed1461056e57600080fd5b806395d89b41116100ff57806395d89b41146104315780639a48962014610439578063a22cb4651461044c578063ab82d9a01461045a578063b1610d7e1461046d57600080fd5b8063773c02d4146103dc57806382c0833b146103ef57806384864be714610402578063912dac061461040b57600080fd5b806323b872dd116101b357806343d3a4c11161018257806343d3a4c1146103705780635d1f0a31146103835780635e3bee73146103a35780636352211e146103b657806370a08231146103c957600080fd5b806323b872dd146103415780633c823b6b146103545780633fb1a8361461035d57806342842e0e1461034157600080fd5b80630c104878116101fa5780630c104878146102a4578063130a8d80146102b7578063173ac141146102d757806318160ddd146102ee5780631bdd4b74146102f657600080fd5b806301ffc9a71461022c57806306fdde0314610255578063081812fc1461026a578063095ea7b314610290575b600080fd5b61024061023a366004611bb1565b50600090565b60405190151581526020015b60405180910390f35b61025d6105d9565b60405161024c9190611dca565b61027861023a366004611bf8565b6040516001600160a01b03909116815260200161024c565b6102a261029e366004611b87565b5050565b005b6102a26102b2366004611b34565b61066b565b6102ca6102c5366004611bf8565b6106d6565b60405161024c9190611ddd565b6102e0600c5481565b60405190815260200161024c565b6102e06107c3565b610309610304366004611bf8565b6107d3565b60408051968752602087019590955260009390930b9385019390935260608401526080830191909152151560a082015260c00161024c565b6102a261034f366004611a52565b505050565b6102e060035481565b61025d61036b366004611bf8565b61087b565b6102e061037e366004611bf8565b61093e565b6102e0610391366004611bf8565b60009081526007602052604090205490565b6103096103b1366004611c36565b610982565b6102786103c4366004611bf8565b6109fa565b6102e06103d7366004611a04565b610a19565b6102e06103ea366004611a04565b610a24565b6102406103fd366004611bf8565b610a42565b6102e060025481565b61041e610419366004611cb8565b610ad8565b60405160009190910b815260200161024c565b61025d610b28565b6102a2610447366004611bf8565b610b37565b6102a261029e366004611afd565b6102a2610468366004611bf8565b610ba8565b6102e060015481565b6102a2610484366004611a8e565b5050505050565b61025d610499366004611bf8565b610ca9565b61051d6104ac366004611bf8565b6040805160808082018352600080835260208084018290528385018290526060938401829052948152600885528390208351918201845280546001600160a01b03168252600181015494820194909452600284015460ff161515928101929092526003909201549181019190915290565b60405161024c919081516001600160a01b03168152602080830151908201526040808301511515908201526060918201519181019190915260800190565b61041e610569366004611c36565b610d91565b6102a261057c366004611c36565b610e20565b61024061058f366004611a1f565b600092915050565b6102a26105a5366004611c11565b610e38565b6102406105b8366004611c36565b610fe8565b6102a26105cb366004611bf8565b61109d565b6102e060005481565b6060600680546105e890611e6a565b80601f016020809104026020016040519081016040528092919081815260200182805461061490611e6a565b80156106615780601f1061063657610100808354040283529160200191610661565b820191906000526020600020905b81548152906001019060200180831161064457829003601f168201915b5050505050905090565b600061068d335b6001600160a01b031660009081526009602052604090205490565b90506106d0818585858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506110b492505050565b50505050565b604080518082018252606081526000602080830182905284825260088152838220600190810154808452600783528584208785529091019091529083902083518085019094528054929391928290829061072f90611e6a565b80601f016020809104026020016040519081016040528092919081815260200182805461075b90611e6a565b80156107a85780601f1061077d576101008083540402835291602001916107a8565b820191906000526020600020905b81548152906001019060200180831161078b57829003601f168201915b50505050508152602001600182015481525050915050919050565b60006107ce600b5490565b905090565b600081815260086020526040808220600301549051635e3bee7360e01b8152600481018490526024810182905282918291829182918291903090635e3bee739060440160c06040518083038186803b15801561082e57600080fd5b505afa158015610842573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108669190611c58565b949d939c50919a509850965090945092505050565b600081815260086020908152604080832060019081015480855260078452828520868652909101909252909120805460609291906108b890611e6a565b80601f01602080910402602001604051908101604052809291908181526020018280546108e490611e6a565b80156109315780601f1061090657610100808354040283529160200191610931565b820191906000526020600020905b81548152906001019060200180831161091457829003601f168201915b5050505050915050919050565b60008181526008602090815260408083206001015480845260079092528220805460035483141561097a57815461097790600190611e27565b90505b949350505050565b6000806000806000806000600a60008a815260200190815260200160002088815481106109b1576109b1611eec565b600091825260208220600691909102016001810154600282015482546004840154600590940154929e919d50610100810490940b9b50919950975060ff90911695509350505050565b6000818152600860205260408120546001600160a01b03165b92915050565b6000610a1382611258565b6001600160a01b038116600090815260096020526040812054610a13565b6000818152600860209081526040808320815160808101835281546001600160a01b03168152600180830154828601819052600284015460ff161515838601526003909301546060830152918552600784528285208686528201909352908320015482811580610abe5750600054610aba9083611e0f565b4211155b905080158015610acf575082604001515b95945050505050565b6000838152600a60205260408120805482919084908110610afb57610afb611eec565b6000918252602080832087845260036006909302019190910190526040812054900b9150505b9392505050565b6060600580546105e890611e6a565b6000818152600860205260408082206001015480835291206002015460ff1615610b74576040516306425d3f60e21b815260040160405180910390fd5b60405182907f946ccf7529d18d55b60565307325eaa52971532b461c039424db6a003d5791d690600090a261029e826112a9565b610bb181610a42565b15610bcf57604051631994e32160e31b815260040160405180910390fd5b60008181526008602052604090206002015460ff16610c0157604051633c1391fd60e11b815260040160405180910390fd5b6000610c0c82611383565b600181015490915015610c325760405163d92060f360e01b815260040160405180910390fd5b805460ff1615610c5557604051634dc137dd60e11b815260040160405180910390fd5b42600180830182905554610c6891611e0f565b6002820155805461ff00191661ff0017815560405182907ffb4749a8bf40d9d3f0fbe28026fedbe06dc90952eba3759c2b3ec0a7d5697f3190600090a25050565b600081815260086020908152604080832060019081015480855260078452828520868652909101909252822080546060939190610ce590611e6a565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1190611e6a565b8015610d5e5780601f10610d3357610100808354040283529160200191610d5e565b820191906000526020600020905b815481529060010190602001808311610d4157829003601f168201915b50505050509050600481604051602001610d79929190611d2c565b60405160208183030381529060405292505050919050565b600082815260086020526040808220600301549051634896d60360e11b8152600481018590526024810184905260448101829052309063912dac069060640160206040518083038186803b158015610de857600080fd5b505afa158015610dfc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097a9190611bdb565b6000610e2b83611383565b905061034f838284611402565b6000610e4333610672565b90506000610e5084611383565b9050806001015460001415610e7857604051631eb4f4e760e01b815260040160405180910390fd5b805460ff1615610e9b57604051630a23827760e11b815260040160405180910390fd5b8060020154421115610ec0576040516335c84aeb60e21b815260040160405180910390fd5b610eca8285610fe8565b610ee757604051637cd1a64960e11b815260040160405180910390fd5b6000828152600382016020526040812054810b900b15610f1a57604051638601a09560e01b815260040160405180910390fd5b8260000b600114610f2d57600019610f30565b60015b60008381526003830160205260408120805492820b60ff1660ff199093169290921790915560048201805460019290610f6a908490611e0f565b90915550506001600084900b14610f82576000610f85565b60015b60ff16816005016000828254610f9b9190611e0f565b909155505060408051858152600085900b602082015283917fbdc899ff9789426dec6b3c3bc128ed8cc0a9b248c274dd93cfdb3709e5a2125e910160405180910390a26106d081856114eb565b600081831415610ffa57506000610a13565b8261100757506000610a13565b6000828152600860205260408082206001015480835291206002015460ff166110435760405163b0b9da2d60e01b815260040160405180910390fd5b60008481526008602052604081206001015482148061106157508185145b60008681526008602052604090206002015490915060ff1680156110825750805b1561109257600192505050610a13565b506000949350505050565b60006110a882611383565b905061029e81836114eb565b60006110be611735565b60008581526008602052604090206002015490915060ff166110f35760405163119ab1c960e11b815260040160405180910390fd5b6001600160a01b0383166000908152600960205260409020541561112a5760405163cb502ef160e01b815260040160405180910390fd5b6000848152600760209081526040808320848452600181018352922084519091611158918391870190611906565b5042600182810191909155600084815260086020908152604080832080546001600160a01b0319166001600160a01b038b1690811782558186018c90556002909101805460ff19168617905583526009909152812085905583548491906111c0908490611e0f565b925050819055506001600b60008282546111da9190611e0f565b909155505060405183906001600160a01b038716906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a482867fcd7f391a9646e0ab41ec2096f1d380febcdd775905c957ec790ab3738f9fdd78866040516112489190611dca565b60405180910390a3505050505050565b6001600160a01b0381166000908152600960205260408120548015801590611291575060008181526008602052604090206002015460ff165b61129c57600061129f565b60015b60ff169392505050565b6000818152600860205260409020600281015460ff166112dc576040516392c9b59960e01b815260040160405180910390fd5b60028101805460ff1916905580546001600160a01b0316600090815260096020908152604080832083905583546001600160a01b0319168455600180850154845260079092528220805491929091611335908490611e27565b925050819055506001600b600082825461134f9190611e27565b909155505060405182907f8401ed0b52520270ffba65c5383931fc1c6e30b27e1fc692d871d4f669d1f1ea90600090a25050565b6000818152600860205260408120600301546113a0816001611e0f565b6000848152600a6020526040902054146113cc576000838152600a602052604081208054600101815590525b6000838152600a602052604090208054829081106113ec576113ec611eec565b9060005260206000209060060201915050919050565b6000818152600383016020526040812054810b900b611434576040516359dc302960e01b815260040160405180910390fd5b60008181526008602052604090206002015460ff161561146757604051635c2a53c560e11b815260040160405180910390fd5b600182600401600082825461147c9190611e27565b90915550506000818152600383016020526040812054810b900b600114156114b95760018260050160008282546114b39190611e27565b90915550505b604051819084907f6a5de386c49c7e87d450f082eace65d7329e7123bdf11460295f7747adad110590600090a3505050565b6000806000808560040154111561153e5761153b611530611521670de0b6b3a7640000886004015461175090919063ffffffff16565b670de0b6b3a76400009061175c565b600587015490611750565b90505b60006706f05b59d3b200008210156115585760001961155b565b60015b8654909150600082810b610100909204810b900b1461160d578554600082810b60ff166101000261ff0019909216919091178755600287015461159f904290611e27565b905060025481101561160b576000816002546115bb9190611e27565b88600201546115ca9190611e0f565b90507f5073bec5c188828181e51012e5967fbdac7312bd400b8120cf3dcb0b8ee0f11e816040516115fd91815260200190565b60405180910390a160028801555b505b856002015442116116505760006116238661093e565b905061164861163d61152183670de0b6b3a7640000611750565b600589015490611750565b935050611658565b600193508192505b60006706f05b59d3b2000084101561167257600019611675565b60015b9050600081900b600114156116bc576040516001955086907fa3b99cec0cd3a7ee24ec2a54714e340cc9a7116aa4b0ff7730371682cb47f58090600090a26116bc866112a9565b841561172c5760408051878152600083900b60208201527f4e4d413658c729b8cf2dee49da9d98754c99a09654d209ce00244648febc1e54910160405180910390a1865460ff19166001178755600086815260086020526040812060030180549161172683611ea5565b91905055505b50505050505050565b6000600c6000815461174690611ea5565b9182905550919050565b6000610b218383611771565b6000610b2183670de0b6b3a764000084611838565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106117ba5760405163698d9a0160e11b8152600481018290526024015b60405180910390fd5b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826117f45780670de0b6b3a7640000850401945050505050610a13565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b6000808060001985870985870292508281108382030391505080600014156118735783828161186957611869611ed6565b0492505050610b21565b83811061189d57604051631dcf306360e21b815260048101829052602481018590526044016117b1565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b82805461191290611e6a565b90600052602060002090601f016020900481019282611934576000855561197a565b82601f1061194d57805160ff191683800117855561197a565b8280016001018555821561197a579182015b8281111561197a57825182559160200191906001019061195f565b5061198692915061198a565b5090565b5b80821115611986576000815560010161198b565b80356001600160a01b03811681146119b657600080fd5b919050565b60008083601f8401126119cd57600080fd5b50813567ffffffffffffffff8111156119e557600080fd5b6020830191508360208285010111156119fd57600080fd5b9250929050565b600060208284031215611a1657600080fd5b610b218261199f565b60008060408385031215611a3257600080fd5b611a3b8361199f565b9150611a496020840161199f565b90509250929050565b600080600060608486031215611a6757600080fd5b611a708461199f565b9250611a7e6020850161199f565b9150604084013590509250925092565b600080600080600060808688031215611aa657600080fd5b611aaf8661199f565b9450611abd6020870161199f565b935060408601359250606086013567ffffffffffffffff811115611ae057600080fd5b611aec888289016119bb565b969995985093965092949392505050565b60008060408385031215611b1057600080fd5b611b198361199f565b91506020830135611b2981611f02565b809150509250929050565b600080600060408486031215611b4957600080fd5b611b528461199f565b9250602084013567ffffffffffffffff811115611b6e57600080fd5b611b7a868287016119bb565b9497909650939450505050565b60008060408385031215611b9a57600080fd5b611ba38361199f565b946020939093013593505050565b600060208284031215611bc357600080fd5b81356001600160e01b031981168114610b2157600080fd5b600060208284031215611bed57600080fd5b8151610b2181611f13565b600060208284031215611c0a57600080fd5b5035919050565b60008060408385031215611c2457600080fd5b823591506020830135611b2981611f13565b60008060408385031215611c4957600080fd5b50508035926020909101359150565b60008060008060008060c08789031215611c7157600080fd5b86519550602087015194506040870151611c8a81611f13565b80945050606087015192506080870151915060a0870151611caa81611f02565b809150509295509295509295565b600080600060608486031215611ccd57600080fd5b505081359360208301359350604090920135919050565b60008151808452611cfc816020860160208601611e3e565b601f01601f19169290920160200192915050565b60008151611d22818560208601611e3e565b9290920192915050565b600080845481600182811c915080831680611d4857607f831692505b6020808410821415611d6857634e487b7160e01b86526022600452602486fd5b818015611d7c5760018114611d8d57611dba565b60ff19861689528489019650611dba565b60008b81526020902060005b86811015611db25781548b820152908501908301611d99565b505084890196505b505050505050610acf8185611d10565b602081526000610b216020830184611ce4565b602081526000825160406020840152611df96060840182611ce4565b9050602084015160408401528091505092915050565b60008219821115611e2257611e22611ec0565b500190565b600082821015611e3957611e39611ec0565b500390565b60005b83811015611e59578181015183820152602001611e41565b838111156106d05750506000910152565b600181811c90821680611e7e57607f821691505b60208210811415611e9f57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611eb957611eb9611ec0565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8015158114611f1057600080fd5b50565b8060000b8114611f1057600080fdfea26469706673582212200a95caf2962772a31c05f7cc14b667643496f6db0194d9c570b89797b88cb6ac64736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x227 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x773C02D4 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0xEE650248 EQ PUSH2 0x597 JUMPI DUP1 PUSH4 0xEF233C0B EQ PUSH2 0x5AA JUMPI DUP1 PUSH4 0xF98A4ECA EQ PUSH2 0x5BD JUMPI DUP1 PUSH4 0xFE131778 EQ PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0xCE88B145 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xD61255F3 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xD9EEEBED EQ PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x9A489620 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0xAB82D9A0 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xB1610D7E EQ PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x773C02D4 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x82C0833B EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x84864BE7 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x912DAC06 EQ PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x43D3A4C1 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x43D3A4C1 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x5D1F0A31 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x5E3BEE73 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x3C823B6B EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x3FB1A836 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC104878 GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0xC104878 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x130A8D80 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x173AC141 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x1BDD4B74 EQ PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x290 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x240 PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1DCA JUMP JUMPDEST PUSH2 0x278 PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x1B87 JUMP JUMPDEST POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A2 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B34 JUMP JUMPDEST PUSH2 0x66B JUMP JUMPDEST PUSH2 0x2CA PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x309 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x0 SWAP4 SWAP1 SWAP4 SIGNEXTEND SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A52 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x93E JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x309 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C36 JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x41E PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB8 JUMP JUMPDEST PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x25D PUSH2 0xB28 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x447 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0xBA8 JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x484 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A8E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x25D PUSH2 0x499 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x51D PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP4 DUP5 ADD DUP3 SWAP1 MSTORE SWAP5 DUP2 MSTORE PUSH1 0x8 DUP6 MSTORE DUP4 SWAP1 KECCAK256 DUP4 MLOAD SWAP2 DUP3 ADD DUP5 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x41E PUSH2 0x569 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C36 JUMP JUMPDEST PUSH2 0xD91 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x57C CALLDATASIZE PUSH1 0x4 PUSH2 0x1C36 JUMP JUMPDEST PUSH2 0xE20 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x58F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x5A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C11 JUMP JUMPDEST PUSH2 0xE38 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x5B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C36 JUMP JUMPDEST PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x5CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x109D JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x5E8 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x614 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x661 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x636 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x661 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x644 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68D CALLER JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x6D0 DUP2 DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x10B4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP5 DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE DUP4 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP1 DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE DUP6 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x72F SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x75B SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x77D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7A8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x78B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CE PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH4 0x5E3BEE73 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 ADDRESS SWAP1 PUSH4 0x5E3BEE73 SWAP1 PUSH1 0x44 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x842 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x866 SWAP2 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST SWAP5 SWAP14 SWAP4 SWAP13 POP SWAP2 SWAP11 POP SWAP9 POP SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP1 DUP6 MSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP7 DUP7 MSTORE SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0x8B8 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E4 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x931 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x906 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x931 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x914 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD SLOAD DUP1 DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x3 SLOAD DUP4 EQ ISZERO PUSH2 0x97A JUMPI DUP2 SLOAD PUSH2 0x977 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x9B1 JUMPI PUSH2 0x9B1 PUSH2 0x1EEC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x6 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD DUP3 SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP15 SWAP2 SWAP14 POP PUSH2 0x100 DUP2 DIV SWAP1 SWAP5 SIGNEXTEND SWAP12 POP SWAP2 SWAP10 POP SWAP8 POP PUSH1 0xFF SWAP1 SWAP2 AND SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA13 DUP3 PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP3 DUP7 ADD DUP2 SWAP1 MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP4 DUP7 ADD MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP2 DUP6 MSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP7 DUP7 MSTORE DUP3 ADD SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 ADD SLOAD DUP3 DUP2 ISZERO DUP1 PUSH2 0xABE JUMPI POP PUSH1 0x0 SLOAD PUSH2 0xABA SWAP1 DUP4 PUSH2 0x1E0F JUMP JUMPDEST TIMESTAMP GT ISZERO JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0xACF JUMPI POP DUP3 PUSH1 0x40 ADD MLOAD JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xAFB JUMPI PUSH2 0xAFB PUSH2 0x1EEC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x3 PUSH1 0x6 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SIGNEXTEND SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x5E8 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD DUP1 DUP4 MSTORE SWAP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6425D3F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x946CCF7529D18D55B60565307325EAA52971532B461C039424DB6A003D5791D6 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0x29E DUP3 PUSH2 0x12A9 JUMP JUMPDEST PUSH2 0xBB1 DUP2 PUSH2 0xA42 JUMP JUMPDEST ISZERO PUSH2 0xBCF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1994E321 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xC01 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3C1391FD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC0C DUP3 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92060F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC55 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4DC137DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x1 DUP1 DUP4 ADD DUP3 SWAP1 SSTORE SLOAD PUSH2 0xC68 SWAP2 PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0xFF00 OR DUP2 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0xFB4749A8BF40D9D3F0FBE28026FEDBE06DC90952EBA3759C2B3EC0A7D5697F31 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP1 DUP6 MSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP7 DUP7 MSTORE SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP4 SWAP2 SWAP1 PUSH2 0xCE5 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD11 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD5E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD33 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD5E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD41 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x4 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD79 SWAP3 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH4 0x4896D603 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0x912DAC06 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97A SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2B DUP4 PUSH2 0x1383 JUMP JUMPDEST SWAP1 POP PUSH2 0x34F DUP4 DUP3 DUP5 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE43 CALLER PUSH2 0x672 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE50 DUP5 PUSH2 0x1383 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xE78 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1EB4F4E7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA238277 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0xEC0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35C84AEB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xECA DUP3 DUP6 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0xEE7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7CD1A649 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SIGNEXTEND SWAP1 SIGNEXTEND ISZERO PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD PUSH4 0x8601A095 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 SIGNEXTEND PUSH1 0x1 EQ PUSH2 0xF2D JUMPI PUSH1 0x0 NOT PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 DUP3 SIGNEXTEND PUSH1 0xFF AND PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xF6A SWAP1 DUP5 SWAP1 PUSH2 0x1E0F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x0 DUP5 SWAP1 SIGNEXTEND EQ PUSH2 0xF82 JUMPI PUSH1 0x0 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND DUP2 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF9B SWAP2 SWAP1 PUSH2 0x1E0F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 DUP6 SWAP1 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE DUP4 SWAP2 PUSH32 0xBDC899FF9789426DEC6B3C3BC128ED8CC0A9B248C274DD93CFDB3709E5A2125E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x6D0 DUP2 DUP6 PUSH2 0x14EB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 EQ ISZERO PUSH2 0xFFA JUMPI POP PUSH1 0x0 PUSH2 0xA13 JUMP JUMPDEST DUP3 PUSH2 0x1007 JUMPI POP PUSH1 0x0 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD DUP1 DUP4 MSTORE SWAP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1043 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB0B9DA2D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 EQ DUP1 PUSH2 0x1061 JUMPI POP DUP2 DUP6 EQ JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1082 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x1092 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0xA13 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A8 DUP3 PUSH2 0x1383 JUMP JUMPDEST SWAP1 POP PUSH2 0x29E DUP2 DUP4 PUSH2 0x14EB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BE PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x10F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x119AB1C9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x112A JUMPI PUSH1 0x40 MLOAD PUSH4 0xCB502EF1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x1 DUP2 ADD DUP4 MSTORE SWAP3 KECCAK256 DUP5 MLOAD SWAP1 SWAP2 PUSH2 0x1158 SWAP2 DUP4 SWAP2 DUP8 ADD SWAP1 PUSH2 0x1906 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x1 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP1 DUP2 OR DUP3 SSTORE DUP2 DUP7 ADD DUP13 SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 OR SWAP1 SSTORE DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP6 SWAP1 SSTORE DUP4 SLOAD DUP5 SWAP2 SWAP1 PUSH2 0x11C0 SWAP1 DUP5 SWAP1 PUSH2 0x1E0F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11DA SWAP2 SWAP1 PUSH2 0x1E0F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 DUP3 DUP7 PUSH32 0xCD7F391A9646E0AB41EC2096F1D380FEBCDD775905C957EC790AB3738F9FDD78 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1248 SWAP2 SWAP1 PUSH2 0x1DCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1291 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x129C JUMPI PUSH1 0x0 PUSH2 0x129F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x12DC JUMPI PUSH1 0x40 MLOAD PUSH4 0x92C9B599 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 SSTORE PUSH1 0x1 DUP1 DUP6 ADD SLOAD DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1335 SWAP1 DUP5 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x134F SWAP2 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x8401ED0B52520270FFBA65C5383931FC1C6E30B27E1FC692D871D4F669D1F1EA SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x13A0 DUP2 PUSH1 0x1 PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ PUSH2 0x13CC JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD DUP2 SSTORE SWAP1 MSTORE JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x13EC JUMPI PUSH2 0x13EC PUSH2 0x1EEC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH2 0x1434 JUMPI PUSH1 0x40 MLOAD PUSH4 0x59DC3029 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1467 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5C2A53C5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x147C SWAP2 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x1 EQ ISZERO PUSH2 0x14B9 JUMPI PUSH1 0x1 DUP3 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14B3 SWAP2 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 DUP5 SWAP1 PUSH32 0x6A5DE386C49C7E87D450F082EACE65D7329E7123BDF11460295F7747ADAD1105 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP6 PUSH1 0x4 ADD SLOAD GT ISZERO PUSH2 0x153E JUMPI PUSH2 0x153B PUSH2 0x1530 PUSH2 0x1521 PUSH8 0xDE0B6B3A7640000 DUP9 PUSH1 0x4 ADD SLOAD PUSH2 0x1750 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x175C JUMP JUMPDEST PUSH1 0x5 DUP8 ADD SLOAD SWAP1 PUSH2 0x1750 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH8 0x6F05B59D3B20000 DUP3 LT ISZERO PUSH2 0x1558 JUMPI PUSH1 0x0 NOT PUSH2 0x155B JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP7 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 DUP3 DUP2 SIGNEXTEND PUSH2 0x100 SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND EQ PUSH2 0x160D JUMPI DUP6 SLOAD PUSH1 0x0 DUP3 DUP2 SIGNEXTEND PUSH1 0xFF AND PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP8 SSTORE PUSH1 0x2 DUP8 ADD SLOAD PUSH2 0x159F SWAP1 TIMESTAMP SWAP1 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x160B JUMPI PUSH1 0x0 DUP2 PUSH1 0x2 SLOAD PUSH2 0x15BB SWAP2 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP9 PUSH1 0x2 ADD SLOAD PUSH2 0x15CA SWAP2 SWAP1 PUSH2 0x1E0F JUMP JUMPDEST SWAP1 POP PUSH32 0x5073BEC5C188828181E51012E5967FBDAC7312BD400B8120CF3DCB0B8EE0F11E DUP2 PUSH1 0x40 MLOAD PUSH2 0x15FD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x2 DUP9 ADD SSTORE JUMPDEST POP JUMPDEST DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0x1650 JUMPI PUSH1 0x0 PUSH2 0x1623 DUP7 PUSH2 0x93E JUMP JUMPDEST SWAP1 POP PUSH2 0x1648 PUSH2 0x163D PUSH2 0x1521 DUP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1750 JUMP JUMPDEST PUSH1 0x5 DUP10 ADD SLOAD SWAP1 PUSH2 0x1750 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x1 SWAP4 POP DUP2 SWAP3 POP JUMPDEST PUSH1 0x0 PUSH8 0x6F05B59D3B20000 DUP5 LT ISZERO PUSH2 0x1672 JUMPI PUSH1 0x0 NOT PUSH2 0x1675 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 SIGNEXTEND PUSH1 0x1 EQ ISZERO PUSH2 0x16BC JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 SWAP6 POP DUP7 SWAP1 PUSH32 0xA3B99CEC0CD3A7EE24EC2A54714E340CC9A7116AA4B0FF7730371682CB47F580 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0x16BC DUP7 PUSH2 0x12A9 JUMP JUMPDEST DUP5 ISZERO PUSH2 0x172C JUMPI PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x0 DUP4 SWAP1 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x4E4D413658C729B8CF2DEE49DA9D98754C99A09654D209CE00244648FEBC1E54 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP7 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP8 SSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP2 PUSH2 0x1726 DUP4 PUSH2 0x1EA5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP2 SLOAD PUSH2 0x1746 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB21 DUP4 DUP4 PUSH2 0x1771 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB21 DUP4 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP5 DUP7 MULMOD DUP5 DUP7 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH2 0x17BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x698D9A01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP7 DUP9 MULMOD SWAP2 POP POP PUSH8 0x6F05B59D3B1FFFF DUP2 GT DUP3 PUSH2 0x17F4 JUMPI DUP1 PUSH8 0xDE0B6B3A7640000 DUP6 DIV ADD SWAP5 POP POP POP POP POP PUSH2 0xA13 JUMP JUMPDEST PUSH3 0x40000 DUP3 DUP6 SUB DIV SWAP4 SWAP1 SWAP2 GT SWAP1 SWAP2 SUB PUSH1 0x1 PUSH1 0xEE SHL MUL SWAP2 SWAP1 SWAP2 OR PUSH32 0xACCB18165BD6FE31AE1CF318DC5B51EEE0E1BA569B88CD74C1773B91FAC10669 MUL ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH1 0x0 EQ ISZERO PUSH2 0x1873 JUMPI DUP4 DUP3 DUP2 PUSH2 0x1869 JUMPI PUSH2 0x1869 PUSH2 0x1ED6 JUMP JUMPDEST DIV SWAP3 POP POP POP PUSH2 0xB21 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x189D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DCF3063 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x17B1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x2 PUSH1 0x1 DUP8 NOT DUP2 ADD DUP9 AND SWAP8 DUP9 SWAP1 DIV PUSH1 0x3 DUP2 MUL DUP4 XOR DUP1 DUP3 MUL DUP5 SUB MUL DUP1 DUP3 MUL DUP5 SUB MUL DUP1 DUP3 MUL DUP5 SUB MUL DUP1 DUP3 MUL DUP5 SUB MUL DUP1 DUP3 MUL DUP5 SUB MUL SWAP1 DUP2 MUL SWAP1 SWAP3 SUB SWAP1 SWAP2 MUL PUSH1 0x0 DUP9 SWAP1 SUB DUP9 SWAP1 DIV SWAP1 SWAP2 ADD DUP6 DUP4 GT SWAP1 SWAP5 SUB SWAP4 SWAP1 SWAP4 MUL SWAP4 SUB SWAP5 SWAP1 SWAP5 DIV SWAP2 SWAP1 SWAP2 OR MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1912 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1934 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x197A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x194D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x197A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x197A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x197A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x195F JUMP JUMPDEST POP PUSH2 0x1986 SWAP3 SWAP2 POP PUSH2 0x198A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1986 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x198B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x19B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x19CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x19FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB21 DUP3 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A3B DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A49 PUSH1 0x20 DUP5 ADD PUSH2 0x199F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A70 DUP5 PUSH2 0x199F JUMP JUMPDEST SWAP3 POP PUSH2 0x1A7E PUSH1 0x20 DUP6 ADD PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AAF DUP7 PUSH2 0x199F JUMP JUMPDEST SWAP5 POP PUSH2 0x1ABD PUSH1 0x20 DUP8 ADD PUSH2 0x199F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AEC DUP9 DUP3 DUP10 ADD PUSH2 0x19BB JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B19 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B29 DUP2 PUSH2 0x1F02 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B52 DUP5 PUSH2 0x199F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B7A DUP7 DUP3 DUP8 ADD PUSH2 0x19BB JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BA3 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB21 DUP2 PUSH2 0x1F13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B29 DUP2 PUSH2 0x1F13 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1C71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 MLOAD SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP5 POP PUSH1 0x40 DUP8 ADD MLOAD PUSH2 0x1C8A DUP2 PUSH2 0x1F13 JUMP JUMPDEST DUP1 SWAP5 POP POP PUSH1 0x60 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x80 DUP8 ADD MLOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD MLOAD PUSH2 0x1CAA DUP2 PUSH2 0x1F02 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1CFC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x1D22 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E3E JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x1D48 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x1D68 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1D7C JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1D8D JUMPI PUSH2 0x1DBA JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x1DBA JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1DB2 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x1D99 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP PUSH2 0xACF DUP2 DUP6 PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB21 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CE4 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1DF9 PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x1CE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1E22 JUMPI PUSH2 0x1E22 PUSH2 0x1EC0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1E39 JUMPI PUSH2 0x1E39 PUSH2 0x1EC0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E59 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E41 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6D0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1E7E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1E9F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1EB9 JUMPI PUSH2 0x1EB9 PUSH2 0x1EC0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1F10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x0 SIGNEXTEND DUP2 EQ PUSH2 0x1F10 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SWAP6 0xCA CALLCODE SWAP7 0x27 PUSH19 0xA31C05F7CC14B667643496F6DB0194D9C570B8 SWAP8 SWAP8 0xB8 DUP13 0xB6 0xAC PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"404:17459:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16586:87;;;;;;:::i;:::-;-1:-1:-1;16665:4:5;;16586:87;;;;7286:14:8;;7279:22;7261:41;;7249:2;7234:18;16586:87:5;;;;;;;;17376:92;;;:::i;:::-;;;;;;;:::i;17139:114::-;;;;;;:::i;:::-;;;-1:-1:-1;;;;;7077:32:8;;;7059:51;;7047:2;7032:18;17139:114:5;7014:102:8;16981:66:5;;;;;;:::i;:::-;;;;;;3803:182;;;;;;:::i;:::-;;:::i;11369:185::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1754:24::-;;;;;;;;;8792:25:8;;;8780:2;8765:18;1754:24:5;8747:76:8;6744:93:5;;;:::i;9915:306::-;;;;;;:::i;:::-;;:::i;:::-;;;;9618:25:8;;;9674:2;9659:18;;9652:34;;;;-1:-1:-1;9722:21:8;;;;9702:18;;;9695:49;;;;9775:2;9760:18;;9753:34;9818:3;9803:19;;9796:35;;;;9875:14;9868:22;9862:3;9847:19;;9840:51;9605:3;9590:19;9915:306:5;9572:325:8;16890:85:5;;;;;;:::i;:::-;;;;;644:51;;;;;;6942:214;;;;;;:::i;:::-;;:::i;7162:614::-;;;;;;:::i;:::-;;:::i;11177:186::-;;;;;;:::i;:::-;11255:7;11301:23;;;:7;:23;;;;;11341:15;;11177:186;10487:422;;;;;;:::i;:::-;;:::i;9657:123::-;;;;;;:::i;:::-;;:::i;9324:126::-;;;;;;:::i;:::-;;:::i;9106:105::-;;;;;;:::i;:::-;;:::i;8759:341::-;;;;;;:::i;:::-;;:::i;594:43::-;;;;;;10915:256;;;;;;:::i;:::-;;:::i;:::-;;;7399:4:8;7471:21;;;;7453:40;;7441:2;7426:18;10915:256:5;7408:91:8;17474:96:5;;;:::i;6169:289::-;;;;;;:::i;:::-;;:::i;17053:80::-;;;;;;:::i;4501:651::-;;;;;;:::i;:::-;;:::i;550:38::-;;;;;;16679:110;;;;;;:::i;:::-;;;;;;;17576:285;;;;;;:::i;:::-;;:::i;11560:115::-;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11651:17:5;;;:8;:17;;;;;11644:24;;;;;;;;;-1:-1:-1;;;;;11644:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11560:115;;;;;;;7956:13:8;;-1:-1:-1;;;;;7952:39:8;7934:58;;8048:4;8036:17;;;8030:24;8008:20;;;8001:54;8125:4;8113:17;;;8107:24;8100:32;8093:40;8071:20;;;8064:70;8190:4;8178:17;;;8172:24;8150:20;;;8143:54;;;;7921:3;7906:19;;7888:315;10227:254:5;;;;;;:::i;:::-;;:::i;6464:213::-;;;;;;:::i;:::-;;:::i;17259:111::-;;;;;;:::i;:::-;17335:4;17259:111;;;;;5158:830;;;;;;:::i;:::-;;:::i;8187:566::-;;;;;;:::i;:::-;;:::i;5994:169::-;;;;;;:::i;:::-;;:::i;504:40::-;;;;;;17376:92;17424:13;17456:5;17449:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17376:92;:::o;3803:182::-;3881:20;3904:24;719:10:3;3915:12:5;-1:-1:-1;;;;;9299:12:5;9274:7;9299:12;;;:5;:12;;;;;;;9217:101;3904:24;3881:47;;3938:40;3945:12;3959:7;3968:9;;3938:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3938:6:5;;-1:-1:-1;;;3938:40:5:i;:::-;3871:114;3803:182;;;:::o;11369:185::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;11472:17:5;;;:8;:17;;;;;:25;;;;;11514:16;;;:7;:16;;;;;:33;;;:24;;;:33;;;;;;;11507:40;;;;;;;;;;-1:-1:-1;;11472:25:5;;11507:40;;11514:33;;11507:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11369:185;;;:::o;6744:93::-;6790:7;6816:14;6916:13;;;6843:93;6816:14;6809:21;;6744:93;:::o;9915:306::-;9977:20;10114:17;;;:8;:17;;;;;;:33;;;10164:50;;-1:-1:-1;;;10164:50:5;;;;;9264:25:8;;;9305:18;;;9298:34;;;9977:20:5;;;;;;;;;;10114:33;10164:4;;:25;;9237:18:8;;10164:50:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10157:57;;;;-1:-1:-1;10157:57:5;;-1:-1:-1;10157:57:5;-1:-1:-1;10157:57:5;-1:-1:-1;10157:57:5;;-1:-1:-1;9915:306:5;-1:-1:-1;;;9915:306:5:o;6942:214::-;7032:22;7057:17;;;:8;:17;;;;;;;;:25;;;;;7099:23;;;:7;:23;;;;;:40;;;:31;;;:40;;;;;;7092:57;;7007:13;;7057:25;7099:40;7092:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6942:214;;;:::o;7162:614::-;7225:7;7269:18;;;:8;:18;;;;;;;;:26;;;7332:23;;;:7;:23;;;;;7544:15;;7675:16;;7657:34;;7653:93;;;7716:15;;:19;;7734:1;;7716:19;:::i;:::-;7707:28;;7653:93;7763:6;7162:614;-1:-1:-1;;;;7162:614:5:o;10487:422::-;10581:20;10603:15;10620:16;10638:14;10654:12;10668:13;10693:28;10724:10;:19;10735:7;10724:19;;;;;;;;;;;10744:14;10724:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;10777:23;;;;10802:18;;;;10822:22;;10846:17;;;;10865:15;;;;;10777:23;;10802:18;;-1:-1:-1;10822:22:5;;;;;;;-1:-1:-1;10846:17:5;;-1:-1:-1;10865:15:5;-1:-1:-1;10882:19:5;;;;;-1:-1:-1;10487:422:5;-1:-1:-1;;;;10487:422:5:o;9657:123::-;9723:13;9876:17;;;:8;:17;;;;;:25;-1:-1:-1;;;;;9876:25:5;9755:17;9748:24;9657:123;-1:-1:-1;;9657:123:5:o;9324:126::-;9390:15;9424:19;9435:7;9424:10;:19::i;9106:105::-;-1:-1:-1;;;;;9299:12:5;;9162:7;9299:12;;;:5;:12;;;;;;9187:17;9217:101;8759:341;8819:4;8860:17;;;:8;:17;;;;;;;;8835:42;;;;;;;;;-1:-1:-1;;;;;8835:42:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8907:24;;;:7;:24;;;;;:41;;;:32;;:41;;;;;;:51;;8819:4;8986:14;;;:63;;-1:-1:-1;9035:14:5;;9023:26;;:9;:26;:::i;:::-;9004:15;:45;;8986:63;8969:80;;9067:9;9066:10;:27;;;;;9080:7;:13;;;9066:27;9059:34;8759:341;-1:-1:-1;;;;;8759:341:5:o;10915:256::-;11035:4;11082:19;;;:10;:19;;;;;:35;;11035:4;;11082:19;11102:14;;11082:35;;;;;;:::i;:::-;;;;;;;;;11134:30;;;:16;11082:35;;;;;11134:16;;;;:30;;;;;;;;;-1:-1:-1;;10915:256:5;;;;;;:::o;17474:96::-;17524:13;17556:7;17549:14;;;;;:::i;6169:289::-;6239:22;6264:17;;;:8;:17;;;;;;:25;;;6302:24;;;;;:30;;;;;6299:63;;;6341:21;;-1:-1:-1;;;6341:21:5;;;;;;;;;;;6299:63;6378:36;;6406:7;;6378:36;;;;;6424:27;6443:7;6424:18;:27::i;4501:651::-;4560:22;4573:8;4560:12;:22::i;:::-;4557:83;;;4605:24;;-1:-1:-1;;;4605:24:5;;;;;;;;;;;4557:83;4654:18;;;;:8;:18;;;;;:24;;;;;4650:91;;4701:29;;-1:-1:-1;;;4701:29:5;;;;;;;;;;;4650:91;4751:28;4782:29;4802:8;4782:19;:29::i;:::-;4824:23;;;;4751:60;;-1:-1:-1;4824:27:5;4821:63;;4860:24;;-1:-1:-1;;;4860:24:5;;;;;;;;;;;4821:63;4897:19;;;;4894:60;;;4925:29;;-1:-1:-1;;;4925:29:5;;;;;;;;;;;4894:60;4991:15;4965:23;;;;:41;;;5055:13;5037:31;;;:::i;:::-;5016:18;;;:52;5078:27;;-1:-1:-1;;5078:27:5;;;;;5121:24;;5136:8;;5121:24;;5078:22;;5121:24;4547:605;4501:651;:::o;17576:285::-;17668:22;17693:17;;;:8;:17;;;;;;;;:25;;;;;17748:23;;;:7;:23;;;;;:40;;;:31;;;:40;;;;;17728:70;;17643:13;;17668:22;17748:40;17728:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17839:7;17848:3;17822:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17808:45;;;;17576:285;;;:::o;10227:254::-;10315:4;10356:17;;;:8;:17;;;;;;:33;;;10406:68;;-1:-1:-1;;;10406:68:5;;;;;10104:25:8;;;10145:18;;;10138:34;;;10188:18;;;10181:34;;;10406:4:5;;:29;;10077:18:8;;10406:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6464:213::-;6548:28;6579:29;6599:8;6579:19;:29::i;:::-;6548:60;;6618:52;6634:8;6644:10;6656:13;6618:15;:52::i;5158:830::-;5221:20;5244:24;719:10:3;5255:12:5;640:96:3;5244:24:5;5221:47;;5278:28;5309:29;5329:8;5309:19;:29::i;:::-;5278:60;;5360:10;:23;;;5387:1;5360:28;5357:65;;;5397:25;;-1:-1:-1;;;5397:25:5;;;;;;;;;;;5357:65;5435:19;;;;5432:62;;;5463:31;;-1:-1:-1;;;5463:31:5;;;;;;;;;;;5432:62;5525:10;:18;;;5507:15;:36;5504:72;;;5552:24;;-1:-1:-1;;;5552:24:5;;;;;;;;;;;5504:72;5590:31;5598:12;5612:8;5590:7;:31::i;:::-;5586:64;;5630:20;;-1:-1:-1;;;5630:20:5;;;;;;;;;;;5586:64;5663:30;;;;:16;;;:30;;;;;;;;:35;;;5660:66;;5707:19;;-1:-1:-1;;;5707:19:5;;;;;;;;;;;5660:66;5770:5;:10;;5779:1;5770:10;:31;;-1:-1:-1;;5770:31:5;;;5788:1;5770:31;5737:30;;;;:16;;;:30;;;;;:64;;;;;;;-1:-1:-1;;5737:64:5;;;;;;;;;;5811:17;;;:22;;5737:64;;:30;5811:22;;5737:64;;5811:22;:::i;:::-;;;;-1:-1:-1;;5871:1:5;5862:10;;;;;:18;;5879:1;5862:18;;;5875:1;5862:18;5843:37;;:10;:15;;;:37;;;;;;;:::i;:::-;;;;-1:-1:-1;;5896:40:5;;;8996:25:8;;;8942:4;9057:21;;;9052:2;9037:18;;9030:49;5906:12:5;;5896:40;;8969:18:8;5896:40:5;;;;;;;5947:34;5960:10;5972:8;5947:12;:34::i;8187:566::-;8274:4;8310:17;8294:12;:33;8290:51;;;-1:-1:-1;8336:5:5;8329:12;;8290:51;8355:17;8351:35;;-1:-1:-1;8381:5:5;8374:12;;8351:35;8397:22;8422:27;;;:8;:27;;;;;;:35;;;8471:24;;;;;:30;;;;;8467:67;;8510:24;;-1:-1:-1;;;8510:24:5;;;;;;;;;;;8467:67;8545:15;8563:22;;;:8;:22;;;;;:30;;;:48;;;:82;;;8631:14;8615:12;:30;8563:82;8660:22;;;;:8;:22;;;;;:28;;;8545:100;;-1:-1:-1;8660:28:5;;:42;;;;;8692:10;8660:42;8656:59;;;8711:4;8704:11;;;;;;8656:59;-1:-1:-1;8741:5:5;;8187:566;-1:-1:-1;;;;8187:566:5:o;5994:169::-;6052:28;6083:29;6103:8;6083:19;:29::i;:::-;6052:60;;6122:34;6135:10;6147:8;6122:12;:34::i;11947:1073::-;12051:16;12070:13;:11;:13::i;:::-;12097:25;;;;:8;:25;;;;;:31;;;12051:32;;-1:-1:-1;12097:31:5;;12093:66;;12137:22;;-1:-1:-1;;;12137:22:5;;;;;;;;;;;12093:66;-1:-1:-1;;;;;12173:15:5;;;;;;:5;:15;;;;;;:20;12169:61;;12202:28;;-1:-1:-1;;;12202:28:5;;;;;;;;;;;12169:61;12249:28;12280:24;;;:7;:24;;;;;;;;12338:30;;;:20;;;:30;;;;12575;;12338;;12575;;12338;;12575;;;;:::i;:::-;-1:-1:-1;12635:15:5;12615:17;;;;:35;;;;12661:18;;;;:8;:18;;;;;;;;:37;;-1:-1:-1;;;;;;12661:37:5;-1:-1:-1;;;;;12661:37:5;;;;;;;12708:26;;;:44;;;12762:24;;;;:31;;-1:-1:-1;;12762:31:5;;;;;12804:15;;:5;:15;;;;;:26;;;12841:24;;;;12661:18;12841:24;;12615:17;;12841:24;:::i;:::-;;;;;;;;12892:1;12875:13;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;;12909:40:5;;12940:8;;-1:-1:-1;;;;;12909:40:5;;;12926:1;;12909:40;;12926:1;;12909:40;12992:8;12975:15;12964:49;13002:10;12964:49;;;;;;:::i;:::-;;;;;;;;12041:979;;;11947:1073;;;:::o;9456:195::-;-1:-1:-1;;;;;9299:12:5;;9516:15;9299:12;;;:5;:12;;;;;;9597;;;;;:39;;-1:-1:-1;9613:17:5;;;;:8;:17;;;;;:23;;;;;9597:39;:47;;9643:1;9597:47;;;9639:1;9597:47;9590:54;;;9456:195;-1:-1:-1;;;9456:195:5:o;13026:695::-;13090:23;13116:17;;;:8;:17;;;;;13149:13;;;;;;13144:49;;13171:22;;-1:-1:-1;;;13171:22:5;;;;;;;;;;;13144:49;13353:13;;;:21;;-1:-1:-1;;13353:21:5;;;13399:15;;-1:-1:-1;;;;;13399:15:5;13369:5;13393:22;;;:5;:22;;;;;;;;:26;;;13429:28;;-1:-1:-1;;;;;;13429:28:5;;;13353:21;13542:15;;;;13534:24;;:7;:24;;;;;:36;;13353:21;;13534:24;;:36;;13353:21;;13534:36;:::i;:::-;;;;;;;;13665:1;13648:13;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;;13682:32:5;;13706:7;;13682:32;;;;;13080:641;13026:695;:::o;3991:504::-;4056:17;4111:18;;;:8;:18;;;;;:34;;;4199:19;4111:34;4217:1;4199:19;:::i;:::-;4168:20;;;;:10;:20;;;;;:27;:50;4164:262;;4388:20;;;;:10;:20;;;;;:27;;;;;;;;4164:262;4451:20;;;;:10;:20;;;;;:37;;4472:15;;4451:37;;;;;;:::i;:::-;;;;;;;;;;;4444:44;;;3991:504;;;:::o;16028:552::-;16144:30;;;;:16;;;:30;;;;;;;;:35;;16141:66;;16188:19;;-1:-1:-1;;;16188:19:5;;;;;;;;;;;16141:66;16220:22;;;;:8;:22;;;;;:28;;;;;16217:57;;;16257:17;;-1:-1:-1;;;16257:17:5;;;;;;;;;;;16217:57;16357:1;16336:10;:17;;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;16433:30:5;;;;:16;;;:30;;;;;;;;:35;;:30;:35;16429:86;;;16503:1;16484:10;:15;;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;16429:86:5;16530:43;;16560:12;;16551:7;;16530:43;;;;;16028:552;;;:::o;13727:1983::-;13816:13;13847:19;13880:16;14067:1;14047:10;:17;;;:21;14043:130;;;14095:67;14115:46;14133:27;14155:4;14133:10;:17;;;:21;;:27;;;;:::i;:::-;14123:4;;14115:17;:46::i;:::-;14095:15;;;;;:19;:67::i;:::-;14084:78;;14043:130;14183:19;14217:6;14205:8;:18;;:39;;-1:-1:-1;;14205:39:5;;;14231:1;14205:39;14309:22;;14183:61;;-1:-1:-1;14309:40:5;;;;:22;;;;;;:40;;;14305:472;;14365:39;;:22;:39;;;;;;;-1:-1:-1;;14365:39:5;;;;;;;;;14455:18;;;;:36;;14476:15;;14455:36;:::i;:::-;14431:60;;14525:19;;14509:13;:35;14506:261;;;14564:18;14629:13;14607:19;;:35;;;;:::i;:::-;14585:10;:18;;;:58;;;;:::i;:::-;14564:79;;14666:37;14692:10;14666:37;;;;8792:25:8;;8780:2;8765:18;;8747:76;14666:37:5;;;;;;;;14721:18;;;:31;14506:261;14351:426;14305:472;14852:10;:18;;;14833:15;:37;14829:461;;14976:19;14998:24;15013:8;14998:14;:24::i;:::-;14976:46;-1:-1:-1;15050:61:5;15070:40;15088:21;14976:46;15104:4;15088:15;:21::i;15070:40::-;15050:15;;;;;:19;:61::i;:::-;15036:75;;14872:250;14829:461;;;15239:4;15228:15;;15271:8;15257:22;;14829:461;15300:12;15330:6;15315:11;:21;;:42;;-1:-1:-1;;15315:42:5;;;15344:1;15315:42;15300:57;-1:-1:-1;15372:18:5;;;;15388:1;15372:18;15368:157;;;15440:32;;15417:4;;-1:-1:-1;15463:8:5;;15440:32;;;;;15486:28;15505:8;15486:18;:28::i;:::-;15538:8;15535:169;;;15567:36;;;8996:25:8;;;8942:4;9057:21;;;9052:2;9037:18;;9030:49;15567:36:5;;8969:18:8;15567:36:5;;;;;;;15617:26;;-1:-1:-1;;15617:26:5;15639:4;15617:26;;;:19;15657:18;;;:8;:18;;;;;:34;;:36;;;;;;:::i;:::-;;;;;;15535:169;13806:1904;;;;;13727:1983;;:::o;11681:85::-;11722:7;11750:9;;11748:11;;;;;:::i;:::-;;;;;-1:-1:-1;11748:11:5;11681:85;-1:-1:-1;11681:85:5:o;21270:130:7:-;21328:14;21363:30;21388:1;21391;21363:24;:30::i;3839:127::-;3897:14;3932:27;3947:1;1359:4;3957:1;3932:14;:27::i;20191:1149:6:-;20262:14;;;-1:-1:-1;;20377:1:6;20374;20367:20;20416:1;20413;20409:9;20400:18;;20467:5;20463:2;20460:13;20452:5;20448:2;20444:14;20440:34;20431:43;;;4210:4;20498:5;:14;20494:92;;20535:40;;-1:-1:-1;;;20535:40:6;;;;;8792:25:8;;;8765:18;;20535:40:6;;;;;;;;20494:92;20596:17;20623:19;20701:5;20698:1;20695;20688:19;20675:32;-1:-1:-1;;20749:18:6;20735:33;;20792:10;20788:152;;20873:11;4210:4;20856:5;:13;20855:29;20846:38;;20902:13;;;;;;20788:152;21189:11;21061:21;;;21057:39;21137:20;;;;21126:32;;;-1:-1:-1;;;21122:84:6;21029:199;;;;21250:13;21004:277;20983:341;;-1:-1:-1;20191:1149:6;;;;:::o;15079:3983::-;15191:14;;;-1:-1:-1;;15680:1:6;15677;15670:20;15719:1;15716;15712:9;15703:18;;15770:5;15766:2;15763:13;15755:5;15751:2;15747:14;15743:34;15734:43;;;15860:5;15869:1;15860:10;15856:138;;;15931:11;15923:5;:19;;;;;:::i;:::-;;15914:28;;15970:13;;;;15856:138;16101:11;16092:5;:20;16088:101;;16135:43;;-1:-1:-1;;;16135:43:6;;;;;9264:25:8;;;9305:18;;;9298:34;;;9237:18;;16135:43:6;9219:119:8;16088:101:6;16424:17;16547:11;16544:1;16541;16534:25;17956:1;17093;17078:12;;:16;;17063:32;;17201:25;;;;17937:1;:15;;17936:21;;18189;;;18185:25;;18174:36;18258:21;;;18254:25;;18243:36;18328:21;;;18324:25;;18313:36;18398:21;;;18394:25;;18383:36;18468:21;;;18464:25;;18453:36;18539:21;;;18535:25;;;18524:36;;;17045:15;17467;;;17463:29;;;17459:37;;;16653:20;;;16642:32;;;17585:15;;;;16696:21;;17305:19;;;;17576:24;;;;19003:15;;;-1:-1:-1;;;;15079:3983:6:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:8;82:20;;-1:-1:-1;;;;;131:31:8;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:347::-;243:8;253:6;307:3;300:4;292:6;288:17;284:27;274:2;;325:1;322;315:12;274:2;-1:-1:-1;348:20:8;;391:18;380:30;;377:2;;;423:1;420;413:12;377:2;460:4;452:6;448:17;436:29;;512:3;505:4;496:6;488;484:19;480:30;477:39;474:2;;;529:1;526;519:12;474:2;264:275;;;;;:::o;544:186::-;603:6;656:2;644:9;635:7;631:23;627:32;624:2;;;672:1;669;662:12;624:2;695:29;714:9;695:29;:::i;735:260::-;803:6;811;864:2;852:9;843:7;839:23;835:32;832:2;;;880:1;877;870:12;832:2;903:29;922:9;903:29;:::i;:::-;893:39;;951:38;985:2;974:9;970:18;951:38;:::i;:::-;941:48;;822:173;;;;;:::o;1000:328::-;1077:6;1085;1093;1146:2;1134:9;1125:7;1121:23;1117:32;1114:2;;;1162:1;1159;1152:12;1114:2;1185:29;1204:9;1185:29;:::i;:::-;1175:39;;1233:38;1267:2;1256:9;1252:18;1233:38;:::i;:::-;1223:48;;1318:2;1307:9;1303:18;1290:32;1280:42;;1104:224;;;;;:::o;1333:626::-;1430:6;1438;1446;1454;1462;1515:3;1503:9;1494:7;1490:23;1486:33;1483:2;;;1532:1;1529;1522:12;1483:2;1555:29;1574:9;1555:29;:::i;:::-;1545:39;;1603:38;1637:2;1626:9;1622:18;1603:38;:::i;:::-;1593:48;;1688:2;1677:9;1673:18;1660:32;1650:42;;1743:2;1732:9;1728:18;1715:32;1770:18;1762:6;1759:30;1756:2;;;1802:1;1799;1792:12;1756:2;1841:58;1891:7;1882:6;1871:9;1867:22;1841:58;:::i;:::-;1473:486;;;;-1:-1:-1;1473:486:8;;-1:-1:-1;1918:8:8;;1815:84;1473:486;-1:-1:-1;;;1473:486:8:o;1964:315::-;2029:6;2037;2090:2;2078:9;2069:7;2065:23;2061:32;2058:2;;;2106:1;2103;2096:12;2058:2;2129:29;2148:9;2129:29;:::i;:::-;2119:39;;2208:2;2197:9;2193:18;2180:32;2221:28;2243:5;2221:28;:::i;:::-;2268:5;2258:15;;;2048:231;;;;;:::o;2284:484::-;2364:6;2372;2380;2433:2;2421:9;2412:7;2408:23;2404:32;2401:2;;;2449:1;2446;2439:12;2401:2;2472:29;2491:9;2472:29;:::i;:::-;2462:39;;2552:2;2541:9;2537:18;2524:32;2579:18;2571:6;2568:30;2565:2;;;2611:1;2608;2601:12;2565:2;2650:58;2700:7;2691:6;2680:9;2676:22;2650:58;:::i;:::-;2391:377;;2727:8;;-1:-1:-1;2624:84:8;;-1:-1:-1;;;;2391:377:8:o;2773:254::-;2841:6;2849;2902:2;2890:9;2881:7;2877:23;2873:32;2870:2;;;2918:1;2915;2908:12;2870:2;2941:29;2960:9;2941:29;:::i;:::-;2931:39;3017:2;3002:18;;;;2989:32;;-1:-1:-1;;;2860:167:8:o;3032:286::-;3090:6;3143:2;3131:9;3122:7;3118:23;3114:32;3111:2;;;3159:1;3156;3149:12;3111:2;3185:23;;-1:-1:-1;;;;;;3237:32:8;;3227:43;;3217:2;;3284:1;3281;3274:12;3323:245;3390:6;3443:2;3431:9;3422:7;3418:23;3414:32;3411:2;;;3459:1;3456;3449:12;3411:2;3491:9;3485:16;3510:28;3532:5;3510:28;:::i;3573:180::-;3632:6;3685:2;3673:9;3664:7;3660:23;3656:32;3653:2;;;3701:1;3698;3691:12;3653:2;-1:-1:-1;3724:23:8;;3643:110;-1:-1:-1;3643:110:8:o;3758:309::-;3823:6;3831;3884:2;3872:9;3863:7;3859:23;3855:32;3852:2;;;3900:1;3897;3890:12;3852:2;3936:9;3923:23;3913:33;;3996:2;3985:9;3981:18;3968:32;4009:28;4031:5;4009:28;:::i;4072:248::-;4140:6;4148;4201:2;4189:9;4180:7;4176:23;4172:32;4169:2;;;4217:1;4214;4207:12;4169:2;-1:-1:-1;;4240:23:8;;;4310:2;4295:18;;;4282:32;;-1:-1:-1;4159:161:8:o;4325:620::-;4434:6;4442;4450;4458;4466;4474;4527:3;4515:9;4506:7;4502:23;4498:33;4495:2;;;4544:1;4541;4534:12;4495:2;4573:9;4567:16;4557:26;;4623:2;4612:9;4608:18;4602:25;4592:35;;4670:2;4659:9;4655:18;4649:25;4683:28;4705:5;4683:28;:::i;:::-;4730:5;4720:15;;;4775:2;4764:9;4760:18;4754:25;4744:35;;4819:3;4808:9;4804:19;4798:26;4788:36;;4869:3;4858:9;4854:19;4848:26;4883:30;4905:7;4883:30;:::i;:::-;4932:7;4922:17;;;4485:460;;;;;;;;:::o;4950:316::-;5027:6;5035;5043;5096:2;5084:9;5075:7;5071:23;5067:32;5064:2;;;5112:1;5109;5102:12;5064:2;-1:-1:-1;;5135:23:8;;;5205:2;5190:18;;5177:32;;-1:-1:-1;5256:2:8;5241:18;;;5228:32;;5054:212;-1:-1:-1;5054:212:8:o;5271:268::-;5323:3;5361:5;5355:12;5388:6;5383:3;5376:19;5404:63;5460:6;5453:4;5448:3;5444:14;5437:4;5430:5;5426:16;5404:63;:::i;:::-;5521:2;5500:15;-1:-1:-1;;5496:29:8;5487:39;;;;5528:4;5483:50;;5331:208;-1:-1:-1;;5331:208:8:o;5544:185::-;5586:3;5624:5;5618:12;5639:52;5684:6;5679:3;5672:4;5665:5;5661:16;5639:52;:::i;:::-;5707:16;;;;;5594:135;-1:-1:-1;;5594:135:8:o;5734:1174::-;5910:3;5939:1;5972:6;5966:13;6002:3;6024:1;6052:9;6048:2;6044:18;6034:28;;6112:2;6101:9;6097:18;6134;6124:2;;6178:4;6170:6;6166:17;6156:27;;6124:2;6204;6252;6244:6;6241:14;6221:18;6218:38;6215:2;;;-1:-1:-1;;;6279:33:8;;6335:4;6332:1;6325:15;6365:4;6286:3;6353:17;6215:2;6396:18;6423:104;;;;6541:1;6536:320;;;;6389:467;;6423:104;-1:-1:-1;;6456:24:8;;6444:37;;6501:16;;;;-1:-1:-1;6423:104:8;;6536:320;10299:1;10292:14;;;10336:4;10323:18;;6631:1;6645:165;6659:6;6656:1;6653:13;6645:165;;;6737:14;;6724:11;;;6717:35;6780:16;;;;6674:10;;6645:165;;;6649:3;;6839:6;6834:3;6830:16;6823:23;;6389:467;;;;;;;6872:30;6898:3;6890:6;6872:30;:::i;7504:230::-;7653:2;7642:9;7635:21;7616:4;7673:55;7724:2;7713:9;7709:18;7701:6;7673:55;:::i;8208:433::-;8381:2;8370:9;8363:21;8344:4;8419:6;8413:13;8462:4;8457:2;8446:9;8442:18;8435:32;8490:61;8547:2;8536:9;8532:18;8518:12;8490:61;:::i;:::-;8476:75;;8607:2;8599:6;8595:15;8589:22;8582:4;8571:9;8567:20;8560:52;8629:6;8621:14;;;8353:288;;;;:::o;10352:128::-;10392:3;10423:1;10419:6;10416:1;10413:13;10410:2;;;10429:18;;:::i;:::-;-1:-1:-1;10465:9:8;;10400:80::o;10485:125::-;10525:4;10553:1;10550;10547:8;10544:2;;;10558:18;;:::i;:::-;-1:-1:-1;10595:9:8;;10534:76::o;10615:258::-;10687:1;10697:113;10711:6;10708:1;10705:13;10697:113;;;10787:11;;;10781:18;10768:11;;;10761:39;10733:2;10726:10;10697:113;;;10828:6;10825:1;10822:13;10819:2;;;-1:-1:-1;;10863:1:8;10845:16;;10838:27;10668:205::o;10878:380::-;10957:1;10953:12;;;;11000;;;11021:2;;11075:4;11067:6;11063:17;11053:27;;11021:2;11128;11120:6;11117:14;11097:18;11094:38;11091:2;;;11174:10;11169:3;11165:20;11162:1;11155:31;11209:4;11206:1;11199:15;11237:4;11234:1;11227:15;11091:2;;10933:325;;;:::o;11263:135::-;11302:3;-1:-1:-1;;11323:17:8;;11320:2;;;11343:18;;:::i;:::-;-1:-1:-1;11390:1:8;11379:13;;11310:88::o;11403:127::-;11464:10;11459:3;11455:20;11452:1;11445:31;11495:4;11492:1;11485:15;11519:4;11516:1;11509:15;11535:127;11596:10;11591:3;11587:20;11584:1;11577:31;11627:4;11624:1;11617:15;11651:4;11648:1;11641:15;11667:127;11728:10;11723:3;11719:20;11716:1;11709:31;11759:4;11756:1;11749:15;11783:4;11780:1;11773:15;11799:118;11885:5;11878:13;11871:21;11864:5;11861:32;11851:2;;11907:1;11904;11897:12;11851:2;11841:76;:::o;11922:117::-;12008:5;12005:1;11994:20;11987:5;11984:31;11974:2;;12029:1;12026;12019:12"},"gasEstimates":{"creation":{"codeDepositCost":"1604800","executionCost":"infinite","totalCost":"infinite"},"external":{"FOUNDERS_VOUCHER()":"2363","PENDING_PERIOD()":"2427","QUIET_ENDING_PERIOD()":"2385","VOTING_PERIOD()":"2428","_nEntries()":"2385","approve(address,uint256)":"428","balanceOf(address)":"4980","canVote(uint256,uint256)":"9261","challenge(uint256)":"infinite","executeVote(uint256)":"infinite","getAccount(uint256)":"9235","getApproved(uint256)":"386","getChallenge(uint256)":"infinite","getChallengeVote(uint256,uint256)":"infinite","getSpecificChallenge(uint256,uint256)":"13444","getSpecificChallengeVote(uint256,uint256,uint256)":"4937","getTokenPersonCid(uint256)":"infinite","getTokenVouch(uint256)":"infinite","getTotalVoters(uint256)":"8994","getVoucherVouchesNumber(uint256)":"2505","invalidateInvalidVoucher(uint256)":"infinite","invalidateVote(uint256,uint256)":"infinite","isApprovedForAll(address,address)":"infinite","isSolidified(uint256)":"13477","name()":"infinite","ownerOf(uint256)":"2608","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"472","supportsInterface(bytes4)":"365","symbol()":"infinite","tokenIdOf(address)":"2617","tokenURI(uint256)":"infinite","totalSupply()":"2442","transferFrom(address,address,uint256)":"infinite","vote(uint256,int8)":"infinite","vouch(address,string)":"infinite"},"internal":{"_balanceOf(address)":"4463","_executeVote(struct Registry.Challenge storage pointer,uint256)":"infinite","_invalidateAccount(uint256)":"infinite","_invalidateVote(uint256,struct Registry.Challenge storage pointer,uint256)":"infinite","_ownerOf(uint256)":"infinite","_tokenIdOf(address)":"infinite","_totalSupply()":"infinite","_vouch(uint256,address,string memory)":"infinite","getCurrentChallenge(uint256)":"31011","nextTokenId()":"24310"}},"methodIdentifiers":{"FOUNDERS_VOUCHER()":"3c823b6b","PENDING_PERIOD()":"fe131778","QUIET_ENDING_PERIOD()":"84864be7","VOTING_PERIOD()":"b1610d7e","_nEntries()":"173ac141","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","canVote(uint256,uint256)":"ef233c0b","challenge(uint256)":"ab82d9a0","executeVote(uint256)":"f98a4eca","getAccount(uint256)":"ce88b145","getApproved(uint256)":"081812fc","getChallenge(uint256)":"1bdd4b74","getChallengeVote(uint256,uint256)":"d61255f3","getSpecificChallenge(uint256,uint256)":"5e3bee73","getSpecificChallengeVote(uint256,uint256,uint256)":"912dac06","getTokenPersonCid(uint256)":"3fb1a836","getTokenVouch(uint256)":"130a8d80","getTotalVoters(uint256)":"43d3a4c1","getVoucherVouchesNumber(uint256)":"5d1f0a31","invalidateInvalidVoucher(uint256)":"9a489620","invalidateVote(uint256,uint256)":"d9eeebed","isApprovedForAll(address,address)":"e985e9c5","isSolidified(uint256)":"82c0833b","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenIdOf(address)":"773c02d4","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","vote(uint256,int8)":"ee650248","vouch(address,string)":"0c104878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"__symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"__name\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"foundersCids\",\"type\":\"string[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccountAlreadyOwnsOneToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantChallengeInvalidAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ChallangeAlreadyActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrorAccountNotValid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrorAccountSolidified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrorAlreadyVoted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrorChallangeAlreadyExecuted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrorChallangeNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrorVoteNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrorVoteOnOwnChallenge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrorVoterCantVote\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrorVoterValid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrorVotingPeriodEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrorVoucherIsValid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrorVoucherNotValid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prod1\",\"type\":\"uint256\"}],\"name\":\"PRBMath__MulDivFixedPointOverflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prod1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"PRBMath__MulDivOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnexpectedExecutedCondition\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VoucherNoLongerInvalid\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ChallengeEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int8\",\"name\":\"outcome\",\"type\":\"int8\"}],\"name\":\"ChallengeExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"InvalidatedAccountEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"InvalidatedByChallenge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"InvalidatedByInvalidVoucher\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"voterTokenId\",\"type\":\"uint256\"}],\"name\":\"InvalidatedVoteEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"voterTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int8\",\"name\":\"vote\",\"type\":\"int8\"}],\"name\":\"VoteEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newEndDate\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodExtendedEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"personCid\",\"type\":\"string\"}],\"name\":\"VouchEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FOUNDERS_VOUCHER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PENDING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUIET_ENDING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_nEntries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"voterTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"challengedTokenId\",\"type\":\"uint256\"}],\"name\":\"canVote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"challenge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"executeVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getAccount\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"voucher\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"timesChallenged\",\"type\":\"uint256\"}],\"internalType\":\"struct Registry.Account\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getChallenge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"int8\",\"name\":\"lastOutcome\",\"type\":\"int8\"},{\"internalType\":\"uint256\",\"name\":\"nVoted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nFor\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voterTokenId\",\"type\":\"uint256\"}],\"name\":\"getChallengeVote\",\"outputs\":[{\"internalType\":\"int8\",\"name\":\"\",\"type\":\"int8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"challengeIndex\",\"type\":\"uint256\"}],\"name\":\"getSpecificChallenge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"int8\",\"name\":\"lastOutcome\",\"type\":\"int8\"},{\"internalType\":\"uint256\",\"name\":\"nVoted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nFor\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voterTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"challengeIndex\",\"type\":\"uint256\"}],\"name\":\"getSpecificChallengeVote\",\"outputs\":[{\"internalType\":\"int8\",\"name\":\"\",\"type\":\"int8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenPersonCid\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenVouch\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"personCid\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"vouchDate\",\"type\":\"uint256\"}],\"internalType\":\"struct Registry.Vouch\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getTotalVoters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"voucherTokenId\",\"type\":\"uint256\"}],\"name\":\"getVoucherVouchesNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"invalidateInvalidVoucher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_voterTokenId\",\"type\":\"uint256\"}],\"name\":\"invalidateVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isSolidified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokenIdOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"int8\",\"name\":\"_vote\",\"type\":\"int8\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"personCid\",\"type\":\"string\"}],\"name\":\"vouch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"Registry\",\"version\":1},\"userdoc\":{\"errors\":{\"ErrorAccountSolidified()\":[{\"notice\":\"Errors \"}],\"PRBMath__MulDivFixedPointOverflow(uint256)\":[{\"notice\":\"Emitted when the result overflows uint256.\"}],\"PRBMath__MulDivOverflow(uint256,uint256)\":[{\"notice\":\"Emitted when the result overflows uint256.\"}]},\"kind\":\"user\",\"methods\":{\"canVote(uint256,uint256)\":{\"notice\":\"A tokenId can vote if - The voter account is valid - AND either - voterTokenId was vouched by voucherTokenId (which is the voucher of the challenged tokenId) - OR the voterTokenId is the voucherTokenId themselves.  The FOUNDERS_VOUCHER can, in theory vote on founders challenges, but no address owns that  token and so no problem \"},\"vouch(address,string)\":{\"notice\":\"The msgSender must be a valid account in the registry and vouch for the provided account and personCid pair\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Registry.sol\":\"Registry\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Registry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"prb-math/contracts/PRBMathUD60x18.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\\\";\\n\\n/**\\n * @title Registry\\n */\\n\\ncontract Registry is Context, IERC721, IERC721Metadata {\\n    using PRBMathUD60x18 for uint256;\\n\\n    uint256 public PENDING_PERIOD = 180 days;\\n    uint256 public VOTING_PERIOD = 15 days;\\n    uint256 public QUIET_ENDING_PERIOD = 2 days;\\n\\n    uint256 public FOUNDERS_VOUCHER = type(uint256).max;\\n    string internal baseURI = \\\"ipfs://\\\";\\n    string internal _symbol;\\n    string internal _name;\\n\\n    struct Vouch {\\n        string personCid;\\n        uint256 vouchDate;\\n    }\\n\\n    struct Vouches {\\n        uint256 number;\\n        mapping(uint256 => Vouch) vouches;\\n    }\\n\\n    struct Account {\\n        address account;    \\n        uint256 voucher;\\n        bool valid;\\n        uint256 timesChallenged;\\n    }\\n\\n    struct Challenge {\\n        bool executed;\\n        int8 lastOutcome;\\n        uint256 creationDate;\\n        uint256 endDate;\\n        mapping(uint256 => int8) votes;\\n        uint256 nVoted;\\n        uint256 nFor;\\n    }\\n\\n    mapping(uint256 => Vouches) vouches;\\n\\n    /** \\n     * two mappings hold the address to token id relationship,\\n     * but this is a one-to-one relationship. TokenIds\\n     * are preferred as they can be memorized by users.\\n     */\\n    mapping(uint256 => Account) accounts;\\n    mapping(address => uint256) owned;\\n\\n    mapping(uint256 => Challenge[]) challenges;\\n\\n    uint256 __totalSupply; // sum of currenlty valid accounts\\n    uint256 public _nEntries; // sequential number that increments with every vouch (and gives the tokenId)\\n\\n    event VouchEvent(uint256 indexed from, uint256 indexed to, string personCid);\\n    event InvalidatedAccountEvent(uint256 indexed tokenId);\\n    event InvalidatedByChallenge(uint256 indexed tokenId);\\n    event InvalidatedByInvalidVoucher(uint256 indexed tokenId);\\n\\n    event ChallengeEvent(uint256 indexed tokenId);\\n    event ChallengeExecuted(uint256 tokenId, int8 outcome);        \\n    event VoteEvent(uint256 indexed voterTokenId, uint256 tokenId, int8 vote);\\n    event InvalidatedVoteEvent(uint256 indexed tokenId, uint256 indexed voterTokenId);\\n    event VotingPeriodExtendedEvent(uint256 newEndDate);\\n\\n    /** Errors */\\n    error ErrorAccountSolidified();\\n    error CantChallengeInvalidAccount();\\n    error ChallangeAlreadyActive();    \\n    error ErrorVoteOnOwnChallenge();\\n    error ErrorChallangeAlreadyExecuted();\\n    error ErrorChallangeNotActive();\\n    error ErrorVotingPeriodEnded();\\n    error ErrorVoterCantVote();\\n    error ErrorAlreadyVoted();\\n    error ErrorVoucherIsValid();\\n    error ErrorVoucherNotValid();\\n    error ErrorAccountNotValid();\\n    error ErrorVoteNotFound();\\n    error ErrorVoterValid();\\n    error VoucherNoLongerInvalid();\\n    error AccountAlreadyOwnsOneToken();\\n    error UnexpectedExecutedCondition();\\n\\n    /***************\\n    EXTERNAL FUNCTIONS\\n    ***************/\\n    constructor(string memory __symbol, string memory __name, address[] memory addresses, string[] memory foundersCids) {\\n        _symbol = __symbol;\\n        _name = __name;\\n        __totalSupply = 0;\\n        _nEntries = 0;\\n        for (uint8 ix = 0; ix < addresses.length; ix++) {\\n            /** special case of founder vouchers being a dumb token ID */\\n            accounts[FOUNDERS_VOUCHER].valid = true;\\n            _vouch(FOUNDERS_VOUCHER, addresses[ix], foundersCids[ix]);\\n        }\\n    }\\n\\n    /** \\n     * The msgSender must be a valid account in the registry and vouch\\n     * for the provided account and personCid pair\\n     */\\n    function vouch(address account, string calldata personCid) external {\\n        uint256 vouchTokenId = _tokenIdOf(_msgSender());\\n        _vouch(vouchTokenId, account, personCid);\\n    }\\n\\n    function getCurrentChallenge(uint256 _tokenId) internal returns (Challenge storage) {\\n        uint256 timesChallenged = accounts[_tokenId].timesChallenged;\\n        \\n        if (challenges[_tokenId].length != timesChallenged + 1) {\\n            /** the currentChallenge must be the last challenge in the array, \\n             * the first time is read it does not exist so we create it */\\n            challenges[_tokenId].push();\\n        }\\n        \\n        return challenges[_tokenId][timesChallenged];\\n    }\\n\\n    function challenge(uint256 _tokenId) external {\\n        if(isSolidified(_tokenId)) {\\n            revert ErrorAccountSolidified();\\n        }\\n\\n        if(!accounts[_tokenId].valid) {\\n            revert CantChallengeInvalidAccount();\\n        }\\n\\n        Challenge storage _challenge = getCurrentChallenge(_tokenId);\\n        if(_challenge.creationDate > 0) revert ChallangeAlreadyActive();\\n        if(_challenge.executed) revert UnexpectedExecutedCondition();\\n\\n        _challenge.creationDate = block.timestamp;\\n        _challenge.endDate = block.timestamp + VOTING_PERIOD;\\n        _challenge.lastOutcome = -1;\\n\\n        emit ChallengeEvent(_tokenId);\\n    }\\n\\n    function vote(uint256 _tokenId, int8 _vote) external {\\n        uint256 voterTokenId = _tokenIdOf(_msgSender());\\n        Challenge storage _challenge = getCurrentChallenge(_tokenId);\\n        \\n        if(_challenge.creationDate == 0) revert ErrorChallangeNotActive();\\n        if(_challenge.executed) revert ErrorChallangeAlreadyExecuted();\\n        if(block.timestamp > _challenge.endDate) revert ErrorVotingPeriodEnded();\\n        if(!canVote(voterTokenId, _tokenId)) revert ErrorVoterCantVote();\\n        if(_challenge.votes[voterTokenId] != 0) revert ErrorAlreadyVoted();\\n\\n        _challenge.votes[voterTokenId] = _vote == 1 ? int8(1) : int8(-1);\\n        _challenge.nVoted += 1;\\n        _challenge.nFor += _vote == 1 ? 1 : 0;\\n\\n        emit VoteEvent(voterTokenId, _tokenId, _vote);\\n\\n        _executeVote(_challenge, _tokenId);\\n    }\\n\\n    function executeVote(uint256 _tokenId) external {\\n        Challenge storage _challenge = getCurrentChallenge(_tokenId);\\n        _executeVote(_challenge, _tokenId);\\n    }\\n\\n    function invalidateInvalidVoucher(uint256 tokenId) external {\\n        uint256 voucherTokenId = accounts[tokenId].voucher;\\n        if(accounts[voucherTokenId].valid) revert ErrorVoucherIsValid();\\n\\n        emit InvalidatedByInvalidVoucher(tokenId);\\n        _invalidateAccount(tokenId);\\n    }\\n\\n    function invalidateVote(uint256 _tokenId, uint256 _voterTokenId) external {\\n        Challenge storage _challenge = getCurrentChallenge(_tokenId);\\n        _invalidateVote(_tokenId, _challenge, _voterTokenId);\\n    }\\n\\n    /***************\\n    VIEW FUNCTIONS\\n    ***************/\\n    function totalSupply() external view returns (uint256) {\\n        return _totalSupply();\\n    }\\n\\n    function _totalSupply() internal view returns (uint256) {\\n        return __totalSupply;\\n    }\\n\\n    function getTokenPersonCid(uint256 tokenId) public view returns (string memory) {\\n        uint256 voucherTokenId = accounts[tokenId].voucher;\\n        return vouches[voucherTokenId].vouches[tokenId].personCid;\\n    }\\n\\n    function getTotalVoters(uint256 _tokenId) public view returns (uint256) {\\n        uint256 voucherTokenId = accounts[_tokenId].voucher;\\n        Vouches storage _vouches = vouches[voucherTokenId];\\n\\n        /**\\n         * The number of vouches for valid accounts minus the voted account plus the voucher\\n         * number = _vouches.number - 1 + 1\\n         */\\n        uint256 number = _vouches.number;\\n\\n        /** special case for the founder accounts where the voucher cannot vote */\\n        if (voucherTokenId == FOUNDERS_VOUCHER) {\\n            number = _vouches.number - 1;\\n        }\\n\\n        return number;\\n    }\\n\\n    /** \\n     * A tokenId can vote if\\n     * - The voter account is valid\\n     * - AND either\\n     * - voterTokenId was vouched by voucherTokenId (which is the voucher of the challenged tokenId)\\n     * - OR the voterTokenId is the voucherTokenId themselves.\\n     * \\n     * The FOUNDERS_VOUCHER can, in theory vote on founders challenges, but no address owns that \\n     * token and so no problem\\n     * */\\n    function canVote(uint256 voterTokenId, uint256 challengedTokenId) public view returns (bool) {\\n        if (voterTokenId == challengedTokenId) return false;\\n        if (voterTokenId == 0) return false;\\n\\n        uint256 voucherTokenId = accounts[challengedTokenId].voucher;\\n        if(!accounts[voucherTokenId].valid) revert VoucherNoLongerInvalid();\\n\\n        bool isInCircle = accounts[voterTokenId].voucher == voucherTokenId || voterTokenId == voucherTokenId;\\n\\n        if (accounts[voterTokenId].valid && isInCircle) return true;\\n        \\n        return false;\\n    }\\n\\n    function isSolidified(uint256 tokenId) public view returns (bool) {\\n        Account memory account = accounts[tokenId];\\n        uint256 vouchDate = vouches[account.voucher].vouches[tokenId].vouchDate;\\n\\n        bool isPending = vouchDate == 0 || block.timestamp <= vouchDate + PENDING_PERIOD;\\n        return !isPending && account.valid;\\n    }\\n\\n    function tokenIdOf(address owner) external view returns(uint256){\\n        return _tokenIdOf(owner);\\n    }\\n\\n    function _tokenIdOf(address owner) internal view returns(uint256){\\n        return owned[owner];\\n    }\\n\\n    function balanceOf(address account) public view override returns (uint256 balance) {\\n        return _balanceOf(account);\\n    }\\n\\n    function _balanceOf(address account) internal view returns (uint256 balance) {\\n        uint256 tokenId = _tokenIdOf(account);\\n        return tokenId != 0 && accounts[tokenId].valid ? 1 : 0;\\n    }\\n\\n    function ownerOf(uint256 tokenId) external view override returns (address owner) {\\n        return _ownerOf(tokenId); \\n    }\\n\\n    function _ownerOf(uint256 tokenId) internal view returns (address owner) {\\n        return accounts[tokenId].account; \\n    }\\n\\n    function getChallenge(uint256 tokenId) external view returns (uint256 creationDate, uint256 endDate, int8 lastOutcome, uint256 nVoted, uint256 nFor, bool executed) {\\n        uint256 challengeIndex = accounts[tokenId].timesChallenged;\\n        return this.getSpecificChallenge(tokenId, challengeIndex);\\n    }\\n\\n    function getChallengeVote(uint256 tokenId, uint256 voterTokenId) external view returns (int8) {\\n        uint256 challengeIndex = accounts[tokenId].timesChallenged;\\n        return this.getSpecificChallengeVote(tokenId, voterTokenId, challengeIndex);\\n    }\\n\\n    function getSpecificChallenge(uint256 tokenId, uint256 challengeIndex) external view returns (uint256 creationDate, uint256 endDate, int8 lastOutcome, uint256 nVoted, uint256 nFor, bool executed) {\\n        Challenge storage _challenge = challenges[tokenId][challengeIndex];\\n        return (_challenge.creationDate, _challenge.endDate, _challenge.lastOutcome, _challenge.nVoted, _challenge.nFor, _challenge.executed);\\n    }\\n\\n    function getSpecificChallengeVote(uint256 tokenId, uint256 voterTokenId, uint256 challengeIndex) external view returns (int8) {\\n        Challenge storage _challenge = challenges[tokenId][challengeIndex];\\n        return _challenge.votes[voterTokenId];\\n    }\\n\\n    function getVoucherVouchesNumber(uint256 voucherTokenId) public view returns (uint256) {\\n        Vouches storage _vouches = vouches[voucherTokenId];\\n        return _vouches.number;\\n    }\\n\\n    function getTokenVouch(uint256 tokenId) public view returns (Vouch memory) {\\n        uint256 voucher = accounts[tokenId].voucher;\\n        return vouches[voucher].vouches[tokenId];\\n    }\\n\\n    function getAccount(uint256 tokenId) public view returns (Account memory) {\\n        return accounts[tokenId];\\n    }\\n\\n    function nextTokenId() internal returns (uint256) {\\n        return ++_nEntries;\\n    }\\n\\n    /***************\\n    INTERNAL FUNCTIONS\\n    ***************/\\n\\n    /** Claiming is always enabled (effectively possible only when a non-zero approved merkleRoot is set) */\\n    function _vouch(uint256 _voucherTokenId, address _account, string memory _personCid) internal {\\n        uint256 _tokenId = nextTokenId();\\n        if(!accounts[_voucherTokenId].valid) revert ErrorVoucherNotValid();\\n        if (owned[_account] != 0) revert AccountAlreadyOwnsOneToken();\\n        \\n        Vouches storage tokenVouches = vouches[_voucherTokenId];\\n        Vouch storage __vouch = tokenVouches.vouches[_tokenId];\\n\\n        /** \\n         * Store the vouch data, validate and store the account data, set the owned mapping and update the \\n         * total number of vouches and entries in the registry\\n         */\\n        __vouch.personCid = _personCid;\\n        __vouch.vouchDate = block.timestamp;\\n\\n        accounts[_tokenId].account = _account;\\n        accounts[_tokenId].voucher = _voucherTokenId;\\n        accounts[_tokenId].valid = true;\\n\\n        owned[_account] = _tokenId;\\n\\n        tokenVouches.number += 1;\\n        __totalSupply += 1;\\n\\n        emit Transfer(address(0), _account, _tokenId);\\n        emit VouchEvent(_voucherTokenId, _tokenId, _personCid);\\n    }\\n\\n    function _invalidateAccount(uint256 tokenId) internal {\\n        Account storage account = accounts[tokenId];\\n\\n        if (!account.valid) revert ErrorAccountNotValid();\\n        \\n        /** \\n         * invalidate and remove the one-to-one relationship\\n         * between the accounts and the owned mappings\\n         */\\n        account.valid = false;\\n        \\n        owned[account.account] = 0;\\n        account.account = address(0);\\n\\n        /** decrease the number of valid members of the circle */\\n        vouches[account.voucher].number -= 1;\\n        /** decrease the number of total entries in the registry */\\n        __totalSupply -= 1;\\n\\n        emit InvalidatedAccountEvent(tokenId);\\n    }\\n\\n    function _executeVote(Challenge storage _challenge, uint256 _tokenId) internal {\\n        bool executed = false;\\n        uint256 activeRatio = 0;\\n        uint256 relRatio = 0;\\n\\n        /** \\n         * keep track of outcome changes, if outcome changed recently,\\n         * extend the voting period\\n         */\\n        if (_challenge.nVoted > 0) {\\n            relRatio = _challenge.nFor.mul(uint256(1e18).div(_challenge.nVoted.mul(1e18)));\\n        }\\n\\n        int8 currentOutcome = relRatio >= 0.5e18 ? int8(1) : int8(-1);\\n        \\n        /** Initialize the lastoutcome */\\n        if (_challenge.lastOutcome != currentOutcome) {\\n            _challenge.lastOutcome = currentOutcome;\\n            \\n            uint256 timeRemaining = _challenge.endDate - block.timestamp;\\n\\n            if(timeRemaining < QUIET_ENDING_PERIOD) {\\n                uint256 newEndDate = _challenge.endDate + (QUIET_ENDING_PERIOD - timeRemaining);\\n                emit VotingPeriodExtendedEvent(newEndDate);\\n                _challenge.endDate = newEndDate;\\n            }\\n        }\\n\\n        /** if challenge still pending */\\n        if (block.timestamp <= _challenge.endDate) {\\n            /** vote period not ended, the challenge is settled with absolute majority */\\n            uint256 totalVoters = getTotalVoters(_tokenId);\\n            activeRatio = _challenge.nFor.mul(uint256(1e18).div(totalVoters.mul(1e18)));\\n        } else {\\n            /** time period ended, the challenge is settled with relative majority */\\n            executed = true;\\n            activeRatio = relRatio;\\n        }\\n\\n        int8 outcome = activeRatio >= 0.5e18 ? int8(1) : int8(-1);\\n\\n        if (outcome == int8(1)) {\\n            executed = true;\\n            emit InvalidatedByChallenge(_tokenId);\\n            _invalidateAccount(_tokenId);\\n        }\\n\\n        if(executed) {\\n            emit ChallengeExecuted(_tokenId, outcome);\\n            _challenge.executed = true;\\n            accounts[_tokenId].timesChallenged++;\\n        }\\n    }\\n\\n    /**\\n     * Votes must be manually invalidated when a voter passes from valid to invalid. Automatic invalidation consume storage and this seems good enough\\n     * A voter should call \\\"vote\\\" to invalidate an account and \\\"_invalidateVote\\\" on all the open challenges of the recently invalidated account.\\n     */\\n    function _invalidateVote(uint256 tokenId, Challenge storage _challenge, uint256 voterTokenId) internal {\\n        if(_challenge.votes[voterTokenId] == 0) revert ErrorVoteNotFound();\\n        if(accounts[voterTokenId].valid) revert ErrorVoterValid();\\n\\n        /** decrease the total number of voters */\\n        _challenge.nVoted -= 1;\\n\\n        /** delete the positive vote of the invalid voter*/\\n        if (_challenge.votes[voterTokenId] == 1) {\\n            _challenge.nFor -= 1;\\n        }\\n\\n        emit InvalidatedVoteEvent(tokenId, voterTokenId);\\n    }\\n\\n    function supportsInterface(bytes4 interfaceId) external view override returns (bool) {}\\n\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external override {}\\n\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external override {}\\n\\n    function transferFrom(address from, address to, uint256 tokenId) external override {}\\n\\n    function approve(address to, uint256 tokenId) external override {}\\n\\n    function setApprovalForAll(address operator, bool approved) external override {}\\n\\n    function getApproved(uint256) external view override returns (address operator) {\\n        return address(0);\\n    }\\n\\n    function isApprovedForAll(address, address) external view override returns (bool) {\\n        return false;\\n    }\\n\\n    function name() external view override returns (string memory) {\\n        return _name;\\n    }\\n\\n    function symbol() external view override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    function tokenURI(uint256 tokenId) external view override returns (string memory) {\\n        uint256 voucherTokenId = accounts[tokenId].voucher;\\n        string memory cid = vouches[voucherTokenId].vouches[tokenId].personCid;\\n        return string(abi.encodePacked(baseURI, cid)); \\n    }\\n}\\n\",\"keccak256\":\"0x35139010e6858119b855cfac8012005089265870478c7ed07d1e176d60947a0d\",\"license\":\"MIT\"},\"prb-math/contracts/PRBMath.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity >=0.8.4;\\n\\n/// @notice Emitted when the result overflows uint256.\\nerror PRBMath__MulDivFixedPointOverflow(uint256 prod1);\\n\\n/// @notice Emitted when the result overflows uint256.\\nerror PRBMath__MulDivOverflow(uint256 prod1, uint256 denominator);\\n\\n/// @notice Emitted when one of the inputs is type(int256).min.\\nerror PRBMath__MulDivSignedInputTooSmall();\\n\\n/// @notice Emitted when the intermediary absolute result overflows int256.\\nerror PRBMath__MulDivSignedOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is MIN_SD59x18.\\nerror PRBMathSD59x18__AbsInputTooSmall();\\n\\n/// @notice Emitted when ceiling a number overflows SD59x18.\\nerror PRBMathSD59x18__CeilOverflow(int256 x);\\n\\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\\nerror PRBMathSD59x18__DivInputTooSmall();\\n\\n/// @notice Emitted when one of the intermediary unsigned results overflows SD59x18.\\nerror PRBMathSD59x18__DivOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is greater than 133.084258667509499441.\\nerror PRBMathSD59x18__ExpInputTooBig(int256 x);\\n\\n/// @notice Emitted when the input is greater than 192.\\nerror PRBMathSD59x18__Exp2InputTooBig(int256 x);\\n\\n/// @notice Emitted when flooring a number underflows SD59x18.\\nerror PRBMathSD59x18__FloorUnderflow(int256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format overflows SD59x18.\\nerror PRBMathSD59x18__FromIntOverflow(int256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format underflows SD59x18.\\nerror PRBMathSD59x18__FromIntUnderflow(int256 x);\\n\\n/// @notice Emitted when the product of the inputs is negative.\\nerror PRBMathSD59x18__GmNegativeProduct(int256 x, int256 y);\\n\\n/// @notice Emitted when multiplying the inputs overflows SD59x18.\\nerror PRBMathSD59x18__GmOverflow(int256 x, int256 y);\\n\\n/// @notice Emitted when the input is less than or equal to zero.\\nerror PRBMathSD59x18__LogInputTooSmall(int256 x);\\n\\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\\nerror PRBMathSD59x18__MulInputTooSmall();\\n\\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\\nerror PRBMathSD59x18__MulOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\\nerror PRBMathSD59x18__PowuOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is negative.\\nerror PRBMathSD59x18__SqrtNegativeInput(int256 x);\\n\\n/// @notice Emitted when the calculating the square root overflows SD59x18.\\nerror PRBMathSD59x18__SqrtOverflow(int256 x);\\n\\n/// @notice Emitted when addition overflows UD60x18.\\nerror PRBMathUD60x18__AddOverflow(uint256 x, uint256 y);\\n\\n/// @notice Emitted when ceiling a number overflows UD60x18.\\nerror PRBMathUD60x18__CeilOverflow(uint256 x);\\n\\n/// @notice Emitted when the input is greater than 133.084258667509499441.\\nerror PRBMathUD60x18__ExpInputTooBig(uint256 x);\\n\\n/// @notice Emitted when the input is greater than 192.\\nerror PRBMathUD60x18__Exp2InputTooBig(uint256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format format overflows UD60x18.\\nerror PRBMathUD60x18__FromUintOverflow(uint256 x);\\n\\n/// @notice Emitted when multiplying the inputs overflows UD60x18.\\nerror PRBMathUD60x18__GmOverflow(uint256 x, uint256 y);\\n\\n/// @notice Emitted when the input is less than 1.\\nerror PRBMathUD60x18__LogInputTooSmall(uint256 x);\\n\\n/// @notice Emitted when the calculating the square root overflows UD60x18.\\nerror PRBMathUD60x18__SqrtOverflow(uint256 x);\\n\\n/// @notice Emitted when subtraction underflows UD60x18.\\nerror PRBMathUD60x18__SubUnderflow(uint256 x, uint256 y);\\n\\n/// @dev Common mathematical functions used in both PRBMathSD59x18 and PRBMathUD60x18. Note that this shared library\\n/// does not always assume the signed 59.18-decimal fixed-point or the unsigned 60.18-decimal fixed-point\\n/// representation. When it does not, it is explicitly mentioned in the NatSpec documentation.\\nlibrary PRBMath {\\n    /// STRUCTS ///\\n\\n    struct SD59x18 {\\n        int256 value;\\n    }\\n\\n    struct UD60x18 {\\n        uint256 value;\\n    }\\n\\n    /// STORAGE ///\\n\\n    /// @dev How many trailing decimals can be represented.\\n    uint256 internal constant SCALE = 1e18;\\n\\n    /// @dev Largest power of two divisor of SCALE.\\n    uint256 internal constant SCALE_LPOTD = 262144;\\n\\n    /// @dev SCALE inverted mod 2^256.\\n    uint256 internal constant SCALE_INVERSE =\\n        78156646155174841979727994598816262306175212592076161876661_508869554232690281;\\n\\n    /// FUNCTIONS ///\\n\\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\\n    /// @dev Has to use 192.64-bit fixed-point numbers.\\n    /// See https://ethereum.stackexchange.com/a/96594/24693.\\n    /// @param x The exponent as an unsigned 192.64-bit fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp2(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            // Start from 0.5 in the 192.64-bit fixed-point format.\\n            result = 0x800000000000000000000000000000000000000000000000;\\n\\n            // Multiply the result by root(2, 2^-i) when the bit at position i is 1. None of the intermediary results overflows\\n            // because the initial result is 2^191 and all magic factors are less than 2^65.\\n            if (x & 0x8000000000000000 > 0) {\\n                result = (result * 0x16A09E667F3BCC909) >> 64;\\n            }\\n            if (x & 0x4000000000000000 > 0) {\\n                result = (result * 0x1306FE0A31B7152DF) >> 64;\\n            }\\n            if (x & 0x2000000000000000 > 0) {\\n                result = (result * 0x1172B83C7D517ADCE) >> 64;\\n            }\\n            if (x & 0x1000000000000000 > 0) {\\n                result = (result * 0x10B5586CF9890F62A) >> 64;\\n            }\\n            if (x & 0x800000000000000 > 0) {\\n                result = (result * 0x1059B0D31585743AE) >> 64;\\n            }\\n            if (x & 0x400000000000000 > 0) {\\n                result = (result * 0x102C9A3E778060EE7) >> 64;\\n            }\\n            if (x & 0x200000000000000 > 0) {\\n                result = (result * 0x10163DA9FB33356D8) >> 64;\\n            }\\n            if (x & 0x100000000000000 > 0) {\\n                result = (result * 0x100B1AFA5ABCBED61) >> 64;\\n            }\\n            if (x & 0x80000000000000 > 0) {\\n                result = (result * 0x10058C86DA1C09EA2) >> 64;\\n            }\\n            if (x & 0x40000000000000 > 0) {\\n                result = (result * 0x1002C605E2E8CEC50) >> 64;\\n            }\\n            if (x & 0x20000000000000 > 0) {\\n                result = (result * 0x100162F3904051FA1) >> 64;\\n            }\\n            if (x & 0x10000000000000 > 0) {\\n                result = (result * 0x1000B175EFFDC76BA) >> 64;\\n            }\\n            if (x & 0x8000000000000 > 0) {\\n                result = (result * 0x100058BA01FB9F96D) >> 64;\\n            }\\n            if (x & 0x4000000000000 > 0) {\\n                result = (result * 0x10002C5CC37DA9492) >> 64;\\n            }\\n            if (x & 0x2000000000000 > 0) {\\n                result = (result * 0x1000162E525EE0547) >> 64;\\n            }\\n            if (x & 0x1000000000000 > 0) {\\n                result = (result * 0x10000B17255775C04) >> 64;\\n            }\\n            if (x & 0x800000000000 > 0) {\\n                result = (result * 0x1000058B91B5BC9AE) >> 64;\\n            }\\n            if (x & 0x400000000000 > 0) {\\n                result = (result * 0x100002C5C89D5EC6D) >> 64;\\n            }\\n            if (x & 0x200000000000 > 0) {\\n                result = (result * 0x10000162E43F4F831) >> 64;\\n            }\\n            if (x & 0x100000000000 > 0) {\\n                result = (result * 0x100000B1721BCFC9A) >> 64;\\n            }\\n            if (x & 0x80000000000 > 0) {\\n                result = (result * 0x10000058B90CF1E6E) >> 64;\\n            }\\n            if (x & 0x40000000000 > 0) {\\n                result = (result * 0x1000002C5C863B73F) >> 64;\\n            }\\n            if (x & 0x20000000000 > 0) {\\n                result = (result * 0x100000162E430E5A2) >> 64;\\n            }\\n            if (x & 0x10000000000 > 0) {\\n                result = (result * 0x1000000B172183551) >> 64;\\n            }\\n            if (x & 0x8000000000 > 0) {\\n                result = (result * 0x100000058B90C0B49) >> 64;\\n            }\\n            if (x & 0x4000000000 > 0) {\\n                result = (result * 0x10000002C5C8601CC) >> 64;\\n            }\\n            if (x & 0x2000000000 > 0) {\\n                result = (result * 0x1000000162E42FFF0) >> 64;\\n            }\\n            if (x & 0x1000000000 > 0) {\\n                result = (result * 0x10000000B17217FBB) >> 64;\\n            }\\n            if (x & 0x800000000 > 0) {\\n                result = (result * 0x1000000058B90BFCE) >> 64;\\n            }\\n            if (x & 0x400000000 > 0) {\\n                result = (result * 0x100000002C5C85FE3) >> 64;\\n            }\\n            if (x & 0x200000000 > 0) {\\n                result = (result * 0x10000000162E42FF1) >> 64;\\n            }\\n            if (x & 0x100000000 > 0) {\\n                result = (result * 0x100000000B17217F8) >> 64;\\n            }\\n            if (x & 0x80000000 > 0) {\\n                result = (result * 0x10000000058B90BFC) >> 64;\\n            }\\n            if (x & 0x40000000 > 0) {\\n                result = (result * 0x1000000002C5C85FE) >> 64;\\n            }\\n            if (x & 0x20000000 > 0) {\\n                result = (result * 0x100000000162E42FF) >> 64;\\n            }\\n            if (x & 0x10000000 > 0) {\\n                result = (result * 0x1000000000B17217F) >> 64;\\n            }\\n            if (x & 0x8000000 > 0) {\\n                result = (result * 0x100000000058B90C0) >> 64;\\n            }\\n            if (x & 0x4000000 > 0) {\\n                result = (result * 0x10000000002C5C860) >> 64;\\n            }\\n            if (x & 0x2000000 > 0) {\\n                result = (result * 0x1000000000162E430) >> 64;\\n            }\\n            if (x & 0x1000000 > 0) {\\n                result = (result * 0x10000000000B17218) >> 64;\\n            }\\n            if (x & 0x800000 > 0) {\\n                result = (result * 0x1000000000058B90C) >> 64;\\n            }\\n            if (x & 0x400000 > 0) {\\n                result = (result * 0x100000000002C5C86) >> 64;\\n            }\\n            if (x & 0x200000 > 0) {\\n                result = (result * 0x10000000000162E43) >> 64;\\n            }\\n            if (x & 0x100000 > 0) {\\n                result = (result * 0x100000000000B1721) >> 64;\\n            }\\n            if (x & 0x80000 > 0) {\\n                result = (result * 0x10000000000058B91) >> 64;\\n            }\\n            if (x & 0x40000 > 0) {\\n                result = (result * 0x1000000000002C5C8) >> 64;\\n            }\\n            if (x & 0x20000 > 0) {\\n                result = (result * 0x100000000000162E4) >> 64;\\n            }\\n            if (x & 0x10000 > 0) {\\n                result = (result * 0x1000000000000B172) >> 64;\\n            }\\n            if (x & 0x8000 > 0) {\\n                result = (result * 0x100000000000058B9) >> 64;\\n            }\\n            if (x & 0x4000 > 0) {\\n                result = (result * 0x10000000000002C5D) >> 64;\\n            }\\n            if (x & 0x2000 > 0) {\\n                result = (result * 0x1000000000000162E) >> 64;\\n            }\\n            if (x & 0x1000 > 0) {\\n                result = (result * 0x10000000000000B17) >> 64;\\n            }\\n            if (x & 0x800 > 0) {\\n                result = (result * 0x1000000000000058C) >> 64;\\n            }\\n            if (x & 0x400 > 0) {\\n                result = (result * 0x100000000000002C6) >> 64;\\n            }\\n            if (x & 0x200 > 0) {\\n                result = (result * 0x10000000000000163) >> 64;\\n            }\\n            if (x & 0x100 > 0) {\\n                result = (result * 0x100000000000000B1) >> 64;\\n            }\\n            if (x & 0x80 > 0) {\\n                result = (result * 0x10000000000000059) >> 64;\\n            }\\n            if (x & 0x40 > 0) {\\n                result = (result * 0x1000000000000002C) >> 64;\\n            }\\n            if (x & 0x20 > 0) {\\n                result = (result * 0x10000000000000016) >> 64;\\n            }\\n            if (x & 0x10 > 0) {\\n                result = (result * 0x1000000000000000B) >> 64;\\n            }\\n            if (x & 0x8 > 0) {\\n                result = (result * 0x10000000000000006) >> 64;\\n            }\\n            if (x & 0x4 > 0) {\\n                result = (result * 0x10000000000000003) >> 64;\\n            }\\n            if (x & 0x2 > 0) {\\n                result = (result * 0x10000000000000001) >> 64;\\n            }\\n            if (x & 0x1 > 0) {\\n                result = (result * 0x10000000000000001) >> 64;\\n            }\\n\\n            // We're doing two things at the same time:\\n            //\\n            //   1. Multiply the result by 2^n + 1, where \\\"2^n\\\" is the integer part and the one is added to account for\\n            //      the fact that we initially set the result to 0.5. This is accomplished by subtracting from 191\\n            //      rather than 192.\\n            //   2. Convert the result to the unsigned 60.18-decimal fixed-point format.\\n            //\\n            // This works because 2^(191-ip) = 2^ip / 2^191, where \\\"ip\\\" is the integer part \\\"2^n\\\".\\n            result *= SCALE;\\n            result >>= (191 - (x >> 64));\\n        }\\n    }\\n\\n    /// @notice Finds the zero-based index of the first one in the binary representation of x.\\n    /// @dev See the note on msb in the \\\"Find First Set\\\" Wikipedia article https://en.wikipedia.org/wiki/Find_first_set\\n    /// @param x The uint256 number for which to find the index of the most significant bit.\\n    /// @return msb The index of the most significant bit as an uint256.\\n    function mostSignificantBit(uint256 x) internal pure returns (uint256 msb) {\\n        if (x >= 2**128) {\\n            x >>= 128;\\n            msb += 128;\\n        }\\n        if (x >= 2**64) {\\n            x >>= 64;\\n            msb += 64;\\n        }\\n        if (x >= 2**32) {\\n            x >>= 32;\\n            msb += 32;\\n        }\\n        if (x >= 2**16) {\\n            x >>= 16;\\n            msb += 16;\\n        }\\n        if (x >= 2**8) {\\n            x >>= 8;\\n            msb += 8;\\n        }\\n        if (x >= 2**4) {\\n            x >>= 4;\\n            msb += 4;\\n        }\\n        if (x >= 2**2) {\\n            x >>= 2;\\n            msb += 2;\\n        }\\n        if (x >= 2**1) {\\n            // No need to shift x any more.\\n            msb += 1;\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f7denominator) with full precision.\\n    ///\\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv.\\n    ///\\n    /// Requirements:\\n    /// - The denominator cannot be zero.\\n    /// - The result must fit within uint256.\\n    ///\\n    /// Caveats:\\n    /// - This function does not work with fixed-point numbers.\\n    ///\\n    /// @param x The multiplicand as an uint256.\\n    /// @param y The multiplier as an uint256.\\n    /// @param denominator The divisor as an uint256.\\n    /// @return result The result as an uint256.\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n        // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n        // variables such that product = prod1 * 2^256 + prod0.\\n        uint256 prod0; // Least significant 256 bits of the product\\n        uint256 prod1; // Most significant 256 bits of the product\\n        assembly {\\n            let mm := mulmod(x, y, not(0))\\n            prod0 := mul(x, y)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        // Handle non-overflow cases, 256 by 256 division.\\n        if (prod1 == 0) {\\n            unchecked {\\n                result = prod0 / denominator;\\n            }\\n            return result;\\n        }\\n\\n        // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n        if (prod1 >= denominator) {\\n            revert PRBMath__MulDivOverflow(prod1, denominator);\\n        }\\n\\n        ///////////////////////////////////////////////\\n        // 512 by 256 division.\\n        ///////////////////////////////////////////////\\n\\n        // Make division exact by subtracting the remainder from [prod1 prod0].\\n        uint256 remainder;\\n        assembly {\\n            // Compute remainder using mulmod.\\n            remainder := mulmod(x, y, denominator)\\n\\n            // Subtract 256 bit number from 512 bit number.\\n            prod1 := sub(prod1, gt(remainder, prod0))\\n            prod0 := sub(prod0, remainder)\\n        }\\n\\n        // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n        // See https://cs.stackexchange.com/q/138556/92363.\\n        unchecked {\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 lpotdod = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by lpotdod.\\n                denominator := div(denominator, lpotdod)\\n\\n                // Divide [prod1 prod0] by lpotdod.\\n                prod0 := div(prod0, lpotdod)\\n\\n                // Flip lpotdod such that it is 2^256 / lpotdod. If lpotdod is zero, then it becomes one.\\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * lpotdod;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f71e18) with full precision.\\n    ///\\n    /// @dev Variant of \\\"mulDiv\\\" with constant folding, i.e. in which the denominator is always 1e18. Before returning the\\n    /// final result, we add 1 if (x * y) % SCALE >= HALF_SCALE. Without this, 6.6e-19 would be truncated to 0 instead of\\n    /// being rounded to 1e-18.  See \\\"Listing 6\\\" and text above it at https://accu.org/index.php/journals/1717.\\n    ///\\n    /// Requirements:\\n    /// - The result must fit within uint256.\\n    ///\\n    /// Caveats:\\n    /// - The body is purposely left uncommented; see the NatSpec comments in \\\"PRBMath.mulDiv\\\" to understand how this works.\\n    /// - It is assumed that the result can never be type(uint256).max when x and y solve the following two equations:\\n    ///     1. x * y = type(uint256).max * SCALE\\n    ///     2. (x * y) % SCALE >= SCALE / 2\\n    ///\\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function mulDivFixedPoint(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(x, y, not(0))\\n            prod0 := mul(x, y)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= SCALE) {\\n            revert PRBMath__MulDivFixedPointOverflow(prod1);\\n        }\\n\\n        uint256 remainder;\\n        uint256 roundUpUnit;\\n        assembly {\\n            remainder := mulmod(x, y, SCALE)\\n            roundUpUnit := gt(remainder, 499999999999999999)\\n        }\\n\\n        if (prod1 == 0) {\\n            unchecked {\\n                result = (prod0 / SCALE) + roundUpUnit;\\n                return result;\\n            }\\n        }\\n\\n        assembly {\\n            result := add(\\n                mul(\\n                    or(\\n                        div(sub(prod0, remainder), SCALE_LPOTD),\\n                        mul(sub(prod1, gt(remainder, prod0)), add(div(sub(0, SCALE_LPOTD), SCALE_LPOTD), 1))\\n                    ),\\n                    SCALE_INVERSE\\n                ),\\n                roundUpUnit\\n            )\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f7denominator) with full precision.\\n    ///\\n    /// @dev An extension of \\\"mulDiv\\\" for signed numbers. Works by computing the signs and the absolute values separately.\\n    ///\\n    /// Requirements:\\n    /// - None of the inputs can be type(int256).min.\\n    /// - The result must fit within int256.\\n    ///\\n    /// @param x The multiplicand as an int256.\\n    /// @param y The multiplier as an int256.\\n    /// @param denominator The divisor as an int256.\\n    /// @return result The result as an int256.\\n    function mulDivSigned(\\n        int256 x,\\n        int256 y,\\n        int256 denominator\\n    ) internal pure returns (int256 result) {\\n        if (x == type(int256).min || y == type(int256).min || denominator == type(int256).min) {\\n            revert PRBMath__MulDivSignedInputTooSmall();\\n        }\\n\\n        // Get hold of the absolute values of x, y and the denominator.\\n        uint256 ax;\\n        uint256 ay;\\n        uint256 ad;\\n        unchecked {\\n            ax = x < 0 ? uint256(-x) : uint256(x);\\n            ay = y < 0 ? uint256(-y) : uint256(y);\\n            ad = denominator < 0 ? uint256(-denominator) : uint256(denominator);\\n        }\\n\\n        // Compute the absolute value of (x*y)\\u00f7denominator. The result must fit within int256.\\n        uint256 rAbs = mulDiv(ax, ay, ad);\\n        if (rAbs > uint256(type(int256).max)) {\\n            revert PRBMath__MulDivSignedOverflow(rAbs);\\n        }\\n\\n        // Get the signs of x, y and the denominator.\\n        uint256 sx;\\n        uint256 sy;\\n        uint256 sd;\\n        assembly {\\n            sx := sgt(x, sub(0, 1))\\n            sy := sgt(y, sub(0, 1))\\n            sd := sgt(denominator, sub(0, 1))\\n        }\\n\\n        // XOR over sx, sy and sd. This is checking whether there are one or three negative signs in the inputs.\\n        // If yes, the result should be negative.\\n        result = sx ^ sy ^ sd == 0 ? -int256(rAbs) : int256(rAbs);\\n    }\\n\\n    /// @notice Calculates the square root of x, rounding down.\\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\\n    ///\\n    /// Caveats:\\n    /// - This function does not work with fixed-point numbers.\\n    ///\\n    /// @param x The uint256 number for which to calculate the square root.\\n    /// @return result The result as an uint256.\\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n\\n        // Set the initial guess to the least power of two that is greater than or equal to sqrt(x).\\n        uint256 xAux = uint256(x);\\n        result = 1;\\n        if (xAux >= 0x100000000000000000000000000000000) {\\n            xAux >>= 128;\\n            result <<= 64;\\n        }\\n        if (xAux >= 0x10000000000000000) {\\n            xAux >>= 64;\\n            result <<= 32;\\n        }\\n        if (xAux >= 0x100000000) {\\n            xAux >>= 32;\\n            result <<= 16;\\n        }\\n        if (xAux >= 0x10000) {\\n            xAux >>= 16;\\n            result <<= 8;\\n        }\\n        if (xAux >= 0x100) {\\n            xAux >>= 8;\\n            result <<= 4;\\n        }\\n        if (xAux >= 0x10) {\\n            xAux >>= 4;\\n            result <<= 2;\\n        }\\n        if (xAux >= 0x8) {\\n            result <<= 1;\\n        }\\n\\n        // The operations can never overflow because the result is max 2^127 when it enters this block.\\n        unchecked {\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1; // Seven iterations should be enough\\n            uint256 roundedDownResult = x / result;\\n            return result >= roundedDownResult ? roundedDownResult : result;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61\",\"license\":\"Unlicense\"},\"prb-math/contracts/PRBMathUD60x18.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity >=0.8.4;\\n\\nimport \\\"./PRBMath.sol\\\";\\n\\n/// @title PRBMathUD60x18\\n/// @author Paul Razvan Berg\\n/// @notice Smart contract library for advanced fixed-point math that works with uint256 numbers considered to have 18\\n/// trailing decimals. We call this number representation unsigned 60.18-decimal fixed-point, since there can be up to 60\\n/// digits in the integer part and up to 18 decimals in the fractional part. The numbers are bound by the minimum and the\\n/// maximum values permitted by the Solidity type uint256.\\nlibrary PRBMathUD60x18 {\\n    /// @dev Half the SCALE number.\\n    uint256 internal constant HALF_SCALE = 5e17;\\n\\n    /// @dev log2(e) as an unsigned 60.18-decimal fixed-point number.\\n    uint256 internal constant LOG2_E = 1_442695040888963407;\\n\\n    /// @dev The maximum value an unsigned 60.18-decimal fixed-point number can have.\\n    uint256 internal constant MAX_UD60x18 =\\n        115792089237316195423570985008687907853269984665640564039457_584007913129639935;\\n\\n    /// @dev The maximum whole value an unsigned 60.18-decimal fixed-point number can have.\\n    uint256 internal constant MAX_WHOLE_UD60x18 =\\n        115792089237316195423570985008687907853269984665640564039457_000000000000000000;\\n\\n    /// @dev How many trailing decimals can be represented.\\n    uint256 internal constant SCALE = 1e18;\\n\\n    /// @notice Calculates the arithmetic average of x and y, rounding down.\\n    /// @param x The first operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The second operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The arithmetic average as an unsigned 60.18-decimal fixed-point number.\\n    function avg(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        // The operations can never overflow.\\n        unchecked {\\n            // The last operand checks if both x and y are odd and if that is the case, we add 1 to the result. We need\\n            // to do this because if both numbers are odd, the 0.5 remainder gets truncated twice.\\n            result = (x >> 1) + (y >> 1) + (x & y & 1);\\n        }\\n    }\\n\\n    /// @notice Yields the least unsigned 60.18 decimal fixed-point number greater than or equal to x.\\n    ///\\n    /// @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\\n    /// See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\\n    ///\\n    /// Requirements:\\n    /// - x must be less than or equal to MAX_WHOLE_UD60x18.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number to ceil.\\n    /// @param result The least integer greater than or equal to x, as an unsigned 60.18-decimal fixed-point number.\\n    function ceil(uint256 x) internal pure returns (uint256 result) {\\n        if (x > MAX_WHOLE_UD60x18) {\\n            revert PRBMathUD60x18__CeilOverflow(x);\\n        }\\n        assembly {\\n            // Equivalent to \\\"x % SCALE\\\" but faster.\\n            let remainder := mod(x, SCALE)\\n\\n            // Equivalent to \\\"SCALE - remainder\\\" but faster.\\n            let delta := sub(SCALE, remainder)\\n\\n            // Equivalent to \\\"x + delta * (remainder > 0 ? 1 : 0)\\\" but faster.\\n            result := add(x, mul(delta, gt(remainder, 0)))\\n        }\\n    }\\n\\n    /// @notice Divides two unsigned 60.18-decimal fixed-point numbers, returning a new unsigned 60.18-decimal fixed-point number.\\n    ///\\n    /// @dev Uses mulDiv to enable overflow-safe multiplication and division.\\n    ///\\n    /// Requirements:\\n    /// - The denominator cannot be zero.\\n    ///\\n    /// @param x The numerator as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The denominator as an unsigned 60.18-decimal fixed-point number.\\n    /// @param result The quotient as an unsigned 60.18-decimal fixed-point number.\\n    function div(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        result = PRBMath.mulDiv(x, SCALE, y);\\n    }\\n\\n    /// @notice Returns Euler's number as an unsigned 60.18-decimal fixed-point number.\\n    /// @dev See https://en.wikipedia.org/wiki/E_(mathematical_constant).\\n    function e() internal pure returns (uint256 result) {\\n        result = 2_718281828459045235;\\n    }\\n\\n    /// @notice Calculates the natural exponent of x.\\n    ///\\n    /// @dev Based on the insight that e^x = 2^(x * log2(e)).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    /// - x must be less than 133.084258667509499441.\\n    ///\\n    /// @param x The exponent as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp(uint256 x) internal pure returns (uint256 result) {\\n        // Without this check, the value passed to \\\"exp2\\\" would be greater than 192.\\n        if (x >= 133_084258667509499441) {\\n            revert PRBMathUD60x18__ExpInputTooBig(x);\\n        }\\n\\n        // Do the fixed-point multiplication inline to save gas.\\n        unchecked {\\n            uint256 doubleScaleProduct = x * LOG2_E;\\n            result = exp2((doubleScaleProduct + HALF_SCALE) / SCALE);\\n        }\\n    }\\n\\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\\n    ///\\n    /// @dev See https://ethereum.stackexchange.com/q/79903/24693.\\n    ///\\n    /// Requirements:\\n    /// - x must be 192 or less.\\n    /// - The result must fit within MAX_UD60x18.\\n    ///\\n    /// @param x The exponent as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp2(uint256 x) internal pure returns (uint256 result) {\\n        // 2^192 doesn't fit within the 192.64-bit format used internally in this function.\\n        if (x >= 192e18) {\\n            revert PRBMathUD60x18__Exp2InputTooBig(x);\\n        }\\n\\n        unchecked {\\n            // Convert x to the 192.64-bit fixed-point format.\\n            uint256 x192x64 = (x << 64) / SCALE;\\n\\n            // Pass x to the PRBMath.exp2 function, which uses the 192.64-bit fixed-point number representation.\\n            result = PRBMath.exp2(x192x64);\\n        }\\n    }\\n\\n    /// @notice Yields the greatest unsigned 60.18 decimal fixed-point number less than or equal to x.\\n    /// @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\\n    /// See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to floor.\\n    /// @param result The greatest integer less than or equal to x, as an unsigned 60.18-decimal fixed-point number.\\n    function floor(uint256 x) internal pure returns (uint256 result) {\\n        assembly {\\n            // Equivalent to \\\"x % SCALE\\\" but faster.\\n            let remainder := mod(x, SCALE)\\n\\n            // Equivalent to \\\"x - remainder * (remainder > 0 ? 1 : 0)\\\" but faster.\\n            result := sub(x, mul(remainder, gt(remainder, 0)))\\n        }\\n    }\\n\\n    /// @notice Yields the excess beyond the floor of x.\\n    /// @dev Based on the odd function definition https://en.wikipedia.org/wiki/Fractional_part.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to get the fractional part of.\\n    /// @param result The fractional part of x as an unsigned 60.18-decimal fixed-point number.\\n    function frac(uint256 x) internal pure returns (uint256 result) {\\n        assembly {\\n            result := mod(x, SCALE)\\n        }\\n    }\\n\\n    /// @notice Converts a number from basic integer form to unsigned 60.18-decimal fixed-point representation.\\n    ///\\n    /// @dev Requirements:\\n    /// - x must be less than or equal to MAX_UD60x18 divided by SCALE.\\n    ///\\n    /// @param x The basic integer to convert.\\n    /// @param result The same number in unsigned 60.18-decimal fixed-point representation.\\n    function fromUint(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            if (x > MAX_UD60x18 / SCALE) {\\n                revert PRBMathUD60x18__FromUintOverflow(x);\\n            }\\n            result = x * SCALE;\\n        }\\n    }\\n\\n    /// @notice Calculates geometric mean of x and y, i.e. sqrt(x * y), rounding down.\\n    ///\\n    /// @dev Requirements:\\n    /// - x * y must fit within MAX_UD60x18, lest it overflows.\\n    ///\\n    /// @param x The first operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The second operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function gm(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n\\n        unchecked {\\n            // Checking for overflow this way is faster than letting Solidity do it.\\n            uint256 xy = x * y;\\n            if (xy / x != y) {\\n                revert PRBMathUD60x18__GmOverflow(x, y);\\n            }\\n\\n            // We don't need to multiply by the SCALE here because the x*y product had already picked up a factor of SCALE\\n            // during multiplication. See the comments within the \\\"sqrt\\\" function.\\n            result = PRBMath.sqrt(xy);\\n        }\\n    }\\n\\n    /// @notice Calculates 1 / x, rounding toward zero.\\n    ///\\n    /// @dev Requirements:\\n    /// - x cannot be zero.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the inverse.\\n    /// @return result The inverse as an unsigned 60.18-decimal fixed-point number.\\n    function inv(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 1e36 is SCALE * SCALE.\\n            result = 1e36 / x;\\n        }\\n    }\\n\\n    /// @notice Calculates the natural logarithm of x.\\n    ///\\n    /// @dev Based on the insight that ln(x) = log2(x) / log2(e).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"log2\\\".\\n    /// - This doesn't return exactly 1 for 2.718281828459045235, for that we would need more fine-grained precision.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the natural logarithm.\\n    /// @return result The natural logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function ln(uint256 x) internal pure returns (uint256 result) {\\n        // Do the fixed-point multiplication inline to save gas. This is overflow-safe because the maximum value that log2(x)\\n        // can return is 196205294292027477728.\\n        unchecked {\\n            result = (log2(x) * SCALE) / LOG2_E;\\n        }\\n    }\\n\\n    /// @notice Calculates the common logarithm of x.\\n    ///\\n    /// @dev First checks if x is an exact power of ten and it stops if yes. If it's not, calculates the common\\n    /// logarithm based on the insight that log10(x) = log2(x) / log2(10).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the common logarithm.\\n    /// @return result The common logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function log10(uint256 x) internal pure returns (uint256 result) {\\n        if (x < SCALE) {\\n            revert PRBMathUD60x18__LogInputTooSmall(x);\\n        }\\n\\n        // Note that the \\\"mul\\\" in this block is the assembly multiplication operation, not the \\\"mul\\\" function defined\\n        // in this contract.\\n        // prettier-ignore\\n        assembly {\\n            switch x\\n            case 1 { result := mul(SCALE, sub(0, 18)) }\\n            case 10 { result := mul(SCALE, sub(1, 18)) }\\n            case 100 { result := mul(SCALE, sub(2, 18)) }\\n            case 1000 { result := mul(SCALE, sub(3, 18)) }\\n            case 10000 { result := mul(SCALE, sub(4, 18)) }\\n            case 100000 { result := mul(SCALE, sub(5, 18)) }\\n            case 1000000 { result := mul(SCALE, sub(6, 18)) }\\n            case 10000000 { result := mul(SCALE, sub(7, 18)) }\\n            case 100000000 { result := mul(SCALE, sub(8, 18)) }\\n            case 1000000000 { result := mul(SCALE, sub(9, 18)) }\\n            case 10000000000 { result := mul(SCALE, sub(10, 18)) }\\n            case 100000000000 { result := mul(SCALE, sub(11, 18)) }\\n            case 1000000000000 { result := mul(SCALE, sub(12, 18)) }\\n            case 10000000000000 { result := mul(SCALE, sub(13, 18)) }\\n            case 100000000000000 { result := mul(SCALE, sub(14, 18)) }\\n            case 1000000000000000 { result := mul(SCALE, sub(15, 18)) }\\n            case 10000000000000000 { result := mul(SCALE, sub(16, 18)) }\\n            case 100000000000000000 { result := mul(SCALE, sub(17, 18)) }\\n            case 1000000000000000000 { result := 0 }\\n            case 10000000000000000000 { result := SCALE }\\n            case 100000000000000000000 { result := mul(SCALE, 2) }\\n            case 1000000000000000000000 { result := mul(SCALE, 3) }\\n            case 10000000000000000000000 { result := mul(SCALE, 4) }\\n            case 100000000000000000000000 { result := mul(SCALE, 5) }\\n            case 1000000000000000000000000 { result := mul(SCALE, 6) }\\n            case 10000000000000000000000000 { result := mul(SCALE, 7) }\\n            case 100000000000000000000000000 { result := mul(SCALE, 8) }\\n            case 1000000000000000000000000000 { result := mul(SCALE, 9) }\\n            case 10000000000000000000000000000 { result := mul(SCALE, 10) }\\n            case 100000000000000000000000000000 { result := mul(SCALE, 11) }\\n            case 1000000000000000000000000000000 { result := mul(SCALE, 12) }\\n            case 10000000000000000000000000000000 { result := mul(SCALE, 13) }\\n            case 100000000000000000000000000000000 { result := mul(SCALE, 14) }\\n            case 1000000000000000000000000000000000 { result := mul(SCALE, 15) }\\n            case 10000000000000000000000000000000000 { result := mul(SCALE, 16) }\\n            case 100000000000000000000000000000000000 { result := mul(SCALE, 17) }\\n            case 1000000000000000000000000000000000000 { result := mul(SCALE, 18) }\\n            case 10000000000000000000000000000000000000 { result := mul(SCALE, 19) }\\n            case 100000000000000000000000000000000000000 { result := mul(SCALE, 20) }\\n            case 1000000000000000000000000000000000000000 { result := mul(SCALE, 21) }\\n            case 10000000000000000000000000000000000000000 { result := mul(SCALE, 22) }\\n            case 100000000000000000000000000000000000000000 { result := mul(SCALE, 23) }\\n            case 1000000000000000000000000000000000000000000 { result := mul(SCALE, 24) }\\n            case 10000000000000000000000000000000000000000000 { result := mul(SCALE, 25) }\\n            case 100000000000000000000000000000000000000000000 { result := mul(SCALE, 26) }\\n            case 1000000000000000000000000000000000000000000000 { result := mul(SCALE, 27) }\\n            case 10000000000000000000000000000000000000000000000 { result := mul(SCALE, 28) }\\n            case 100000000000000000000000000000000000000000000000 { result := mul(SCALE, 29) }\\n            case 1000000000000000000000000000000000000000000000000 { result := mul(SCALE, 30) }\\n            case 10000000000000000000000000000000000000000000000000 { result := mul(SCALE, 31) }\\n            case 100000000000000000000000000000000000000000000000000 { result := mul(SCALE, 32) }\\n            case 1000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 33) }\\n            case 10000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 34) }\\n            case 100000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 35) }\\n            case 1000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 36) }\\n            case 10000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 37) }\\n            case 100000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 38) }\\n            case 1000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 39) }\\n            case 10000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 40) }\\n            case 100000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 41) }\\n            case 1000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 42) }\\n            case 10000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 43) }\\n            case 100000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 44) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 45) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 46) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 47) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 48) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 49) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 50) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 51) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 52) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 53) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 54) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 55) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 56) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 57) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 58) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 59) }\\n            default {\\n                result := MAX_UD60x18\\n            }\\n        }\\n\\n        if (result == MAX_UD60x18) {\\n            // Do the fixed-point division inline to save gas. The denominator is log2(10).\\n            unchecked {\\n                result = (log2(x) * SCALE) / 3_321928094887362347;\\n            }\\n        }\\n    }\\n\\n    /// @notice Calculates the binary logarithm of x.\\n    ///\\n    /// @dev Based on the iterative approximation algorithm.\\n    /// https://en.wikipedia.org/wiki/Binary_logarithm#Iterative_approximation\\n    ///\\n    /// Requirements:\\n    /// - x must be greater than or equal to SCALE, otherwise the result would be negative.\\n    ///\\n    /// Caveats:\\n    /// - The results are nor perfectly accurate to the last decimal, due to the lossy precision of the iterative approximation.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the binary logarithm.\\n    /// @return result The binary logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function log2(uint256 x) internal pure returns (uint256 result) {\\n        if (x < SCALE) {\\n            revert PRBMathUD60x18__LogInputTooSmall(x);\\n        }\\n        unchecked {\\n            // Calculate the integer part of the logarithm and add it to the result and finally calculate y = x * 2^(-n).\\n            uint256 n = PRBMath.mostSignificantBit(x / SCALE);\\n\\n            // The integer part of the logarithm as an unsigned 60.18-decimal fixed-point number. The operation can't overflow\\n            // because n is maximum 255 and SCALE is 1e18.\\n            result = n * SCALE;\\n\\n            // This is y = x * 2^(-n).\\n            uint256 y = x >> n;\\n\\n            // If y = 1, the fractional part is zero.\\n            if (y == SCALE) {\\n                return result;\\n            }\\n\\n            // Calculate the fractional part via the iterative approximation.\\n            // The \\\"delta >>= 1\\\" part is equivalent to \\\"delta /= 2\\\", but shifting bits is faster.\\n            for (uint256 delta = HALF_SCALE; delta > 0; delta >>= 1) {\\n                y = (y * y) / SCALE;\\n\\n                // Is y^2 > 2 and so in the range [2,4)?\\n                if (y >= 2 * SCALE) {\\n                    // Add the 2^(-m) factor to the logarithm.\\n                    result += delta;\\n\\n                    // Corresponds to z/2 on Wikipedia.\\n                    y >>= 1;\\n                }\\n            }\\n        }\\n    }\\n\\n    /// @notice Multiplies two unsigned 60.18-decimal fixed-point numbers together, returning a new unsigned 60.18-decimal\\n    /// fixed-point number.\\n    /// @dev See the documentation for the \\\"PRBMath.mulDivFixedPoint\\\" function.\\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The product as an unsigned 60.18-decimal fixed-point number.\\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        result = PRBMath.mulDivFixedPoint(x, y);\\n    }\\n\\n    /// @notice Returns PI as an unsigned 60.18-decimal fixed-point number.\\n    function pi() internal pure returns (uint256 result) {\\n        result = 3_141592653589793238;\\n    }\\n\\n    /// @notice Raises x to the power of y.\\n    ///\\n    /// @dev Based on the insight that x^y = 2^(log2(x) * y).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"exp2\\\", \\\"log2\\\" and \\\"mul\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"exp2\\\", \\\"log2\\\" and \\\"mul\\\".\\n    /// - Assumes 0^0 is 1.\\n    ///\\n    /// @param x Number to raise to given power y, as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y Exponent to raise x to, as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result x raised to power y, as an unsigned 60.18-decimal fixed-point number.\\n    function pow(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            result = y == 0 ? SCALE : uint256(0);\\n        } else {\\n            result = exp2(mul(log2(x), y));\\n        }\\n    }\\n\\n    /// @notice Raises x (unsigned 60.18-decimal fixed-point number) to the power of y (basic unsigned integer) using the\\n    /// famous algorithm \\\"exponentiation by squaring\\\".\\n    ///\\n    /// @dev See https://en.wikipedia.org/wiki/Exponentiation_by_squaring\\n    ///\\n    /// Requirements:\\n    /// - The result must fit within MAX_UD60x18.\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"mul\\\".\\n    /// - Assumes 0^0 is 1.\\n    ///\\n    /// @param x The base as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The exponent as an uint256.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function powu(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        // Calculate the first iteration of the loop in advance.\\n        result = y & 1 > 0 ? x : SCALE;\\n\\n        // Equivalent to \\\"for(y /= 2; y > 0; y /= 2)\\\" but faster.\\n        for (y >>= 1; y > 0; y >>= 1) {\\n            x = PRBMath.mulDivFixedPoint(x, x);\\n\\n            // Equivalent to \\\"y % 2 == 1\\\" but faster.\\n            if (y & 1 > 0) {\\n                result = PRBMath.mulDivFixedPoint(result, x);\\n            }\\n        }\\n    }\\n\\n    /// @notice Returns 1 as an unsigned 60.18-decimal fixed-point number.\\n    function scale() internal pure returns (uint256 result) {\\n        result = SCALE;\\n    }\\n\\n    /// @notice Calculates the square root of x, rounding down.\\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\\n    ///\\n    /// Requirements:\\n    /// - x must be less than MAX_UD60x18 / SCALE.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the square root.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point .\\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            if (x > MAX_UD60x18 / SCALE) {\\n                revert PRBMathUD60x18__SqrtOverflow(x);\\n            }\\n            // Multiply x by the SCALE to account for the factor of SCALE that is picked up when multiplying two unsigned\\n            // 60.18-decimal fixed-point numbers together (in this case, those two numbers are both the square root).\\n            result = PRBMath.sqrt(x * SCALE);\\n        }\\n    }\\n\\n    /// @notice Converts a unsigned 60.18-decimal fixed-point number to basic integer form, rounding down in the process.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to convert.\\n    /// @return result The same number in basic integer form.\\n    function toUint(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            result = x / SCALE;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[{"astId":227,"contract":"contracts/Registry.sol:Registry","label":"PENDING_PERIOD","offset":0,"slot":"0","type":"t_uint256"},{"astId":230,"contract":"contracts/Registry.sol:Registry","label":"VOTING_PERIOD","offset":0,"slot":"1","type":"t_uint256"},{"astId":233,"contract":"contracts/Registry.sol:Registry","label":"QUIET_ENDING_PERIOD","offset":0,"slot":"2","type":"t_uint256"},{"astId":240,"contract":"contracts/Registry.sol:Registry","label":"FOUNDERS_VOUCHER","offset":0,"slot":"3","type":"t_uint256"},{"astId":243,"contract":"contracts/Registry.sol:Registry","label":"baseURI","offset":0,"slot":"4","type":"t_string_storage"},{"astId":245,"contract":"contracts/Registry.sol:Registry","label":"_symbol","offset":0,"slot":"5","type":"t_string_storage"},{"astId":247,"contract":"contracts/Registry.sol:Registry","label":"_name","offset":0,"slot":"6","type":"t_string_storage"},{"astId":291,"contract":"contracts/Registry.sol:Registry","label":"vouches","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_struct(Vouches)260_storage)"},{"astId":297,"contract":"contracts/Registry.sol:Registry","label":"accounts","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_struct(Account)269_storage)"},{"astId":301,"contract":"contracts/Registry.sol:Registry","label":"owned","offset":0,"slot":"9","type":"t_mapping(t_address,t_uint256)"},{"astId":307,"contract":"contracts/Registry.sol:Registry","label":"challenges","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_array(t_struct(Challenge)286_storage)dyn_storage)"},{"astId":309,"contract":"contracts/Registry.sol:Registry","label":"__totalSupply","offset":0,"slot":"11","type":"t_uint256"},{"astId":311,"contract":"contracts/Registry.sol:Registry","label":"_nEntries","offset":0,"slot":"12","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Challenge)286_storage)dyn_storage":{"base":"t_struct(Challenge)286_storage","encoding":"dynamic_array","label":"struct Registry.Challenge[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_int8":{"encoding":"inplace","label":"int8","numberOfBytes":"1"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_array(t_struct(Challenge)286_storage)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Registry.Challenge[])","numberOfBytes":"32","value":"t_array(t_struct(Challenge)286_storage)dyn_storage"},"t_mapping(t_uint256,t_int8)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => int8)","numberOfBytes":"32","value":"t_int8"},"t_mapping(t_uint256,t_struct(Account)269_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Registry.Account)","numberOfBytes":"32","value":"t_struct(Account)269_storage"},"t_mapping(t_uint256,t_struct(Vouch)252_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Registry.Vouch)","numberOfBytes":"32","value":"t_struct(Vouch)252_storage"},"t_mapping(t_uint256,t_struct(Vouches)260_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Registry.Vouches)","numberOfBytes":"32","value":"t_struct(Vouches)260_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Account)269_storage":{"encoding":"inplace","label":"struct Registry.Account","members":[{"astId":262,"contract":"contracts/Registry.sol:Registry","label":"account","offset":0,"slot":"0","type":"t_address"},{"astId":264,"contract":"contracts/Registry.sol:Registry","label":"voucher","offset":0,"slot":"1","type":"t_uint256"},{"astId":266,"contract":"contracts/Registry.sol:Registry","label":"valid","offset":0,"slot":"2","type":"t_bool"},{"astId":268,"contract":"contracts/Registry.sol:Registry","label":"timesChallenged","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_struct(Challenge)286_storage":{"encoding":"inplace","label":"struct Registry.Challenge","members":[{"astId":271,"contract":"contracts/Registry.sol:Registry","label":"executed","offset":0,"slot":"0","type":"t_bool"},{"astId":273,"contract":"contracts/Registry.sol:Registry","label":"lastOutcome","offset":1,"slot":"0","type":"t_int8"},{"astId":275,"contract":"contracts/Registry.sol:Registry","label":"creationDate","offset":0,"slot":"1","type":"t_uint256"},{"astId":277,"contract":"contracts/Registry.sol:Registry","label":"endDate","offset":0,"slot":"2","type":"t_uint256"},{"astId":281,"contract":"contracts/Registry.sol:Registry","label":"votes","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_int8)"},{"astId":283,"contract":"contracts/Registry.sol:Registry","label":"nVoted","offset":0,"slot":"4","type":"t_uint256"},{"astId":285,"contract":"contracts/Registry.sol:Registry","label":"nFor","offset":0,"slot":"5","type":"t_uint256"}],"numberOfBytes":"192"},"t_struct(Vouch)252_storage":{"encoding":"inplace","label":"struct Registry.Vouch","members":[{"astId":249,"contract":"contracts/Registry.sol:Registry","label":"personCid","offset":0,"slot":"0","type":"t_string_storage"},{"astId":251,"contract":"contracts/Registry.sol:Registry","label":"vouchDate","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(Vouches)260_storage":{"encoding":"inplace","label":"struct Registry.Vouches","members":[{"astId":254,"contract":"contracts/Registry.sol:Registry","label":"number","offset":0,"slot":"0","type":"t_uint256"},{"astId":259,"contract":"contracts/Registry.sol:Registry","label":"vouches","offset":0,"slot":"1","type":"t_mapping(t_uint256,t_struct(Vouch)252_storage)"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"errors":{"ErrorAccountSolidified()":[{"notice":"Errors "}],"PRBMath__MulDivFixedPointOverflow(uint256)":[{"notice":"Emitted when the result overflows uint256."}],"PRBMath__MulDivOverflow(uint256,uint256)":[{"notice":"Emitted when the result overflows uint256."}]},"kind":"user","methods":{"canVote(uint256,uint256)":{"notice":"A tokenId can vote if - The voter account is valid - AND either - voterTokenId was vouched by voucherTokenId (which is the voucher of the challenged tokenId) - OR the voterTokenId is the voucherTokenId themselves.  The FOUNDERS_VOUCHER can, in theory vote on founders challenges, but no address owns that  token and so no problem "},"vouch(address,string)":{"notice":"The msgSender must be a valid account in the registry and vouch for the provided account and personCid pair"}},"version":1}}},"prb-math/contracts/PRBMath.sol":{"PRBMath":{"abi":[],"devdoc":{"details":"Common mathematical functions used in both PRBMathSD59x18 and PRBMathUD60x18. Note that this shared library does not always assume the signed 59.18-decimal fixed-point or the unsigned 60.18-decimal fixed-point representation. When it does not, it is explicitly mentioned in the NatSpec documentation.","kind":"dev","methods":{},"stateVariables":{"SCALE":{"details":"How many trailing decimals can be represented."},"SCALE_INVERSE":{"details":"SCALE inverted mod 2^256."},"SCALE_LPOTD":{"details":"Largest power of two divisor of SCALE."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bcc1f1479c98691ced3d6d51dfaf6ac156cc304f0705b3b712509690292a27cb64736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xC1 CALL SELFBALANCE SWAP13 SWAP9 PUSH10 0x1CED3D6D51DFAF6AC156 0xCC ADDRESS 0x4F SMOD SDIV 0xB3 0xB7 SLT POP SWAP7 SWAP1 0x29 0x2A 0x27 0xCB PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"3951:21323:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;3951:21323:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bcc1f1479c98691ced3d6d51dfaf6ac156cc304f0705b3b712509690292a27cb64736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xC1 CALL SELFBALANCE SWAP13 SWAP9 PUSH10 0x1CED3D6D51DFAF6AC156 0xCC ADDRESS 0x4F SMOD SDIV 0xB3 0xB7 SLT POP SWAP7 SWAP1 0x29 0x2A 0x27 0xCB PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"3951:21323:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"exp2(uint256)":"infinite","mostSignificantBit(uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDivFixedPoint(uint256,uint256)":"infinite","mulDivSigned(int256,int256,int256)":"infinite","sqrt(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Common mathematical functions used in both PRBMathSD59x18 and PRBMathUD60x18. Note that this shared library does not always assume the signed 59.18-decimal fixed-point or the unsigned 60.18-decimal fixed-point representation. When it does not, it is explicitly mentioned in the NatSpec documentation.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"SCALE\":{\"details\":\"How many trailing decimals can be represented.\"},\"SCALE_INVERSE\":{\"details\":\"SCALE inverted mod 2^256.\"},\"SCALE_LPOTD\":{\"details\":\"Largest power of two divisor of SCALE.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"prb-math/contracts/PRBMath.sol\":\"PRBMath\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"prb-math/contracts/PRBMath.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity >=0.8.4;\\n\\n/// @notice Emitted when the result overflows uint256.\\nerror PRBMath__MulDivFixedPointOverflow(uint256 prod1);\\n\\n/// @notice Emitted when the result overflows uint256.\\nerror PRBMath__MulDivOverflow(uint256 prod1, uint256 denominator);\\n\\n/// @notice Emitted when one of the inputs is type(int256).min.\\nerror PRBMath__MulDivSignedInputTooSmall();\\n\\n/// @notice Emitted when the intermediary absolute result overflows int256.\\nerror PRBMath__MulDivSignedOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is MIN_SD59x18.\\nerror PRBMathSD59x18__AbsInputTooSmall();\\n\\n/// @notice Emitted when ceiling a number overflows SD59x18.\\nerror PRBMathSD59x18__CeilOverflow(int256 x);\\n\\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\\nerror PRBMathSD59x18__DivInputTooSmall();\\n\\n/// @notice Emitted when one of the intermediary unsigned results overflows SD59x18.\\nerror PRBMathSD59x18__DivOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is greater than 133.084258667509499441.\\nerror PRBMathSD59x18__ExpInputTooBig(int256 x);\\n\\n/// @notice Emitted when the input is greater than 192.\\nerror PRBMathSD59x18__Exp2InputTooBig(int256 x);\\n\\n/// @notice Emitted when flooring a number underflows SD59x18.\\nerror PRBMathSD59x18__FloorUnderflow(int256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format overflows SD59x18.\\nerror PRBMathSD59x18__FromIntOverflow(int256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format underflows SD59x18.\\nerror PRBMathSD59x18__FromIntUnderflow(int256 x);\\n\\n/// @notice Emitted when the product of the inputs is negative.\\nerror PRBMathSD59x18__GmNegativeProduct(int256 x, int256 y);\\n\\n/// @notice Emitted when multiplying the inputs overflows SD59x18.\\nerror PRBMathSD59x18__GmOverflow(int256 x, int256 y);\\n\\n/// @notice Emitted when the input is less than or equal to zero.\\nerror PRBMathSD59x18__LogInputTooSmall(int256 x);\\n\\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\\nerror PRBMathSD59x18__MulInputTooSmall();\\n\\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\\nerror PRBMathSD59x18__MulOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\\nerror PRBMathSD59x18__PowuOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is negative.\\nerror PRBMathSD59x18__SqrtNegativeInput(int256 x);\\n\\n/// @notice Emitted when the calculating the square root overflows SD59x18.\\nerror PRBMathSD59x18__SqrtOverflow(int256 x);\\n\\n/// @notice Emitted when addition overflows UD60x18.\\nerror PRBMathUD60x18__AddOverflow(uint256 x, uint256 y);\\n\\n/// @notice Emitted when ceiling a number overflows UD60x18.\\nerror PRBMathUD60x18__CeilOverflow(uint256 x);\\n\\n/// @notice Emitted when the input is greater than 133.084258667509499441.\\nerror PRBMathUD60x18__ExpInputTooBig(uint256 x);\\n\\n/// @notice Emitted when the input is greater than 192.\\nerror PRBMathUD60x18__Exp2InputTooBig(uint256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format format overflows UD60x18.\\nerror PRBMathUD60x18__FromUintOverflow(uint256 x);\\n\\n/// @notice Emitted when multiplying the inputs overflows UD60x18.\\nerror PRBMathUD60x18__GmOverflow(uint256 x, uint256 y);\\n\\n/// @notice Emitted when the input is less than 1.\\nerror PRBMathUD60x18__LogInputTooSmall(uint256 x);\\n\\n/// @notice Emitted when the calculating the square root overflows UD60x18.\\nerror PRBMathUD60x18__SqrtOverflow(uint256 x);\\n\\n/// @notice Emitted when subtraction underflows UD60x18.\\nerror PRBMathUD60x18__SubUnderflow(uint256 x, uint256 y);\\n\\n/// @dev Common mathematical functions used in both PRBMathSD59x18 and PRBMathUD60x18. Note that this shared library\\n/// does not always assume the signed 59.18-decimal fixed-point or the unsigned 60.18-decimal fixed-point\\n/// representation. When it does not, it is explicitly mentioned in the NatSpec documentation.\\nlibrary PRBMath {\\n    /// STRUCTS ///\\n\\n    struct SD59x18 {\\n        int256 value;\\n    }\\n\\n    struct UD60x18 {\\n        uint256 value;\\n    }\\n\\n    /// STORAGE ///\\n\\n    /// @dev How many trailing decimals can be represented.\\n    uint256 internal constant SCALE = 1e18;\\n\\n    /// @dev Largest power of two divisor of SCALE.\\n    uint256 internal constant SCALE_LPOTD = 262144;\\n\\n    /// @dev SCALE inverted mod 2^256.\\n    uint256 internal constant SCALE_INVERSE =\\n        78156646155174841979727994598816262306175212592076161876661_508869554232690281;\\n\\n    /// FUNCTIONS ///\\n\\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\\n    /// @dev Has to use 192.64-bit fixed-point numbers.\\n    /// See https://ethereum.stackexchange.com/a/96594/24693.\\n    /// @param x The exponent as an unsigned 192.64-bit fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp2(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            // Start from 0.5 in the 192.64-bit fixed-point format.\\n            result = 0x800000000000000000000000000000000000000000000000;\\n\\n            // Multiply the result by root(2, 2^-i) when the bit at position i is 1. None of the intermediary results overflows\\n            // because the initial result is 2^191 and all magic factors are less than 2^65.\\n            if (x & 0x8000000000000000 > 0) {\\n                result = (result * 0x16A09E667F3BCC909) >> 64;\\n            }\\n            if (x & 0x4000000000000000 > 0) {\\n                result = (result * 0x1306FE0A31B7152DF) >> 64;\\n            }\\n            if (x & 0x2000000000000000 > 0) {\\n                result = (result * 0x1172B83C7D517ADCE) >> 64;\\n            }\\n            if (x & 0x1000000000000000 > 0) {\\n                result = (result * 0x10B5586CF9890F62A) >> 64;\\n            }\\n            if (x & 0x800000000000000 > 0) {\\n                result = (result * 0x1059B0D31585743AE) >> 64;\\n            }\\n            if (x & 0x400000000000000 > 0) {\\n                result = (result * 0x102C9A3E778060EE7) >> 64;\\n            }\\n            if (x & 0x200000000000000 > 0) {\\n                result = (result * 0x10163DA9FB33356D8) >> 64;\\n            }\\n            if (x & 0x100000000000000 > 0) {\\n                result = (result * 0x100B1AFA5ABCBED61) >> 64;\\n            }\\n            if (x & 0x80000000000000 > 0) {\\n                result = (result * 0x10058C86DA1C09EA2) >> 64;\\n            }\\n            if (x & 0x40000000000000 > 0) {\\n                result = (result * 0x1002C605E2E8CEC50) >> 64;\\n            }\\n            if (x & 0x20000000000000 > 0) {\\n                result = (result * 0x100162F3904051FA1) >> 64;\\n            }\\n            if (x & 0x10000000000000 > 0) {\\n                result = (result * 0x1000B175EFFDC76BA) >> 64;\\n            }\\n            if (x & 0x8000000000000 > 0) {\\n                result = (result * 0x100058BA01FB9F96D) >> 64;\\n            }\\n            if (x & 0x4000000000000 > 0) {\\n                result = (result * 0x10002C5CC37DA9492) >> 64;\\n            }\\n            if (x & 0x2000000000000 > 0) {\\n                result = (result * 0x1000162E525EE0547) >> 64;\\n            }\\n            if (x & 0x1000000000000 > 0) {\\n                result = (result * 0x10000B17255775C04) >> 64;\\n            }\\n            if (x & 0x800000000000 > 0) {\\n                result = (result * 0x1000058B91B5BC9AE) >> 64;\\n            }\\n            if (x & 0x400000000000 > 0) {\\n                result = (result * 0x100002C5C89D5EC6D) >> 64;\\n            }\\n            if (x & 0x200000000000 > 0) {\\n                result = (result * 0x10000162E43F4F831) >> 64;\\n            }\\n            if (x & 0x100000000000 > 0) {\\n                result = (result * 0x100000B1721BCFC9A) >> 64;\\n            }\\n            if (x & 0x80000000000 > 0) {\\n                result = (result * 0x10000058B90CF1E6E) >> 64;\\n            }\\n            if (x & 0x40000000000 > 0) {\\n                result = (result * 0x1000002C5C863B73F) >> 64;\\n            }\\n            if (x & 0x20000000000 > 0) {\\n                result = (result * 0x100000162E430E5A2) >> 64;\\n            }\\n            if (x & 0x10000000000 > 0) {\\n                result = (result * 0x1000000B172183551) >> 64;\\n            }\\n            if (x & 0x8000000000 > 0) {\\n                result = (result * 0x100000058B90C0B49) >> 64;\\n            }\\n            if (x & 0x4000000000 > 0) {\\n                result = (result * 0x10000002C5C8601CC) >> 64;\\n            }\\n            if (x & 0x2000000000 > 0) {\\n                result = (result * 0x1000000162E42FFF0) >> 64;\\n            }\\n            if (x & 0x1000000000 > 0) {\\n                result = (result * 0x10000000B17217FBB) >> 64;\\n            }\\n            if (x & 0x800000000 > 0) {\\n                result = (result * 0x1000000058B90BFCE) >> 64;\\n            }\\n            if (x & 0x400000000 > 0) {\\n                result = (result * 0x100000002C5C85FE3) >> 64;\\n            }\\n            if (x & 0x200000000 > 0) {\\n                result = (result * 0x10000000162E42FF1) >> 64;\\n            }\\n            if (x & 0x100000000 > 0) {\\n                result = (result * 0x100000000B17217F8) >> 64;\\n            }\\n            if (x & 0x80000000 > 0) {\\n                result = (result * 0x10000000058B90BFC) >> 64;\\n            }\\n            if (x & 0x40000000 > 0) {\\n                result = (result * 0x1000000002C5C85FE) >> 64;\\n            }\\n            if (x & 0x20000000 > 0) {\\n                result = (result * 0x100000000162E42FF) >> 64;\\n            }\\n            if (x & 0x10000000 > 0) {\\n                result = (result * 0x1000000000B17217F) >> 64;\\n            }\\n            if (x & 0x8000000 > 0) {\\n                result = (result * 0x100000000058B90C0) >> 64;\\n            }\\n            if (x & 0x4000000 > 0) {\\n                result = (result * 0x10000000002C5C860) >> 64;\\n            }\\n            if (x & 0x2000000 > 0) {\\n                result = (result * 0x1000000000162E430) >> 64;\\n            }\\n            if (x & 0x1000000 > 0) {\\n                result = (result * 0x10000000000B17218) >> 64;\\n            }\\n            if (x & 0x800000 > 0) {\\n                result = (result * 0x1000000000058B90C) >> 64;\\n            }\\n            if (x & 0x400000 > 0) {\\n                result = (result * 0x100000000002C5C86) >> 64;\\n            }\\n            if (x & 0x200000 > 0) {\\n                result = (result * 0x10000000000162E43) >> 64;\\n            }\\n            if (x & 0x100000 > 0) {\\n                result = (result * 0x100000000000B1721) >> 64;\\n            }\\n            if (x & 0x80000 > 0) {\\n                result = (result * 0x10000000000058B91) >> 64;\\n            }\\n            if (x & 0x40000 > 0) {\\n                result = (result * 0x1000000000002C5C8) >> 64;\\n            }\\n            if (x & 0x20000 > 0) {\\n                result = (result * 0x100000000000162E4) >> 64;\\n            }\\n            if (x & 0x10000 > 0) {\\n                result = (result * 0x1000000000000B172) >> 64;\\n            }\\n            if (x & 0x8000 > 0) {\\n                result = (result * 0x100000000000058B9) >> 64;\\n            }\\n            if (x & 0x4000 > 0) {\\n                result = (result * 0x10000000000002C5D) >> 64;\\n            }\\n            if (x & 0x2000 > 0) {\\n                result = (result * 0x1000000000000162E) >> 64;\\n            }\\n            if (x & 0x1000 > 0) {\\n                result = (result * 0x10000000000000B17) >> 64;\\n            }\\n            if (x & 0x800 > 0) {\\n                result = (result * 0x1000000000000058C) >> 64;\\n            }\\n            if (x & 0x400 > 0) {\\n                result = (result * 0x100000000000002C6) >> 64;\\n            }\\n            if (x & 0x200 > 0) {\\n                result = (result * 0x10000000000000163) >> 64;\\n            }\\n            if (x & 0x100 > 0) {\\n                result = (result * 0x100000000000000B1) >> 64;\\n            }\\n            if (x & 0x80 > 0) {\\n                result = (result * 0x10000000000000059) >> 64;\\n            }\\n            if (x & 0x40 > 0) {\\n                result = (result * 0x1000000000000002C) >> 64;\\n            }\\n            if (x & 0x20 > 0) {\\n                result = (result * 0x10000000000000016) >> 64;\\n            }\\n            if (x & 0x10 > 0) {\\n                result = (result * 0x1000000000000000B) >> 64;\\n            }\\n            if (x & 0x8 > 0) {\\n                result = (result * 0x10000000000000006) >> 64;\\n            }\\n            if (x & 0x4 > 0) {\\n                result = (result * 0x10000000000000003) >> 64;\\n            }\\n            if (x & 0x2 > 0) {\\n                result = (result * 0x10000000000000001) >> 64;\\n            }\\n            if (x & 0x1 > 0) {\\n                result = (result * 0x10000000000000001) >> 64;\\n            }\\n\\n            // We're doing two things at the same time:\\n            //\\n            //   1. Multiply the result by 2^n + 1, where \\\"2^n\\\" is the integer part and the one is added to account for\\n            //      the fact that we initially set the result to 0.5. This is accomplished by subtracting from 191\\n            //      rather than 192.\\n            //   2. Convert the result to the unsigned 60.18-decimal fixed-point format.\\n            //\\n            // This works because 2^(191-ip) = 2^ip / 2^191, where \\\"ip\\\" is the integer part \\\"2^n\\\".\\n            result *= SCALE;\\n            result >>= (191 - (x >> 64));\\n        }\\n    }\\n\\n    /// @notice Finds the zero-based index of the first one in the binary representation of x.\\n    /// @dev See the note on msb in the \\\"Find First Set\\\" Wikipedia article https://en.wikipedia.org/wiki/Find_first_set\\n    /// @param x The uint256 number for which to find the index of the most significant bit.\\n    /// @return msb The index of the most significant bit as an uint256.\\n    function mostSignificantBit(uint256 x) internal pure returns (uint256 msb) {\\n        if (x >= 2**128) {\\n            x >>= 128;\\n            msb += 128;\\n        }\\n        if (x >= 2**64) {\\n            x >>= 64;\\n            msb += 64;\\n        }\\n        if (x >= 2**32) {\\n            x >>= 32;\\n            msb += 32;\\n        }\\n        if (x >= 2**16) {\\n            x >>= 16;\\n            msb += 16;\\n        }\\n        if (x >= 2**8) {\\n            x >>= 8;\\n            msb += 8;\\n        }\\n        if (x >= 2**4) {\\n            x >>= 4;\\n            msb += 4;\\n        }\\n        if (x >= 2**2) {\\n            x >>= 2;\\n            msb += 2;\\n        }\\n        if (x >= 2**1) {\\n            // No need to shift x any more.\\n            msb += 1;\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f7denominator) with full precision.\\n    ///\\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv.\\n    ///\\n    /// Requirements:\\n    /// - The denominator cannot be zero.\\n    /// - The result must fit within uint256.\\n    ///\\n    /// Caveats:\\n    /// - This function does not work with fixed-point numbers.\\n    ///\\n    /// @param x The multiplicand as an uint256.\\n    /// @param y The multiplier as an uint256.\\n    /// @param denominator The divisor as an uint256.\\n    /// @return result The result as an uint256.\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n        // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n        // variables such that product = prod1 * 2^256 + prod0.\\n        uint256 prod0; // Least significant 256 bits of the product\\n        uint256 prod1; // Most significant 256 bits of the product\\n        assembly {\\n            let mm := mulmod(x, y, not(0))\\n            prod0 := mul(x, y)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        // Handle non-overflow cases, 256 by 256 division.\\n        if (prod1 == 0) {\\n            unchecked {\\n                result = prod0 / denominator;\\n            }\\n            return result;\\n        }\\n\\n        // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n        if (prod1 >= denominator) {\\n            revert PRBMath__MulDivOverflow(prod1, denominator);\\n        }\\n\\n        ///////////////////////////////////////////////\\n        // 512 by 256 division.\\n        ///////////////////////////////////////////////\\n\\n        // Make division exact by subtracting the remainder from [prod1 prod0].\\n        uint256 remainder;\\n        assembly {\\n            // Compute remainder using mulmod.\\n            remainder := mulmod(x, y, denominator)\\n\\n            // Subtract 256 bit number from 512 bit number.\\n            prod1 := sub(prod1, gt(remainder, prod0))\\n            prod0 := sub(prod0, remainder)\\n        }\\n\\n        // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n        // See https://cs.stackexchange.com/q/138556/92363.\\n        unchecked {\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 lpotdod = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by lpotdod.\\n                denominator := div(denominator, lpotdod)\\n\\n                // Divide [prod1 prod0] by lpotdod.\\n                prod0 := div(prod0, lpotdod)\\n\\n                // Flip lpotdod such that it is 2^256 / lpotdod. If lpotdod is zero, then it becomes one.\\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * lpotdod;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f71e18) with full precision.\\n    ///\\n    /// @dev Variant of \\\"mulDiv\\\" with constant folding, i.e. in which the denominator is always 1e18. Before returning the\\n    /// final result, we add 1 if (x * y) % SCALE >= HALF_SCALE. Without this, 6.6e-19 would be truncated to 0 instead of\\n    /// being rounded to 1e-18.  See \\\"Listing 6\\\" and text above it at https://accu.org/index.php/journals/1717.\\n    ///\\n    /// Requirements:\\n    /// - The result must fit within uint256.\\n    ///\\n    /// Caveats:\\n    /// - The body is purposely left uncommented; see the NatSpec comments in \\\"PRBMath.mulDiv\\\" to understand how this works.\\n    /// - It is assumed that the result can never be type(uint256).max when x and y solve the following two equations:\\n    ///     1. x * y = type(uint256).max * SCALE\\n    ///     2. (x * y) % SCALE >= SCALE / 2\\n    ///\\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function mulDivFixedPoint(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(x, y, not(0))\\n            prod0 := mul(x, y)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= SCALE) {\\n            revert PRBMath__MulDivFixedPointOverflow(prod1);\\n        }\\n\\n        uint256 remainder;\\n        uint256 roundUpUnit;\\n        assembly {\\n            remainder := mulmod(x, y, SCALE)\\n            roundUpUnit := gt(remainder, 499999999999999999)\\n        }\\n\\n        if (prod1 == 0) {\\n            unchecked {\\n                result = (prod0 / SCALE) + roundUpUnit;\\n                return result;\\n            }\\n        }\\n\\n        assembly {\\n            result := add(\\n                mul(\\n                    or(\\n                        div(sub(prod0, remainder), SCALE_LPOTD),\\n                        mul(sub(prod1, gt(remainder, prod0)), add(div(sub(0, SCALE_LPOTD), SCALE_LPOTD), 1))\\n                    ),\\n                    SCALE_INVERSE\\n                ),\\n                roundUpUnit\\n            )\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f7denominator) with full precision.\\n    ///\\n    /// @dev An extension of \\\"mulDiv\\\" for signed numbers. Works by computing the signs and the absolute values separately.\\n    ///\\n    /// Requirements:\\n    /// - None of the inputs can be type(int256).min.\\n    /// - The result must fit within int256.\\n    ///\\n    /// @param x The multiplicand as an int256.\\n    /// @param y The multiplier as an int256.\\n    /// @param denominator The divisor as an int256.\\n    /// @return result The result as an int256.\\n    function mulDivSigned(\\n        int256 x,\\n        int256 y,\\n        int256 denominator\\n    ) internal pure returns (int256 result) {\\n        if (x == type(int256).min || y == type(int256).min || denominator == type(int256).min) {\\n            revert PRBMath__MulDivSignedInputTooSmall();\\n        }\\n\\n        // Get hold of the absolute values of x, y and the denominator.\\n        uint256 ax;\\n        uint256 ay;\\n        uint256 ad;\\n        unchecked {\\n            ax = x < 0 ? uint256(-x) : uint256(x);\\n            ay = y < 0 ? uint256(-y) : uint256(y);\\n            ad = denominator < 0 ? uint256(-denominator) : uint256(denominator);\\n        }\\n\\n        // Compute the absolute value of (x*y)\\u00f7denominator. The result must fit within int256.\\n        uint256 rAbs = mulDiv(ax, ay, ad);\\n        if (rAbs > uint256(type(int256).max)) {\\n            revert PRBMath__MulDivSignedOverflow(rAbs);\\n        }\\n\\n        // Get the signs of x, y and the denominator.\\n        uint256 sx;\\n        uint256 sy;\\n        uint256 sd;\\n        assembly {\\n            sx := sgt(x, sub(0, 1))\\n            sy := sgt(y, sub(0, 1))\\n            sd := sgt(denominator, sub(0, 1))\\n        }\\n\\n        // XOR over sx, sy and sd. This is checking whether there are one or three negative signs in the inputs.\\n        // If yes, the result should be negative.\\n        result = sx ^ sy ^ sd == 0 ? -int256(rAbs) : int256(rAbs);\\n    }\\n\\n    /// @notice Calculates the square root of x, rounding down.\\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\\n    ///\\n    /// Caveats:\\n    /// - This function does not work with fixed-point numbers.\\n    ///\\n    /// @param x The uint256 number for which to calculate the square root.\\n    /// @return result The result as an uint256.\\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n\\n        // Set the initial guess to the least power of two that is greater than or equal to sqrt(x).\\n        uint256 xAux = uint256(x);\\n        result = 1;\\n        if (xAux >= 0x100000000000000000000000000000000) {\\n            xAux >>= 128;\\n            result <<= 64;\\n        }\\n        if (xAux >= 0x10000000000000000) {\\n            xAux >>= 64;\\n            result <<= 32;\\n        }\\n        if (xAux >= 0x100000000) {\\n            xAux >>= 32;\\n            result <<= 16;\\n        }\\n        if (xAux >= 0x10000) {\\n            xAux >>= 16;\\n            result <<= 8;\\n        }\\n        if (xAux >= 0x100) {\\n            xAux >>= 8;\\n            result <<= 4;\\n        }\\n        if (xAux >= 0x10) {\\n            xAux >>= 4;\\n            result <<= 2;\\n        }\\n        if (xAux >= 0x8) {\\n            result <<= 1;\\n        }\\n\\n        // The operations can never overflow because the result is max 2^127 when it enters this block.\\n        unchecked {\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1; // Seven iterations should be enough\\n            uint256 roundedDownResult = x / result;\\n            return result >= roundedDownResult ? roundedDownResult : result;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"prb-math/contracts/PRBMathUD60x18.sol":{"PRBMathUD60x18":{"abi":[],"devdoc":{"author":"Paul Razvan Berg","kind":"dev","methods":{},"stateVariables":{"HALF_SCALE":{"details":"Half the SCALE number."},"LOG2_E":{"details":"log2(e) as an unsigned 60.18-decimal fixed-point number."},"MAX_UD60x18":{"details":"The maximum value an unsigned 60.18-decimal fixed-point number can have."},"MAX_WHOLE_UD60x18":{"details":"The maximum whole value an unsigned 60.18-decimal fixed-point number can have."},"SCALE":{"details":"How many trailing decimals can be represented."}},"title":"PRBMathUD60x18","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220870e757fd55201a8a13f717b3709c5693dc8c01f3b64e23fb9614e28e5830bcb64736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xE PUSH22 0x7FD55201A8A13F717B3709C5693DC8C01F3B64E23FB9 PUSH2 0x4E28 0xE5 DUP4 SIGNEXTEND 0xCB PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"566:24502:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;566:24502:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220870e757fd55201a8a13f717b3709c5693dc8c01f3b64e23fb9614e28e5830bcb64736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xE PUSH22 0x7FD55201A8A13F717B3709C5693DC8C01F3B64E23FB9 PUSH2 0x4E28 0xE5 DUP4 SIGNEXTEND 0xCB PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"566:24502:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"avg(uint256,uint256)":"infinite","ceil(uint256)":"infinite","div(uint256,uint256)":"infinite","e()":"infinite","exp(uint256)":"infinite","exp2(uint256)":"infinite","floor(uint256)":"infinite","frac(uint256)":"infinite","fromUint(uint256)":"infinite","gm(uint256,uint256)":"infinite","inv(uint256)":"infinite","ln(uint256)":"infinite","log10(uint256)":"infinite","log2(uint256)":"infinite","mul(uint256,uint256)":"infinite","pi()":"infinite","pow(uint256,uint256)":"infinite","powu(uint256,uint256)":"infinite","scale()":"infinite","sqrt(uint256)":"infinite","toUint(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"HALF_SCALE\":{\"details\":\"Half the SCALE number.\"},\"LOG2_E\":{\"details\":\"log2(e) as an unsigned 60.18-decimal fixed-point number.\"},\"MAX_UD60x18\":{\"details\":\"The maximum value an unsigned 60.18-decimal fixed-point number can have.\"},\"MAX_WHOLE_UD60x18\":{\"details\":\"The maximum whole value an unsigned 60.18-decimal fixed-point number can have.\"},\"SCALE\":{\"details\":\"How many trailing decimals can be represented.\"}},\"title\":\"PRBMathUD60x18\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Smart contract library for advanced fixed-point math that works with uint256 numbers considered to have 18 trailing decimals. We call this number representation unsigned 60.18-decimal fixed-point, since there can be up to 60 digits in the integer part and up to 18 decimals in the fractional part. The numbers are bound by the minimum and the maximum values permitted by the Solidity type uint256.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"prb-math/contracts/PRBMathUD60x18.sol\":\"PRBMathUD60x18\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"prb-math/contracts/PRBMath.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity >=0.8.4;\\n\\n/// @notice Emitted when the result overflows uint256.\\nerror PRBMath__MulDivFixedPointOverflow(uint256 prod1);\\n\\n/// @notice Emitted when the result overflows uint256.\\nerror PRBMath__MulDivOverflow(uint256 prod1, uint256 denominator);\\n\\n/// @notice Emitted when one of the inputs is type(int256).min.\\nerror PRBMath__MulDivSignedInputTooSmall();\\n\\n/// @notice Emitted when the intermediary absolute result overflows int256.\\nerror PRBMath__MulDivSignedOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is MIN_SD59x18.\\nerror PRBMathSD59x18__AbsInputTooSmall();\\n\\n/// @notice Emitted when ceiling a number overflows SD59x18.\\nerror PRBMathSD59x18__CeilOverflow(int256 x);\\n\\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\\nerror PRBMathSD59x18__DivInputTooSmall();\\n\\n/// @notice Emitted when one of the intermediary unsigned results overflows SD59x18.\\nerror PRBMathSD59x18__DivOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is greater than 133.084258667509499441.\\nerror PRBMathSD59x18__ExpInputTooBig(int256 x);\\n\\n/// @notice Emitted when the input is greater than 192.\\nerror PRBMathSD59x18__Exp2InputTooBig(int256 x);\\n\\n/// @notice Emitted when flooring a number underflows SD59x18.\\nerror PRBMathSD59x18__FloorUnderflow(int256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format overflows SD59x18.\\nerror PRBMathSD59x18__FromIntOverflow(int256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format underflows SD59x18.\\nerror PRBMathSD59x18__FromIntUnderflow(int256 x);\\n\\n/// @notice Emitted when the product of the inputs is negative.\\nerror PRBMathSD59x18__GmNegativeProduct(int256 x, int256 y);\\n\\n/// @notice Emitted when multiplying the inputs overflows SD59x18.\\nerror PRBMathSD59x18__GmOverflow(int256 x, int256 y);\\n\\n/// @notice Emitted when the input is less than or equal to zero.\\nerror PRBMathSD59x18__LogInputTooSmall(int256 x);\\n\\n/// @notice Emitted when one of the inputs is MIN_SD59x18.\\nerror PRBMathSD59x18__MulInputTooSmall();\\n\\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\\nerror PRBMathSD59x18__MulOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the intermediary absolute result overflows SD59x18.\\nerror PRBMathSD59x18__PowuOverflow(uint256 rAbs);\\n\\n/// @notice Emitted when the input is negative.\\nerror PRBMathSD59x18__SqrtNegativeInput(int256 x);\\n\\n/// @notice Emitted when the calculating the square root overflows SD59x18.\\nerror PRBMathSD59x18__SqrtOverflow(int256 x);\\n\\n/// @notice Emitted when addition overflows UD60x18.\\nerror PRBMathUD60x18__AddOverflow(uint256 x, uint256 y);\\n\\n/// @notice Emitted when ceiling a number overflows UD60x18.\\nerror PRBMathUD60x18__CeilOverflow(uint256 x);\\n\\n/// @notice Emitted when the input is greater than 133.084258667509499441.\\nerror PRBMathUD60x18__ExpInputTooBig(uint256 x);\\n\\n/// @notice Emitted when the input is greater than 192.\\nerror PRBMathUD60x18__Exp2InputTooBig(uint256 x);\\n\\n/// @notice Emitted when converting a basic integer to the fixed-point format format overflows UD60x18.\\nerror PRBMathUD60x18__FromUintOverflow(uint256 x);\\n\\n/// @notice Emitted when multiplying the inputs overflows UD60x18.\\nerror PRBMathUD60x18__GmOverflow(uint256 x, uint256 y);\\n\\n/// @notice Emitted when the input is less than 1.\\nerror PRBMathUD60x18__LogInputTooSmall(uint256 x);\\n\\n/// @notice Emitted when the calculating the square root overflows UD60x18.\\nerror PRBMathUD60x18__SqrtOverflow(uint256 x);\\n\\n/// @notice Emitted when subtraction underflows UD60x18.\\nerror PRBMathUD60x18__SubUnderflow(uint256 x, uint256 y);\\n\\n/// @dev Common mathematical functions used in both PRBMathSD59x18 and PRBMathUD60x18. Note that this shared library\\n/// does not always assume the signed 59.18-decimal fixed-point or the unsigned 60.18-decimal fixed-point\\n/// representation. When it does not, it is explicitly mentioned in the NatSpec documentation.\\nlibrary PRBMath {\\n    /// STRUCTS ///\\n\\n    struct SD59x18 {\\n        int256 value;\\n    }\\n\\n    struct UD60x18 {\\n        uint256 value;\\n    }\\n\\n    /// STORAGE ///\\n\\n    /// @dev How many trailing decimals can be represented.\\n    uint256 internal constant SCALE = 1e18;\\n\\n    /// @dev Largest power of two divisor of SCALE.\\n    uint256 internal constant SCALE_LPOTD = 262144;\\n\\n    /// @dev SCALE inverted mod 2^256.\\n    uint256 internal constant SCALE_INVERSE =\\n        78156646155174841979727994598816262306175212592076161876661_508869554232690281;\\n\\n    /// FUNCTIONS ///\\n\\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\\n    /// @dev Has to use 192.64-bit fixed-point numbers.\\n    /// See https://ethereum.stackexchange.com/a/96594/24693.\\n    /// @param x The exponent as an unsigned 192.64-bit fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp2(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            // Start from 0.5 in the 192.64-bit fixed-point format.\\n            result = 0x800000000000000000000000000000000000000000000000;\\n\\n            // Multiply the result by root(2, 2^-i) when the bit at position i is 1. None of the intermediary results overflows\\n            // because the initial result is 2^191 and all magic factors are less than 2^65.\\n            if (x & 0x8000000000000000 > 0) {\\n                result = (result * 0x16A09E667F3BCC909) >> 64;\\n            }\\n            if (x & 0x4000000000000000 > 0) {\\n                result = (result * 0x1306FE0A31B7152DF) >> 64;\\n            }\\n            if (x & 0x2000000000000000 > 0) {\\n                result = (result * 0x1172B83C7D517ADCE) >> 64;\\n            }\\n            if (x & 0x1000000000000000 > 0) {\\n                result = (result * 0x10B5586CF9890F62A) >> 64;\\n            }\\n            if (x & 0x800000000000000 > 0) {\\n                result = (result * 0x1059B0D31585743AE) >> 64;\\n            }\\n            if (x & 0x400000000000000 > 0) {\\n                result = (result * 0x102C9A3E778060EE7) >> 64;\\n            }\\n            if (x & 0x200000000000000 > 0) {\\n                result = (result * 0x10163DA9FB33356D8) >> 64;\\n            }\\n            if (x & 0x100000000000000 > 0) {\\n                result = (result * 0x100B1AFA5ABCBED61) >> 64;\\n            }\\n            if (x & 0x80000000000000 > 0) {\\n                result = (result * 0x10058C86DA1C09EA2) >> 64;\\n            }\\n            if (x & 0x40000000000000 > 0) {\\n                result = (result * 0x1002C605E2E8CEC50) >> 64;\\n            }\\n            if (x & 0x20000000000000 > 0) {\\n                result = (result * 0x100162F3904051FA1) >> 64;\\n            }\\n            if (x & 0x10000000000000 > 0) {\\n                result = (result * 0x1000B175EFFDC76BA) >> 64;\\n            }\\n            if (x & 0x8000000000000 > 0) {\\n                result = (result * 0x100058BA01FB9F96D) >> 64;\\n            }\\n            if (x & 0x4000000000000 > 0) {\\n                result = (result * 0x10002C5CC37DA9492) >> 64;\\n            }\\n            if (x & 0x2000000000000 > 0) {\\n                result = (result * 0x1000162E525EE0547) >> 64;\\n            }\\n            if (x & 0x1000000000000 > 0) {\\n                result = (result * 0x10000B17255775C04) >> 64;\\n            }\\n            if (x & 0x800000000000 > 0) {\\n                result = (result * 0x1000058B91B5BC9AE) >> 64;\\n            }\\n            if (x & 0x400000000000 > 0) {\\n                result = (result * 0x100002C5C89D5EC6D) >> 64;\\n            }\\n            if (x & 0x200000000000 > 0) {\\n                result = (result * 0x10000162E43F4F831) >> 64;\\n            }\\n            if (x & 0x100000000000 > 0) {\\n                result = (result * 0x100000B1721BCFC9A) >> 64;\\n            }\\n            if (x & 0x80000000000 > 0) {\\n                result = (result * 0x10000058B90CF1E6E) >> 64;\\n            }\\n            if (x & 0x40000000000 > 0) {\\n                result = (result * 0x1000002C5C863B73F) >> 64;\\n            }\\n            if (x & 0x20000000000 > 0) {\\n                result = (result * 0x100000162E430E5A2) >> 64;\\n            }\\n            if (x & 0x10000000000 > 0) {\\n                result = (result * 0x1000000B172183551) >> 64;\\n            }\\n            if (x & 0x8000000000 > 0) {\\n                result = (result * 0x100000058B90C0B49) >> 64;\\n            }\\n            if (x & 0x4000000000 > 0) {\\n                result = (result * 0x10000002C5C8601CC) >> 64;\\n            }\\n            if (x & 0x2000000000 > 0) {\\n                result = (result * 0x1000000162E42FFF0) >> 64;\\n            }\\n            if (x & 0x1000000000 > 0) {\\n                result = (result * 0x10000000B17217FBB) >> 64;\\n            }\\n            if (x & 0x800000000 > 0) {\\n                result = (result * 0x1000000058B90BFCE) >> 64;\\n            }\\n            if (x & 0x400000000 > 0) {\\n                result = (result * 0x100000002C5C85FE3) >> 64;\\n            }\\n            if (x & 0x200000000 > 0) {\\n                result = (result * 0x10000000162E42FF1) >> 64;\\n            }\\n            if (x & 0x100000000 > 0) {\\n                result = (result * 0x100000000B17217F8) >> 64;\\n            }\\n            if (x & 0x80000000 > 0) {\\n                result = (result * 0x10000000058B90BFC) >> 64;\\n            }\\n            if (x & 0x40000000 > 0) {\\n                result = (result * 0x1000000002C5C85FE) >> 64;\\n            }\\n            if (x & 0x20000000 > 0) {\\n                result = (result * 0x100000000162E42FF) >> 64;\\n            }\\n            if (x & 0x10000000 > 0) {\\n                result = (result * 0x1000000000B17217F) >> 64;\\n            }\\n            if (x & 0x8000000 > 0) {\\n                result = (result * 0x100000000058B90C0) >> 64;\\n            }\\n            if (x & 0x4000000 > 0) {\\n                result = (result * 0x10000000002C5C860) >> 64;\\n            }\\n            if (x & 0x2000000 > 0) {\\n                result = (result * 0x1000000000162E430) >> 64;\\n            }\\n            if (x & 0x1000000 > 0) {\\n                result = (result * 0x10000000000B17218) >> 64;\\n            }\\n            if (x & 0x800000 > 0) {\\n                result = (result * 0x1000000000058B90C) >> 64;\\n            }\\n            if (x & 0x400000 > 0) {\\n                result = (result * 0x100000000002C5C86) >> 64;\\n            }\\n            if (x & 0x200000 > 0) {\\n                result = (result * 0x10000000000162E43) >> 64;\\n            }\\n            if (x & 0x100000 > 0) {\\n                result = (result * 0x100000000000B1721) >> 64;\\n            }\\n            if (x & 0x80000 > 0) {\\n                result = (result * 0x10000000000058B91) >> 64;\\n            }\\n            if (x & 0x40000 > 0) {\\n                result = (result * 0x1000000000002C5C8) >> 64;\\n            }\\n            if (x & 0x20000 > 0) {\\n                result = (result * 0x100000000000162E4) >> 64;\\n            }\\n            if (x & 0x10000 > 0) {\\n                result = (result * 0x1000000000000B172) >> 64;\\n            }\\n            if (x & 0x8000 > 0) {\\n                result = (result * 0x100000000000058B9) >> 64;\\n            }\\n            if (x & 0x4000 > 0) {\\n                result = (result * 0x10000000000002C5D) >> 64;\\n            }\\n            if (x & 0x2000 > 0) {\\n                result = (result * 0x1000000000000162E) >> 64;\\n            }\\n            if (x & 0x1000 > 0) {\\n                result = (result * 0x10000000000000B17) >> 64;\\n            }\\n            if (x & 0x800 > 0) {\\n                result = (result * 0x1000000000000058C) >> 64;\\n            }\\n            if (x & 0x400 > 0) {\\n                result = (result * 0x100000000000002C6) >> 64;\\n            }\\n            if (x & 0x200 > 0) {\\n                result = (result * 0x10000000000000163) >> 64;\\n            }\\n            if (x & 0x100 > 0) {\\n                result = (result * 0x100000000000000B1) >> 64;\\n            }\\n            if (x & 0x80 > 0) {\\n                result = (result * 0x10000000000000059) >> 64;\\n            }\\n            if (x & 0x40 > 0) {\\n                result = (result * 0x1000000000000002C) >> 64;\\n            }\\n            if (x & 0x20 > 0) {\\n                result = (result * 0x10000000000000016) >> 64;\\n            }\\n            if (x & 0x10 > 0) {\\n                result = (result * 0x1000000000000000B) >> 64;\\n            }\\n            if (x & 0x8 > 0) {\\n                result = (result * 0x10000000000000006) >> 64;\\n            }\\n            if (x & 0x4 > 0) {\\n                result = (result * 0x10000000000000003) >> 64;\\n            }\\n            if (x & 0x2 > 0) {\\n                result = (result * 0x10000000000000001) >> 64;\\n            }\\n            if (x & 0x1 > 0) {\\n                result = (result * 0x10000000000000001) >> 64;\\n            }\\n\\n            // We're doing two things at the same time:\\n            //\\n            //   1. Multiply the result by 2^n + 1, where \\\"2^n\\\" is the integer part and the one is added to account for\\n            //      the fact that we initially set the result to 0.5. This is accomplished by subtracting from 191\\n            //      rather than 192.\\n            //   2. Convert the result to the unsigned 60.18-decimal fixed-point format.\\n            //\\n            // This works because 2^(191-ip) = 2^ip / 2^191, where \\\"ip\\\" is the integer part \\\"2^n\\\".\\n            result *= SCALE;\\n            result >>= (191 - (x >> 64));\\n        }\\n    }\\n\\n    /// @notice Finds the zero-based index of the first one in the binary representation of x.\\n    /// @dev See the note on msb in the \\\"Find First Set\\\" Wikipedia article https://en.wikipedia.org/wiki/Find_first_set\\n    /// @param x The uint256 number for which to find the index of the most significant bit.\\n    /// @return msb The index of the most significant bit as an uint256.\\n    function mostSignificantBit(uint256 x) internal pure returns (uint256 msb) {\\n        if (x >= 2**128) {\\n            x >>= 128;\\n            msb += 128;\\n        }\\n        if (x >= 2**64) {\\n            x >>= 64;\\n            msb += 64;\\n        }\\n        if (x >= 2**32) {\\n            x >>= 32;\\n            msb += 32;\\n        }\\n        if (x >= 2**16) {\\n            x >>= 16;\\n            msb += 16;\\n        }\\n        if (x >= 2**8) {\\n            x >>= 8;\\n            msb += 8;\\n        }\\n        if (x >= 2**4) {\\n            x >>= 4;\\n            msb += 4;\\n        }\\n        if (x >= 2**2) {\\n            x >>= 2;\\n            msb += 2;\\n        }\\n        if (x >= 2**1) {\\n            // No need to shift x any more.\\n            msb += 1;\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f7denominator) with full precision.\\n    ///\\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv.\\n    ///\\n    /// Requirements:\\n    /// - The denominator cannot be zero.\\n    /// - The result must fit within uint256.\\n    ///\\n    /// Caveats:\\n    /// - This function does not work with fixed-point numbers.\\n    ///\\n    /// @param x The multiplicand as an uint256.\\n    /// @param y The multiplier as an uint256.\\n    /// @param denominator The divisor as an uint256.\\n    /// @return result The result as an uint256.\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n        // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n        // variables such that product = prod1 * 2^256 + prod0.\\n        uint256 prod0; // Least significant 256 bits of the product\\n        uint256 prod1; // Most significant 256 bits of the product\\n        assembly {\\n            let mm := mulmod(x, y, not(0))\\n            prod0 := mul(x, y)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        // Handle non-overflow cases, 256 by 256 division.\\n        if (prod1 == 0) {\\n            unchecked {\\n                result = prod0 / denominator;\\n            }\\n            return result;\\n        }\\n\\n        // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n        if (prod1 >= denominator) {\\n            revert PRBMath__MulDivOverflow(prod1, denominator);\\n        }\\n\\n        ///////////////////////////////////////////////\\n        // 512 by 256 division.\\n        ///////////////////////////////////////////////\\n\\n        // Make division exact by subtracting the remainder from [prod1 prod0].\\n        uint256 remainder;\\n        assembly {\\n            // Compute remainder using mulmod.\\n            remainder := mulmod(x, y, denominator)\\n\\n            // Subtract 256 bit number from 512 bit number.\\n            prod1 := sub(prod1, gt(remainder, prod0))\\n            prod0 := sub(prod0, remainder)\\n        }\\n\\n        // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n        // See https://cs.stackexchange.com/q/138556/92363.\\n        unchecked {\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 lpotdod = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by lpotdod.\\n                denominator := div(denominator, lpotdod)\\n\\n                // Divide [prod1 prod0] by lpotdod.\\n                prod0 := div(prod0, lpotdod)\\n\\n                // Flip lpotdod such that it is 2^256 / lpotdod. If lpotdod is zero, then it becomes one.\\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * lpotdod;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f71e18) with full precision.\\n    ///\\n    /// @dev Variant of \\\"mulDiv\\\" with constant folding, i.e. in which the denominator is always 1e18. Before returning the\\n    /// final result, we add 1 if (x * y) % SCALE >= HALF_SCALE. Without this, 6.6e-19 would be truncated to 0 instead of\\n    /// being rounded to 1e-18.  See \\\"Listing 6\\\" and text above it at https://accu.org/index.php/journals/1717.\\n    ///\\n    /// Requirements:\\n    /// - The result must fit within uint256.\\n    ///\\n    /// Caveats:\\n    /// - The body is purposely left uncommented; see the NatSpec comments in \\\"PRBMath.mulDiv\\\" to understand how this works.\\n    /// - It is assumed that the result can never be type(uint256).max when x and y solve the following two equations:\\n    ///     1. x * y = type(uint256).max * SCALE\\n    ///     2. (x * y) % SCALE >= SCALE / 2\\n    ///\\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function mulDivFixedPoint(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(x, y, not(0))\\n            prod0 := mul(x, y)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= SCALE) {\\n            revert PRBMath__MulDivFixedPointOverflow(prod1);\\n        }\\n\\n        uint256 remainder;\\n        uint256 roundUpUnit;\\n        assembly {\\n            remainder := mulmod(x, y, SCALE)\\n            roundUpUnit := gt(remainder, 499999999999999999)\\n        }\\n\\n        if (prod1 == 0) {\\n            unchecked {\\n                result = (prod0 / SCALE) + roundUpUnit;\\n                return result;\\n            }\\n        }\\n\\n        assembly {\\n            result := add(\\n                mul(\\n                    or(\\n                        div(sub(prod0, remainder), SCALE_LPOTD),\\n                        mul(sub(prod1, gt(remainder, prod0)), add(div(sub(0, SCALE_LPOTD), SCALE_LPOTD), 1))\\n                    ),\\n                    SCALE_INVERSE\\n                ),\\n                roundUpUnit\\n            )\\n        }\\n    }\\n\\n    /// @notice Calculates floor(x*y\\u00f7denominator) with full precision.\\n    ///\\n    /// @dev An extension of \\\"mulDiv\\\" for signed numbers. Works by computing the signs and the absolute values separately.\\n    ///\\n    /// Requirements:\\n    /// - None of the inputs can be type(int256).min.\\n    /// - The result must fit within int256.\\n    ///\\n    /// @param x The multiplicand as an int256.\\n    /// @param y The multiplier as an int256.\\n    /// @param denominator The divisor as an int256.\\n    /// @return result The result as an int256.\\n    function mulDivSigned(\\n        int256 x,\\n        int256 y,\\n        int256 denominator\\n    ) internal pure returns (int256 result) {\\n        if (x == type(int256).min || y == type(int256).min || denominator == type(int256).min) {\\n            revert PRBMath__MulDivSignedInputTooSmall();\\n        }\\n\\n        // Get hold of the absolute values of x, y and the denominator.\\n        uint256 ax;\\n        uint256 ay;\\n        uint256 ad;\\n        unchecked {\\n            ax = x < 0 ? uint256(-x) : uint256(x);\\n            ay = y < 0 ? uint256(-y) : uint256(y);\\n            ad = denominator < 0 ? uint256(-denominator) : uint256(denominator);\\n        }\\n\\n        // Compute the absolute value of (x*y)\\u00f7denominator. The result must fit within int256.\\n        uint256 rAbs = mulDiv(ax, ay, ad);\\n        if (rAbs > uint256(type(int256).max)) {\\n            revert PRBMath__MulDivSignedOverflow(rAbs);\\n        }\\n\\n        // Get the signs of x, y and the denominator.\\n        uint256 sx;\\n        uint256 sy;\\n        uint256 sd;\\n        assembly {\\n            sx := sgt(x, sub(0, 1))\\n            sy := sgt(y, sub(0, 1))\\n            sd := sgt(denominator, sub(0, 1))\\n        }\\n\\n        // XOR over sx, sy and sd. This is checking whether there are one or three negative signs in the inputs.\\n        // If yes, the result should be negative.\\n        result = sx ^ sy ^ sd == 0 ? -int256(rAbs) : int256(rAbs);\\n    }\\n\\n    /// @notice Calculates the square root of x, rounding down.\\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\\n    ///\\n    /// Caveats:\\n    /// - This function does not work with fixed-point numbers.\\n    ///\\n    /// @param x The uint256 number for which to calculate the square root.\\n    /// @return result The result as an uint256.\\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n\\n        // Set the initial guess to the least power of two that is greater than or equal to sqrt(x).\\n        uint256 xAux = uint256(x);\\n        result = 1;\\n        if (xAux >= 0x100000000000000000000000000000000) {\\n            xAux >>= 128;\\n            result <<= 64;\\n        }\\n        if (xAux >= 0x10000000000000000) {\\n            xAux >>= 64;\\n            result <<= 32;\\n        }\\n        if (xAux >= 0x100000000) {\\n            xAux >>= 32;\\n            result <<= 16;\\n        }\\n        if (xAux >= 0x10000) {\\n            xAux >>= 16;\\n            result <<= 8;\\n        }\\n        if (xAux >= 0x100) {\\n            xAux >>= 8;\\n            result <<= 4;\\n        }\\n        if (xAux >= 0x10) {\\n            xAux >>= 4;\\n            result <<= 2;\\n        }\\n        if (xAux >= 0x8) {\\n            result <<= 1;\\n        }\\n\\n        // The operations can never overflow because the result is max 2^127 when it enters this block.\\n        unchecked {\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1;\\n            result = (result + x / result) >> 1; // Seven iterations should be enough\\n            uint256 roundedDownResult = x / result;\\n            return result >= roundedDownResult ? roundedDownResult : result;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61\",\"license\":\"Unlicense\"},\"prb-math/contracts/PRBMathUD60x18.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity >=0.8.4;\\n\\nimport \\\"./PRBMath.sol\\\";\\n\\n/// @title PRBMathUD60x18\\n/// @author Paul Razvan Berg\\n/// @notice Smart contract library for advanced fixed-point math that works with uint256 numbers considered to have 18\\n/// trailing decimals. We call this number representation unsigned 60.18-decimal fixed-point, since there can be up to 60\\n/// digits in the integer part and up to 18 decimals in the fractional part. The numbers are bound by the minimum and the\\n/// maximum values permitted by the Solidity type uint256.\\nlibrary PRBMathUD60x18 {\\n    /// @dev Half the SCALE number.\\n    uint256 internal constant HALF_SCALE = 5e17;\\n\\n    /// @dev log2(e) as an unsigned 60.18-decimal fixed-point number.\\n    uint256 internal constant LOG2_E = 1_442695040888963407;\\n\\n    /// @dev The maximum value an unsigned 60.18-decimal fixed-point number can have.\\n    uint256 internal constant MAX_UD60x18 =\\n        115792089237316195423570985008687907853269984665640564039457_584007913129639935;\\n\\n    /// @dev The maximum whole value an unsigned 60.18-decimal fixed-point number can have.\\n    uint256 internal constant MAX_WHOLE_UD60x18 =\\n        115792089237316195423570985008687907853269984665640564039457_000000000000000000;\\n\\n    /// @dev How many trailing decimals can be represented.\\n    uint256 internal constant SCALE = 1e18;\\n\\n    /// @notice Calculates the arithmetic average of x and y, rounding down.\\n    /// @param x The first operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The second operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The arithmetic average as an unsigned 60.18-decimal fixed-point number.\\n    function avg(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        // The operations can never overflow.\\n        unchecked {\\n            // The last operand checks if both x and y are odd and if that is the case, we add 1 to the result. We need\\n            // to do this because if both numbers are odd, the 0.5 remainder gets truncated twice.\\n            result = (x >> 1) + (y >> 1) + (x & y & 1);\\n        }\\n    }\\n\\n    /// @notice Yields the least unsigned 60.18 decimal fixed-point number greater than or equal to x.\\n    ///\\n    /// @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\\n    /// See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\\n    ///\\n    /// Requirements:\\n    /// - x must be less than or equal to MAX_WHOLE_UD60x18.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number to ceil.\\n    /// @param result The least integer greater than or equal to x, as an unsigned 60.18-decimal fixed-point number.\\n    function ceil(uint256 x) internal pure returns (uint256 result) {\\n        if (x > MAX_WHOLE_UD60x18) {\\n            revert PRBMathUD60x18__CeilOverflow(x);\\n        }\\n        assembly {\\n            // Equivalent to \\\"x % SCALE\\\" but faster.\\n            let remainder := mod(x, SCALE)\\n\\n            // Equivalent to \\\"SCALE - remainder\\\" but faster.\\n            let delta := sub(SCALE, remainder)\\n\\n            // Equivalent to \\\"x + delta * (remainder > 0 ? 1 : 0)\\\" but faster.\\n            result := add(x, mul(delta, gt(remainder, 0)))\\n        }\\n    }\\n\\n    /// @notice Divides two unsigned 60.18-decimal fixed-point numbers, returning a new unsigned 60.18-decimal fixed-point number.\\n    ///\\n    /// @dev Uses mulDiv to enable overflow-safe multiplication and division.\\n    ///\\n    /// Requirements:\\n    /// - The denominator cannot be zero.\\n    ///\\n    /// @param x The numerator as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The denominator as an unsigned 60.18-decimal fixed-point number.\\n    /// @param result The quotient as an unsigned 60.18-decimal fixed-point number.\\n    function div(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        result = PRBMath.mulDiv(x, SCALE, y);\\n    }\\n\\n    /// @notice Returns Euler's number as an unsigned 60.18-decimal fixed-point number.\\n    /// @dev See https://en.wikipedia.org/wiki/E_(mathematical_constant).\\n    function e() internal pure returns (uint256 result) {\\n        result = 2_718281828459045235;\\n    }\\n\\n    /// @notice Calculates the natural exponent of x.\\n    ///\\n    /// @dev Based on the insight that e^x = 2^(x * log2(e)).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    /// - x must be less than 133.084258667509499441.\\n    ///\\n    /// @param x The exponent as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp(uint256 x) internal pure returns (uint256 result) {\\n        // Without this check, the value passed to \\\"exp2\\\" would be greater than 192.\\n        if (x >= 133_084258667509499441) {\\n            revert PRBMathUD60x18__ExpInputTooBig(x);\\n        }\\n\\n        // Do the fixed-point multiplication inline to save gas.\\n        unchecked {\\n            uint256 doubleScaleProduct = x * LOG2_E;\\n            result = exp2((doubleScaleProduct + HALF_SCALE) / SCALE);\\n        }\\n    }\\n\\n    /// @notice Calculates the binary exponent of x using the binary fraction method.\\n    ///\\n    /// @dev See https://ethereum.stackexchange.com/q/79903/24693.\\n    ///\\n    /// Requirements:\\n    /// - x must be 192 or less.\\n    /// - The result must fit within MAX_UD60x18.\\n    ///\\n    /// @param x The exponent as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function exp2(uint256 x) internal pure returns (uint256 result) {\\n        // 2^192 doesn't fit within the 192.64-bit format used internally in this function.\\n        if (x >= 192e18) {\\n            revert PRBMathUD60x18__Exp2InputTooBig(x);\\n        }\\n\\n        unchecked {\\n            // Convert x to the 192.64-bit fixed-point format.\\n            uint256 x192x64 = (x << 64) / SCALE;\\n\\n            // Pass x to the PRBMath.exp2 function, which uses the 192.64-bit fixed-point number representation.\\n            result = PRBMath.exp2(x192x64);\\n        }\\n    }\\n\\n    /// @notice Yields the greatest unsigned 60.18 decimal fixed-point number less than or equal to x.\\n    /// @dev Optimized for fractional value inputs, because for every whole value there are (1e18 - 1) fractional counterparts.\\n    /// See https://en.wikipedia.org/wiki/Floor_and_ceiling_functions.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to floor.\\n    /// @param result The greatest integer less than or equal to x, as an unsigned 60.18-decimal fixed-point number.\\n    function floor(uint256 x) internal pure returns (uint256 result) {\\n        assembly {\\n            // Equivalent to \\\"x % SCALE\\\" but faster.\\n            let remainder := mod(x, SCALE)\\n\\n            // Equivalent to \\\"x - remainder * (remainder > 0 ? 1 : 0)\\\" but faster.\\n            result := sub(x, mul(remainder, gt(remainder, 0)))\\n        }\\n    }\\n\\n    /// @notice Yields the excess beyond the floor of x.\\n    /// @dev Based on the odd function definition https://en.wikipedia.org/wiki/Fractional_part.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to get the fractional part of.\\n    /// @param result The fractional part of x as an unsigned 60.18-decimal fixed-point number.\\n    function frac(uint256 x) internal pure returns (uint256 result) {\\n        assembly {\\n            result := mod(x, SCALE)\\n        }\\n    }\\n\\n    /// @notice Converts a number from basic integer form to unsigned 60.18-decimal fixed-point representation.\\n    ///\\n    /// @dev Requirements:\\n    /// - x must be less than or equal to MAX_UD60x18 divided by SCALE.\\n    ///\\n    /// @param x The basic integer to convert.\\n    /// @param result The same number in unsigned 60.18-decimal fixed-point representation.\\n    function fromUint(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            if (x > MAX_UD60x18 / SCALE) {\\n                revert PRBMathUD60x18__FromUintOverflow(x);\\n            }\\n            result = x * SCALE;\\n        }\\n    }\\n\\n    /// @notice Calculates geometric mean of x and y, i.e. sqrt(x * y), rounding down.\\n    ///\\n    /// @dev Requirements:\\n    /// - x * y must fit within MAX_UD60x18, lest it overflows.\\n    ///\\n    /// @param x The first operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The second operand as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function gm(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n\\n        unchecked {\\n            // Checking for overflow this way is faster than letting Solidity do it.\\n            uint256 xy = x * y;\\n            if (xy / x != y) {\\n                revert PRBMathUD60x18__GmOverflow(x, y);\\n            }\\n\\n            // We don't need to multiply by the SCALE here because the x*y product had already picked up a factor of SCALE\\n            // during multiplication. See the comments within the \\\"sqrt\\\" function.\\n            result = PRBMath.sqrt(xy);\\n        }\\n    }\\n\\n    /// @notice Calculates 1 / x, rounding toward zero.\\n    ///\\n    /// @dev Requirements:\\n    /// - x cannot be zero.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the inverse.\\n    /// @return result The inverse as an unsigned 60.18-decimal fixed-point number.\\n    function inv(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 1e36 is SCALE * SCALE.\\n            result = 1e36 / x;\\n        }\\n    }\\n\\n    /// @notice Calculates the natural logarithm of x.\\n    ///\\n    /// @dev Based on the insight that ln(x) = log2(x) / log2(e).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"log2\\\".\\n    /// - This doesn't return exactly 1 for 2.718281828459045235, for that we would need more fine-grained precision.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the natural logarithm.\\n    /// @return result The natural logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function ln(uint256 x) internal pure returns (uint256 result) {\\n        // Do the fixed-point multiplication inline to save gas. This is overflow-safe because the maximum value that log2(x)\\n        // can return is 196205294292027477728.\\n        unchecked {\\n            result = (log2(x) * SCALE) / LOG2_E;\\n        }\\n    }\\n\\n    /// @notice Calculates the common logarithm of x.\\n    ///\\n    /// @dev First checks if x is an exact power of ten and it stops if yes. If it's not, calculates the common\\n    /// logarithm based on the insight that log10(x) = log2(x) / log2(10).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"log2\\\".\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the common logarithm.\\n    /// @return result The common logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function log10(uint256 x) internal pure returns (uint256 result) {\\n        if (x < SCALE) {\\n            revert PRBMathUD60x18__LogInputTooSmall(x);\\n        }\\n\\n        // Note that the \\\"mul\\\" in this block is the assembly multiplication operation, not the \\\"mul\\\" function defined\\n        // in this contract.\\n        // prettier-ignore\\n        assembly {\\n            switch x\\n            case 1 { result := mul(SCALE, sub(0, 18)) }\\n            case 10 { result := mul(SCALE, sub(1, 18)) }\\n            case 100 { result := mul(SCALE, sub(2, 18)) }\\n            case 1000 { result := mul(SCALE, sub(3, 18)) }\\n            case 10000 { result := mul(SCALE, sub(4, 18)) }\\n            case 100000 { result := mul(SCALE, sub(5, 18)) }\\n            case 1000000 { result := mul(SCALE, sub(6, 18)) }\\n            case 10000000 { result := mul(SCALE, sub(7, 18)) }\\n            case 100000000 { result := mul(SCALE, sub(8, 18)) }\\n            case 1000000000 { result := mul(SCALE, sub(9, 18)) }\\n            case 10000000000 { result := mul(SCALE, sub(10, 18)) }\\n            case 100000000000 { result := mul(SCALE, sub(11, 18)) }\\n            case 1000000000000 { result := mul(SCALE, sub(12, 18)) }\\n            case 10000000000000 { result := mul(SCALE, sub(13, 18)) }\\n            case 100000000000000 { result := mul(SCALE, sub(14, 18)) }\\n            case 1000000000000000 { result := mul(SCALE, sub(15, 18)) }\\n            case 10000000000000000 { result := mul(SCALE, sub(16, 18)) }\\n            case 100000000000000000 { result := mul(SCALE, sub(17, 18)) }\\n            case 1000000000000000000 { result := 0 }\\n            case 10000000000000000000 { result := SCALE }\\n            case 100000000000000000000 { result := mul(SCALE, 2) }\\n            case 1000000000000000000000 { result := mul(SCALE, 3) }\\n            case 10000000000000000000000 { result := mul(SCALE, 4) }\\n            case 100000000000000000000000 { result := mul(SCALE, 5) }\\n            case 1000000000000000000000000 { result := mul(SCALE, 6) }\\n            case 10000000000000000000000000 { result := mul(SCALE, 7) }\\n            case 100000000000000000000000000 { result := mul(SCALE, 8) }\\n            case 1000000000000000000000000000 { result := mul(SCALE, 9) }\\n            case 10000000000000000000000000000 { result := mul(SCALE, 10) }\\n            case 100000000000000000000000000000 { result := mul(SCALE, 11) }\\n            case 1000000000000000000000000000000 { result := mul(SCALE, 12) }\\n            case 10000000000000000000000000000000 { result := mul(SCALE, 13) }\\n            case 100000000000000000000000000000000 { result := mul(SCALE, 14) }\\n            case 1000000000000000000000000000000000 { result := mul(SCALE, 15) }\\n            case 10000000000000000000000000000000000 { result := mul(SCALE, 16) }\\n            case 100000000000000000000000000000000000 { result := mul(SCALE, 17) }\\n            case 1000000000000000000000000000000000000 { result := mul(SCALE, 18) }\\n            case 10000000000000000000000000000000000000 { result := mul(SCALE, 19) }\\n            case 100000000000000000000000000000000000000 { result := mul(SCALE, 20) }\\n            case 1000000000000000000000000000000000000000 { result := mul(SCALE, 21) }\\n            case 10000000000000000000000000000000000000000 { result := mul(SCALE, 22) }\\n            case 100000000000000000000000000000000000000000 { result := mul(SCALE, 23) }\\n            case 1000000000000000000000000000000000000000000 { result := mul(SCALE, 24) }\\n            case 10000000000000000000000000000000000000000000 { result := mul(SCALE, 25) }\\n            case 100000000000000000000000000000000000000000000 { result := mul(SCALE, 26) }\\n            case 1000000000000000000000000000000000000000000000 { result := mul(SCALE, 27) }\\n            case 10000000000000000000000000000000000000000000000 { result := mul(SCALE, 28) }\\n            case 100000000000000000000000000000000000000000000000 { result := mul(SCALE, 29) }\\n            case 1000000000000000000000000000000000000000000000000 { result := mul(SCALE, 30) }\\n            case 10000000000000000000000000000000000000000000000000 { result := mul(SCALE, 31) }\\n            case 100000000000000000000000000000000000000000000000000 { result := mul(SCALE, 32) }\\n            case 1000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 33) }\\n            case 10000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 34) }\\n            case 100000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 35) }\\n            case 1000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 36) }\\n            case 10000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 37) }\\n            case 100000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 38) }\\n            case 1000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 39) }\\n            case 10000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 40) }\\n            case 100000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 41) }\\n            case 1000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 42) }\\n            case 10000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 43) }\\n            case 100000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 44) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 45) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 46) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 47) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 48) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 49) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 50) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 51) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 52) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 53) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 54) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 55) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 56) }\\n            case 1000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 57) }\\n            case 10000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 58) }\\n            case 100000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 59) }\\n            default {\\n                result := MAX_UD60x18\\n            }\\n        }\\n\\n        if (result == MAX_UD60x18) {\\n            // Do the fixed-point division inline to save gas. The denominator is log2(10).\\n            unchecked {\\n                result = (log2(x) * SCALE) / 3_321928094887362347;\\n            }\\n        }\\n    }\\n\\n    /// @notice Calculates the binary logarithm of x.\\n    ///\\n    /// @dev Based on the iterative approximation algorithm.\\n    /// https://en.wikipedia.org/wiki/Binary_logarithm#Iterative_approximation\\n    ///\\n    /// Requirements:\\n    /// - x must be greater than or equal to SCALE, otherwise the result would be negative.\\n    ///\\n    /// Caveats:\\n    /// - The results are nor perfectly accurate to the last decimal, due to the lossy precision of the iterative approximation.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the binary logarithm.\\n    /// @return result The binary logarithm as an unsigned 60.18-decimal fixed-point number.\\n    function log2(uint256 x) internal pure returns (uint256 result) {\\n        if (x < SCALE) {\\n            revert PRBMathUD60x18__LogInputTooSmall(x);\\n        }\\n        unchecked {\\n            // Calculate the integer part of the logarithm and add it to the result and finally calculate y = x * 2^(-n).\\n            uint256 n = PRBMath.mostSignificantBit(x / SCALE);\\n\\n            // The integer part of the logarithm as an unsigned 60.18-decimal fixed-point number. The operation can't overflow\\n            // because n is maximum 255 and SCALE is 1e18.\\n            result = n * SCALE;\\n\\n            // This is y = x * 2^(-n).\\n            uint256 y = x >> n;\\n\\n            // If y = 1, the fractional part is zero.\\n            if (y == SCALE) {\\n                return result;\\n            }\\n\\n            // Calculate the fractional part via the iterative approximation.\\n            // The \\\"delta >>= 1\\\" part is equivalent to \\\"delta /= 2\\\", but shifting bits is faster.\\n            for (uint256 delta = HALF_SCALE; delta > 0; delta >>= 1) {\\n                y = (y * y) / SCALE;\\n\\n                // Is y^2 > 2 and so in the range [2,4)?\\n                if (y >= 2 * SCALE) {\\n                    // Add the 2^(-m) factor to the logarithm.\\n                    result += delta;\\n\\n                    // Corresponds to z/2 on Wikipedia.\\n                    y >>= 1;\\n                }\\n            }\\n        }\\n    }\\n\\n    /// @notice Multiplies two unsigned 60.18-decimal fixed-point numbers together, returning a new unsigned 60.18-decimal\\n    /// fixed-point number.\\n    /// @dev See the documentation for the \\\"PRBMath.mulDivFixedPoint\\\" function.\\n    /// @param x The multiplicand as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The multiplier as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result The product as an unsigned 60.18-decimal fixed-point number.\\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        result = PRBMath.mulDivFixedPoint(x, y);\\n    }\\n\\n    /// @notice Returns PI as an unsigned 60.18-decimal fixed-point number.\\n    function pi() internal pure returns (uint256 result) {\\n        result = 3_141592653589793238;\\n    }\\n\\n    /// @notice Raises x to the power of y.\\n    ///\\n    /// @dev Based on the insight that x^y = 2^(log2(x) * y).\\n    ///\\n    /// Requirements:\\n    /// - All from \\\"exp2\\\", \\\"log2\\\" and \\\"mul\\\".\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"exp2\\\", \\\"log2\\\" and \\\"mul\\\".\\n    /// - Assumes 0^0 is 1.\\n    ///\\n    /// @param x Number to raise to given power y, as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y Exponent to raise x to, as an unsigned 60.18-decimal fixed-point number.\\n    /// @return result x raised to power y, as an unsigned 60.18-decimal fixed-point number.\\n    function pow(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        if (x == 0) {\\n            result = y == 0 ? SCALE : uint256(0);\\n        } else {\\n            result = exp2(mul(log2(x), y));\\n        }\\n    }\\n\\n    /// @notice Raises x (unsigned 60.18-decimal fixed-point number) to the power of y (basic unsigned integer) using the\\n    /// famous algorithm \\\"exponentiation by squaring\\\".\\n    ///\\n    /// @dev See https://en.wikipedia.org/wiki/Exponentiation_by_squaring\\n    ///\\n    /// Requirements:\\n    /// - The result must fit within MAX_UD60x18.\\n    ///\\n    /// Caveats:\\n    /// - All from \\\"mul\\\".\\n    /// - Assumes 0^0 is 1.\\n    ///\\n    /// @param x The base as an unsigned 60.18-decimal fixed-point number.\\n    /// @param y The exponent as an uint256.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point number.\\n    function powu(uint256 x, uint256 y) internal pure returns (uint256 result) {\\n        // Calculate the first iteration of the loop in advance.\\n        result = y & 1 > 0 ? x : SCALE;\\n\\n        // Equivalent to \\\"for(y /= 2; y > 0; y /= 2)\\\" but faster.\\n        for (y >>= 1; y > 0; y >>= 1) {\\n            x = PRBMath.mulDivFixedPoint(x, x);\\n\\n            // Equivalent to \\\"y % 2 == 1\\\" but faster.\\n            if (y & 1 > 0) {\\n                result = PRBMath.mulDivFixedPoint(result, x);\\n            }\\n        }\\n    }\\n\\n    /// @notice Returns 1 as an unsigned 60.18-decimal fixed-point number.\\n    function scale() internal pure returns (uint256 result) {\\n        result = SCALE;\\n    }\\n\\n    /// @notice Calculates the square root of x, rounding down.\\n    /// @dev Uses the Babylonian method https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method.\\n    ///\\n    /// Requirements:\\n    /// - x must be less than MAX_UD60x18 / SCALE.\\n    ///\\n    /// @param x The unsigned 60.18-decimal fixed-point number for which to calculate the square root.\\n    /// @return result The result as an unsigned 60.18-decimal fixed-point .\\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            if (x > MAX_UD60x18 / SCALE) {\\n                revert PRBMathUD60x18__SqrtOverflow(x);\\n            }\\n            // Multiply x by the SCALE to account for the factor of SCALE that is picked up when multiplying two unsigned\\n            // 60.18-decimal fixed-point numbers together (in this case, those two numbers are both the square root).\\n            result = PRBMath.sqrt(x * SCALE);\\n        }\\n    }\\n\\n    /// @notice Converts a unsigned 60.18-decimal fixed-point number to basic integer form, rounding down in the process.\\n    /// @param x The unsigned 60.18-decimal fixed-point number to convert.\\n    /// @return result The same number in basic integer form.\\n    function toUint(uint256 x) internal pure returns (uint256 result) {\\n        unchecked {\\n            result = x / SCALE;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Smart contract library for advanced fixed-point math that works with uint256 numbers considered to have 18 trailing decimals. We call this number representation unsigned 60.18-decimal fixed-point, since there can be up to 60 digits in the integer part and up to 18 decimals in the fractional part. The numbers are bound by the minimum and the maximum values permitted by the Solidity type uint256.","version":1}}}}}}