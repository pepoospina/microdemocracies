/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Registry, RegistryInterface } from "../Registry";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "__name",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "string[]",
        name: "foundersCids",
        type: "string[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccountAlreadyOwnsOneToken",
    type: "error",
  },
  {
    inputs: [],
    name: "CantChallengeInvalidAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ChallangeAlreadyActive",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrorAccountNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrorAccountSolidified",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrorAlreadyVoted",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrorChallangeAlreadyExecuted",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrorChallangeNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrorVoteNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrorVoteOnOwnChallenge",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrorVoterCantVote",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrorVoterValid",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrorVotingPeriodEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrorVoucherIsValid",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrorVoucherNotValid",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "UnexpectedExecutedCondition",
    type: "error",
  },
  {
    inputs: [],
    name: "VoucherNoLongerInvalid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ChallengeEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int8",
        name: "outcome",
        type: "int8",
      },
    ],
    name: "ChallengeExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "InvalidatedAccountEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "InvalidatedByChallenge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "InvalidatedByInvalidVoucher",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "voterTokenId",
        type: "uint256",
      },
    ],
    name: "InvalidatedVoteEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "voterTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int8",
        name: "vote",
        type: "int8",
      },
    ],
    name: "VoteEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newEndDate",
        type: "uint256",
      },
    ],
    name: "VotingPeriodExtendedEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "personCid",
        type: "string",
      },
    ],
    name: "VouchEvent",
    type: "event",
  },
  {
    inputs: [],
    name: "FOUNDERS_VOUCHER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PENDING_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "QUIET_ENDING_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VOTING_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_nEntries",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voterTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "challengedTokenId",
        type: "uint256",
      },
    ],
    name: "canVote",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "executeVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getAccount",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "voucher",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timesChallenged",
            type: "uint256",
          },
        ],
        internalType: "struct Registry.Account",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getChallenge",
    outputs: [
      {
        internalType: "uint256",
        name: "creationDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "int8",
        name: "lastOutcome",
        type: "int8",
      },
      {
        internalType: "uint256",
        name: "nVoted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nFor",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voterTokenId",
        type: "uint256",
      },
    ],
    name: "getChallengeVote",
    outputs: [
      {
        internalType: "int8",
        name: "",
        type: "int8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "challengeIndex",
        type: "uint256",
      },
    ],
    name: "getSpecificChallenge",
    outputs: [
      {
        internalType: "uint256",
        name: "creationDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "int8",
        name: "lastOutcome",
        type: "int8",
      },
      {
        internalType: "uint256",
        name: "nVoted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nFor",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voterTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "challengeIndex",
        type: "uint256",
      },
    ],
    name: "getSpecificChallengeVote",
    outputs: [
      {
        internalType: "int8",
        name: "",
        type: "int8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenPersonCid",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenVouch",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "personCid",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "vouchDate",
            type: "uint256",
          },
        ],
        internalType: "struct Registry.Vouch",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getTotalVoters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voucherTokenId",
        type: "uint256",
      },
    ],
    name: "getVoucherVouchesNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "invalidateInvalidVoucher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_voterTokenId",
        type: "uint256",
      },
    ],
    name: "invalidateVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isSolidified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokenIdOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "int8",
        name: "_vote",
        type: "int8",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "string",
        name: "personCid",
        type: "string",
      },
    ],
    name: "vouch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x62ed4e006000556213c6806001556202a30060025560001960035560c06040526007608081905266697066733a2f2f60c81b60a09081526200004591600491906200031e565b503480156200005357600080fd5b506040516200270c3803806200270c8339810160408190526200007691620004d9565b83516200008b9060059060208701906200031e565b508251620000a19060069060208601906200031e565b506000600b819055600c8190555b82518160ff1610156200014657600380546000908152600860205260409020600201805460ff19166001179055548351620001319190859060ff8516908110620000fd57620000fd62000778565b6020026020010151848460ff16815181106200011d576200011d62000778565b60200260200101516200015160201b60201c565b806200013d816200073f565b915050620000af565b5050505050620007a4565b60006200015d62000301565b60008581526008602052604090206002015490915060ff16620001935760405163119ab1c960e11b815260040160405180910390fd5b6001600160a01b03831660009081526009602052604090205415620001cb5760405163cb502ef160e01b815260040160405180910390fd5b6000848152600760209081526040808320848452600181018352922084519091620001fb9183918701906200031e565b5042600182810191909155600084815260086020908152604080832080546001600160a01b0319166001600160a01b038b1690811782558186018c90556002909101805460ff19168617905583526009909152812085905583548491906200026590849062000696565b925050819055506001600b600082825462000281919062000696565b909155505060405183906001600160a01b038716906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a482867fcd7f391a9646e0ab41ec2096f1d380febcdd775905c957ec790ab3738f9fdd7886604051620002f1919062000608565b60405180910390a3505050505050565b6000600c60008154620003149062000721565b9182905550919050565b8280546200032c90620006e4565b90600052602060002090601f0160209004810192826200035057600085556200039b565b82601f106200036b57805160ff19168380011785556200039b565b828001600101855582156200039b579182015b828111156200039b5782518255916020019190600101906200037e565b50620003a9929150620003ad565b5090565b5b80821115620003a95760008155600101620003ae565b600082601f830112620003d657600080fd5b81516020620003ef620003e98362000670565b6200063d565b80838252828201915082860187848660051b89010111156200041057600080fd5b6000805b86811015620004575782516001600160401b0381111562000433578283fd5b620004438b88838d010162000465565b865250938501939185019160010162000414565b509198975050505050505050565b600082601f8301126200047757600080fd5b81516001600160401b038111156200049357620004936200078e565b620004a8601f8201601f19166020016200063d565b818152846020838601011115620004be57600080fd5b620004d1826020830160208701620006b1565b949350505050565b60008060008060808587031215620004f057600080fd5b84516001600160401b03808211156200050857600080fd5b620005168883890162000465565b95506020915081870151818111156200052e57600080fd5b6200053c89828a0162000465565b9550506040870151818111156200055257600080fd5b8701601f810189136200056457600080fd5b805162000575620003e98262000670565b8082825285820191508584018c878560051b87010111156200059657600080fd5b600094505b83851015620005d15780516001600160a01b0381168114620005bc57600080fd5b8352600194909401939186019186016200059b565b5060608b0151909750945050505080821115620005ed57600080fd5b50620005fc87828801620003c4565b91505092959194509250565b602081526000825180602084015262000629816040850160208701620006b1565b601f01601f19169190910160400192915050565b604051601f8201601f191681016001600160401b03811182821017156200066857620006686200078e565b604052919050565b60006001600160401b038211156200068c576200068c6200078e565b5060051b60200190565b60008219821115620006ac57620006ac62000762565b500190565b60005b83811015620006ce578181015183820152602001620006b4565b83811115620006de576000848401525b50505050565b600181811c90821680620006f957607f821691505b602082108114156200071b57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141562000738576200073862000762565b5060010190565b600060ff821660ff81141562000759576200075962000762565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b611f5880620007b46000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c8063773c02d411610130578063b88d4fde116100b8578063e985e9c51161007c578063e985e9c514610581578063ee65024814610597578063ef233c0b146105aa578063f98a4eca146105bd578063fe131778146105d057600080fd5b8063b88d4fde14610476578063c87b56dd1461048b578063ce88b1451461049e578063d61255f31461055b578063d9eeebed1461056e57600080fd5b806395d89b41116100ff57806395d89b41146104315780639a48962014610439578063a22cb4651461044c578063ab82d9a01461045a578063b1610d7e1461046d57600080fd5b8063773c02d4146103dc57806382c0833b146103ef57806384864be714610402578063912dac061461040b57600080fd5b806323b872dd116101b357806343d3a4c11161018257806343d3a4c1146103705780635d1f0a31146103835780635e3bee73146103a35780636352211e146103b657806370a08231146103c957600080fd5b806323b872dd146103415780633c823b6b146103545780633fb1a8361461035d57806342842e0e1461034157600080fd5b80630c104878116101fa5780630c104878146102a4578063130a8d80146102b7578063173ac141146102d757806318160ddd146102ee5780631bdd4b74146102f657600080fd5b806301ffc9a71461022c57806306fdde0314610255578063081812fc1461026a578063095ea7b314610290575b600080fd5b61024061023a366004611bb1565b50600090565b60405190151581526020015b60405180910390f35b61025d6105d9565b60405161024c9190611dca565b61027861023a366004611bf8565b6040516001600160a01b03909116815260200161024c565b6102a261029e366004611b87565b5050565b005b6102a26102b2366004611b34565b61066b565b6102ca6102c5366004611bf8565b6106d6565b60405161024c9190611ddd565b6102e0600c5481565b60405190815260200161024c565b6102e06107c3565b610309610304366004611bf8565b6107d3565b60408051968752602087019590955260009390930b9385019390935260608401526080830191909152151560a082015260c00161024c565b6102a261034f366004611a52565b505050565b6102e060035481565b61025d61036b366004611bf8565b61087b565b6102e061037e366004611bf8565b61093e565b6102e0610391366004611bf8565b60009081526007602052604090205490565b6103096103b1366004611c36565b610982565b6102786103c4366004611bf8565b6109fa565b6102e06103d7366004611a04565b610a19565b6102e06103ea366004611a04565b610a24565b6102406103fd366004611bf8565b610a42565b6102e060025481565b61041e610419366004611cb8565b610ad8565b60405160009190910b815260200161024c565b61025d610b28565b6102a2610447366004611bf8565b610b37565b6102a261029e366004611afd565b6102a2610468366004611bf8565b610ba8565b6102e060015481565b6102a2610484366004611a8e565b5050505050565b61025d610499366004611bf8565b610ca9565b61051d6104ac366004611bf8565b6040805160808082018352600080835260208084018290528385018290526060938401829052948152600885528390208351918201845280546001600160a01b03168252600181015494820194909452600284015460ff161515928101929092526003909201549181019190915290565b60405161024c919081516001600160a01b03168152602080830151908201526040808301511515908201526060918201519181019190915260800190565b61041e610569366004611c36565b610d91565b6102a261057c366004611c36565b610e20565b61024061058f366004611a1f565b600092915050565b6102a26105a5366004611c11565b610e38565b6102406105b8366004611c36565b610fe8565b6102a26105cb366004611bf8565b61109d565b6102e060005481565b6060600680546105e890611e6a565b80601f016020809104026020016040519081016040528092919081815260200182805461061490611e6a565b80156106615780601f1061063657610100808354040283529160200191610661565b820191906000526020600020905b81548152906001019060200180831161064457829003601f168201915b5050505050905090565b600061068d335b6001600160a01b031660009081526009602052604090205490565b90506106d0818585858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506110b492505050565b50505050565b604080518082018252606081526000602080830182905284825260088152838220600190810154808452600783528584208785529091019091529083902083518085019094528054929391928290829061072f90611e6a565b80601f016020809104026020016040519081016040528092919081815260200182805461075b90611e6a565b80156107a85780601f1061077d576101008083540402835291602001916107a8565b820191906000526020600020905b81548152906001019060200180831161078b57829003601f168201915b50505050508152602001600182015481525050915050919050565b60006107ce600b5490565b905090565b600081815260086020526040808220600301549051635e3bee7360e01b8152600481018490526024810182905282918291829182918291903090635e3bee739060440160c06040518083038186803b15801561082e57600080fd5b505afa158015610842573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108669190611c58565b949d939c50919a509850965090945092505050565b600081815260086020908152604080832060019081015480855260078452828520868652909101909252909120805460609291906108b890611e6a565b80601f01602080910402602001604051908101604052809291908181526020018280546108e490611e6a565b80156109315780601f1061090657610100808354040283529160200191610931565b820191906000526020600020905b81548152906001019060200180831161091457829003601f168201915b5050505050915050919050565b60008181526008602090815260408083206001015480845260079092528220805460035483141561097a57815461097790600190611e27565b90505b949350505050565b6000806000806000806000600a60008a815260200190815260200160002088815481106109b1576109b1611eec565b600091825260208220600691909102016001810154600282015482546004840154600590940154929e919d50610100810490940b9b50919950975060ff90911695509350505050565b6000818152600860205260408120546001600160a01b03165b92915050565b6000610a1382611258565b6001600160a01b038116600090815260096020526040812054610a13565b6000818152600860209081526040808320815160808101835281546001600160a01b03168152600180830154828601819052600284015460ff161515838601526003909301546060830152918552600784528285208686528201909352908320015482811580610abe5750600054610aba9083611e0f565b4211155b905080158015610acf575082604001515b95945050505050565b6000838152600a60205260408120805482919084908110610afb57610afb611eec565b6000918252602080832087845260036006909302019190910190526040812054900b9150505b9392505050565b6060600580546105e890611e6a565b6000818152600860205260408082206001015480835291206002015460ff1615610b74576040516306425d3f60e21b815260040160405180910390fd5b60405182907f946ccf7529d18d55b60565307325eaa52971532b461c039424db6a003d5791d690600090a261029e826112a9565b610bb181610a42565b15610bcf57604051631994e32160e31b815260040160405180910390fd5b60008181526008602052604090206002015460ff16610c0157604051633c1391fd60e11b815260040160405180910390fd5b6000610c0c82611383565b600181015490915015610c325760405163d92060f360e01b815260040160405180910390fd5b805460ff1615610c5557604051634dc137dd60e11b815260040160405180910390fd5b42600180830182905554610c6891611e0f565b6002820155805461ff00191661ff0017815560405182907ffb4749a8bf40d9d3f0fbe28026fedbe06dc90952eba3759c2b3ec0a7d5697f3190600090a25050565b600081815260086020908152604080832060019081015480855260078452828520868652909101909252822080546060939190610ce590611e6a565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1190611e6a565b8015610d5e5780601f10610d3357610100808354040283529160200191610d5e565b820191906000526020600020905b815481529060010190602001808311610d4157829003601f168201915b50505050509050600481604051602001610d79929190611d2c565b60405160208183030381529060405292505050919050565b600082815260086020526040808220600301549051634896d60360e11b8152600481018590526024810184905260448101829052309063912dac069060640160206040518083038186803b158015610de857600080fd5b505afa158015610dfc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097a9190611bdb565b6000610e2b83611383565b905061034f838284611402565b6000610e4333610672565b90506000610e5084611383565b9050806001015460001415610e7857604051631eb4f4e760e01b815260040160405180910390fd5b805460ff1615610e9b57604051630a23827760e11b815260040160405180910390fd5b8060020154421115610ec0576040516335c84aeb60e21b815260040160405180910390fd5b610eca8285610fe8565b610ee757604051637cd1a64960e11b815260040160405180910390fd5b6000828152600382016020526040812054810b900b15610f1a57604051638601a09560e01b815260040160405180910390fd5b8260000b600114610f2d57600019610f30565b60015b60008381526003830160205260408120805492820b60ff1660ff199093169290921790915560048201805460019290610f6a908490611e0f565b90915550506001600084900b14610f82576000610f85565b60015b60ff16816005016000828254610f9b9190611e0f565b909155505060408051858152600085900b602082015283917fbdc899ff9789426dec6b3c3bc128ed8cc0a9b248c274dd93cfdb3709e5a2125e910160405180910390a26106d081856114eb565b600081831415610ffa57506000610a13565b8261100757506000610a13565b6000828152600860205260408082206001015480835291206002015460ff166110435760405163b0b9da2d60e01b815260040160405180910390fd5b60008481526008602052604081206001015482148061106157508185145b60008681526008602052604090206002015490915060ff1680156110825750805b1561109257600192505050610a13565b506000949350505050565b60006110a882611383565b905061029e81836114eb565b60006110be611735565b60008581526008602052604090206002015490915060ff166110f35760405163119ab1c960e11b815260040160405180910390fd5b6001600160a01b0383166000908152600960205260409020541561112a5760405163cb502ef160e01b815260040160405180910390fd5b6000848152600760209081526040808320848452600181018352922084519091611158918391870190611906565b5042600182810191909155600084815260086020908152604080832080546001600160a01b0319166001600160a01b038b1690811782558186018c90556002909101805460ff19168617905583526009909152812085905583548491906111c0908490611e0f565b925050819055506001600b60008282546111da9190611e0f565b909155505060405183906001600160a01b038716906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a482867fcd7f391a9646e0ab41ec2096f1d380febcdd775905c957ec790ab3738f9fdd78866040516112489190611dca565b60405180910390a3505050505050565b6001600160a01b0381166000908152600960205260408120548015801590611291575060008181526008602052604090206002015460ff165b61129c57600061129f565b60015b60ff169392505050565b6000818152600860205260409020600281015460ff166112dc576040516392c9b59960e01b815260040160405180910390fd5b60028101805460ff1916905580546001600160a01b0316600090815260096020908152604080832083905583546001600160a01b0319168455600180850154845260079092528220805491929091611335908490611e27565b925050819055506001600b600082825461134f9190611e27565b909155505060405182907f8401ed0b52520270ffba65c5383931fc1c6e30b27e1fc692d871d4f669d1f1ea90600090a25050565b6000818152600860205260408120600301546113a0816001611e0f565b6000848152600a6020526040902054146113cc576000838152600a602052604081208054600101815590525b6000838152600a602052604090208054829081106113ec576113ec611eec565b9060005260206000209060060201915050919050565b6000818152600383016020526040812054810b900b611434576040516359dc302960e01b815260040160405180910390fd5b60008181526008602052604090206002015460ff161561146757604051635c2a53c560e11b815260040160405180910390fd5b600182600401600082825461147c9190611e27565b90915550506000818152600383016020526040812054810b900b600114156114b95760018260050160008282546114b39190611e27565b90915550505b604051819084907f6a5de386c49c7e87d450f082eace65d7329e7123bdf11460295f7747adad110590600090a3505050565b6000806000808560040154111561153e5761153b611530611521670de0b6b3a7640000886004015461175090919063ffffffff16565b670de0b6b3a76400009061175c565b600587015490611750565b90505b60006706f05b59d3b200008210156115585760001961155b565b60015b8654909150600082810b610100909204810b900b1461160d578554600082810b60ff166101000261ff0019909216919091178755600287015461159f904290611e27565b905060025481101561160b576000816002546115bb9190611e27565b88600201546115ca9190611e0f565b90507f5073bec5c188828181e51012e5967fbdac7312bd400b8120cf3dcb0b8ee0f11e816040516115fd91815260200190565b60405180910390a160028801555b505b856002015442116116505760006116238661093e565b905061164861163d61152183670de0b6b3a7640000611750565b600589015490611750565b935050611658565b600193508192505b60006706f05b59d3b2000084101561167257600019611675565b60015b9050600081900b600114156116bc576040516001955086907fa3b99cec0cd3a7ee24ec2a54714e340cc9a7116aa4b0ff7730371682cb47f58090600090a26116bc866112a9565b841561172c5760408051878152600083900b60208201527f4e4d413658c729b8cf2dee49da9d98754c99a09654d209ce00244648febc1e54910160405180910390a1865460ff19166001178755600086815260086020526040812060030180549161172683611ea5565b91905055505b50505050505050565b6000600c6000815461174690611ea5565b9182905550919050565b6000610b218383611771565b6000610b2183670de0b6b3a764000084611838565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106117ba5760405163698d9a0160e11b8152600481018290526024015b60405180910390fd5b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826117f45780670de0b6b3a7640000850401945050505050610a13565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b6000808060001985870985870292508281108382030391505080600014156118735783828161186957611869611ed6565b0492505050610b21565b83811061189d57604051631dcf306360e21b815260048101829052602481018590526044016117b1565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b82805461191290611e6a565b90600052602060002090601f016020900481019282611934576000855561197a565b82601f1061194d57805160ff191683800117855561197a565b8280016001018555821561197a579182015b8281111561197a57825182559160200191906001019061195f565b5061198692915061198a565b5090565b5b80821115611986576000815560010161198b565b80356001600160a01b03811681146119b657600080fd5b919050565b60008083601f8401126119cd57600080fd5b50813567ffffffffffffffff8111156119e557600080fd5b6020830191508360208285010111156119fd57600080fd5b9250929050565b600060208284031215611a1657600080fd5b610b218261199f565b60008060408385031215611a3257600080fd5b611a3b8361199f565b9150611a496020840161199f565b90509250929050565b600080600060608486031215611a6757600080fd5b611a708461199f565b9250611a7e6020850161199f565b9150604084013590509250925092565b600080600080600060808688031215611aa657600080fd5b611aaf8661199f565b9450611abd6020870161199f565b935060408601359250606086013567ffffffffffffffff811115611ae057600080fd5b611aec888289016119bb565b969995985093965092949392505050565b60008060408385031215611b1057600080fd5b611b198361199f565b91506020830135611b2981611f02565b809150509250929050565b600080600060408486031215611b4957600080fd5b611b528461199f565b9250602084013567ffffffffffffffff811115611b6e57600080fd5b611b7a868287016119bb565b9497909650939450505050565b60008060408385031215611b9a57600080fd5b611ba38361199f565b946020939093013593505050565b600060208284031215611bc357600080fd5b81356001600160e01b031981168114610b2157600080fd5b600060208284031215611bed57600080fd5b8151610b2181611f13565b600060208284031215611c0a57600080fd5b5035919050565b60008060408385031215611c2457600080fd5b823591506020830135611b2981611f13565b60008060408385031215611c4957600080fd5b50508035926020909101359150565b60008060008060008060c08789031215611c7157600080fd5b86519550602087015194506040870151611c8a81611f13565b80945050606087015192506080870151915060a0870151611caa81611f02565b809150509295509295509295565b600080600060608486031215611ccd57600080fd5b505081359360208301359350604090920135919050565b60008151808452611cfc816020860160208601611e3e565b601f01601f19169290920160200192915050565b60008151611d22818560208601611e3e565b9290920192915050565b600080845481600182811c915080831680611d4857607f831692505b6020808410821415611d6857634e487b7160e01b86526022600452602486fd5b818015611d7c5760018114611d8d57611dba565b60ff19861689528489019650611dba565b60008b81526020902060005b86811015611db25781548b820152908501908301611d99565b505084890196505b505050505050610acf8185611d10565b602081526000610b216020830184611ce4565b602081526000825160406020840152611df96060840182611ce4565b9050602084015160408401528091505092915050565b60008219821115611e2257611e22611ec0565b500190565b600082821015611e3957611e39611ec0565b500390565b60005b83811015611e59578181015183820152602001611e41565b838111156106d05750506000910152565b600181811c90821680611e7e57607f821691505b60208210811415611e9f57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611eb957611eb9611ec0565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8015158114611f1057600080fd5b50565b8060000b8114611f1057600080fdfea26469706673582212200a95caf2962772a31c05f7cc14b667643496f6db0194d9c570b89797b88cb6ac64736f6c63430008060033";

type RegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Registry__factory extends ContractFactory {
  constructor(...args: RegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Registry";
  }

  deploy(
    __symbol: string,
    __name: string,
    addresses: string[],
    foundersCids: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Registry> {
    return super.deploy(
      __symbol,
      __name,
      addresses,
      foundersCids,
      overrides || {}
    ) as Promise<Registry>;
  }
  getDeployTransaction(
    __symbol: string,
    __name: string,
    addresses: string[],
    foundersCids: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __symbol,
      __name,
      addresses,
      foundersCids,
      overrides || {}
    );
  }
  attach(address: string): Registry {
    return super.attach(address) as Registry;
  }
  connect(signer: Signer): Registry__factory {
    return super.connect(signer) as Registry__factory;
  }
  static readonly contractName: "Registry";
  public readonly contractName: "Registry";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistryInterface {
    return new utils.Interface(_abi) as RegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registry {
    return new Contract(address, _abi, signerOrProvider) as Registry;
  }
}
