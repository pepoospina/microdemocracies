// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { AbiParameterToPrimitiveType, GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface RegistryFactory$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "RegistryFactory",
  "sourceName": "contracts/RegistryFactory.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_master",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newRegistry",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "number",
          "type": "uint256"
        }
      ],
      "name": "RegistryCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "contractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "__symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "__name",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        },
        {
          "internalType": "string[]",
          "name": "foundersCids",
          "type": "string[]"
        },
        {
          "internalType": "string",
          "name": "_statementCid",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_PENDING_PERIOD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_VOTING_PERIOD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_QUIET_ENDING_PERIOD",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "proxy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mrCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506040516109ba3803806109ba83398101604081905261002f91610057565b600080546001600160a01b0319166001600160a01b0392909216919091178155600155610087565b60006020828403121561006957600080fd5b81516001600160a01b038116811461008057600080fd5b9392505050565b610924806100966000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631fa05064146100465780635935029214610076578063b2a5f07714610089575b600080fd5b6100596100543660046105d4565b6100a0565b6040516001600160a01b0390911681526020015b60405180910390f35b6100596100843660046105bb565b6101bd565b61009260015481565b60405190815260200161006d565b600080546100b7906001600160a01b031683610229565b6001805491925060006100c9836108af565b91905055506000896100dc6001546102ca565b6040516020016100ed929190610749565b60408051601f1981840301815290829052632525fb1d60e11b825291506001600160a01b03831690634a4bf63a90610137908e9085908e908e908e908e908e908e90600401610778565b600060405180830381600087803b15801561015157600080fd5b505af1158015610165573d6000803e3d6000fd5b5050600154604080513381526001600160a01b03871660208201529193507f0199b6134da6ed0bbb6c0d2c029f3076e22bac90aba585625b14a4552c367b4d92500160405180910390a2509998505050505050505050565b600080546040513060388201526f5af43d82803e903d91602b57fd5bf3ff60248201526001600160a01b039091166014820152733d602d80600a3d3981f3363d3d373d3d3d363d738152605881018390526037600c820120607882015260556043909101205b92915050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166102235760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c6564000000000000000000604482015260640160405180910390fd5b606060006102d783610367565b600101905060008167ffffffffffffffff8111156102f7576102f76108d8565b6040519080825280601f01601f191660200182016040528015610321576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461035a5761035f565b61032b565b509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106103a65772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106103d2576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106103f057662386f26fc10000830492506010015b6305f5e1008310610408576305f5e100830492506008015b612710831061041c57612710830492506004015b6064831061042e576064830492506002015b600a83106102235760010192915050565b600082601f83011261045057600080fd5b813560206104656104608361085b565b61082a565b80838252828201915082860187848660051b890101111561048557600080fd5b6000805b868110156104b95782356001600160a01b03811681146104a7578283fd5b85529385019391850191600101610489565b509198975050505050505050565b600082601f8301126104d857600080fd5b813560206104e86104608361085b565b80838252828201915082860187848660051b890101111561050857600080fd5b6000805b868110156104b957823567ffffffffffffffff81111561052a578283fd5b6105388b88838d010161054b565b865250938501939185019160010161050c565b600082601f83011261055c57600080fd5b813567ffffffffffffffff811115610576576105766108d8565b610589601f8201601f191660200161082a565b81815284602083860101111561059e57600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156105cd57600080fd5b5035919050565b60008060008060008060008060006101208a8c0312156105f357600080fd5b893567ffffffffffffffff8082111561060b57600080fd5b6106178d838e0161054b565b9a5060208c013591508082111561062d57600080fd5b6106398d838e0161054b565b995060408c013591508082111561064f57600080fd5b61065b8d838e0161043f565b985060608c013591508082111561067157600080fd5b61067d8d838e016104c7565b975060808c013591508082111561069357600080fd5b506106a08c828d0161054b565b999c989b50969995989760a0870135975060c08701359660e081013596506101000135945092505050565b6000815180845260208085019450848260051b860182860160005b858110156107105783830389526106fe83835161071d565b988501989250908401906001016106e6565b5090979650505050505050565b6000815180845261073581602086016020860161087f565b601f01601f19169290920160200192915050565b6000835161075b81846020880161087f565b83519083019061076f81836020880161087f565b01949350505050565b600061010080835261078c8184018c61071d565b90506020838203818501526107a1828c61071d565b84810360408601528a51808252828c0193509082019060005b818110156107df5784516001600160a01b0316835293830193918301916001016107ba565b505084810360608601526107f3818b6106cb565b925050508281036080840152610809818861071d565b60a0840196909652505060c081019290925260e09091015295945050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610853576108536108d8565b604052919050565b600067ffffffffffffffff821115610875576108756108d8565b5060051b60200190565b60005b8381101561089a578181015183820152602001610882565b838111156108a9576000848401525b50505050565b60006000198214156108d157634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212208003b568cea0616d8bda60d5cb8ffc0e42cc494d9d5e8eeacaa21a842b82d5f564736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80631fa05064146100465780635935029214610076578063b2a5f07714610089575b600080fd5b6100596100543660046105d4565b6100a0565b6040516001600160a01b0390911681526020015b60405180910390f35b6100596100843660046105bb565b6101bd565b61009260015481565b60405190815260200161006d565b600080546100b7906001600160a01b031683610229565b6001805491925060006100c9836108af565b91905055506000896100dc6001546102ca565b6040516020016100ed929190610749565b60408051601f1981840301815290829052632525fb1d60e11b825291506001600160a01b03831690634a4bf63a90610137908e9085908e908e908e908e908e908e90600401610778565b600060405180830381600087803b15801561015157600080fd5b505af1158015610165573d6000803e3d6000fd5b5050600154604080513381526001600160a01b03871660208201529193507f0199b6134da6ed0bbb6c0d2c029f3076e22bac90aba585625b14a4552c367b4d92500160405180910390a2509998505050505050505050565b600080546040513060388201526f5af43d82803e903d91602b57fd5bf3ff60248201526001600160a01b039091166014820152733d602d80600a3d3981f3363d3d373d3d3d363d738152605881018390526037600c820120607882015260556043909101205b92915050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166102235760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c6564000000000000000000604482015260640160405180910390fd5b606060006102d783610367565b600101905060008167ffffffffffffffff8111156102f7576102f76108d8565b6040519080825280601f01601f191660200182016040528015610321576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461035a5761035f565b61032b565b509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106103a65772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106103d2576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106103f057662386f26fc10000830492506010015b6305f5e1008310610408576305f5e100830492506008015b612710831061041c57612710830492506004015b6064831061042e576064830492506002015b600a83106102235760010192915050565b600082601f83011261045057600080fd5b813560206104656104608361085b565b61082a565b80838252828201915082860187848660051b890101111561048557600080fd5b6000805b868110156104b95782356001600160a01b03811681146104a7578283fd5b85529385019391850191600101610489565b509198975050505050505050565b600082601f8301126104d857600080fd5b813560206104e86104608361085b565b80838252828201915082860187848660051b890101111561050857600080fd5b6000805b868110156104b957823567ffffffffffffffff81111561052a578283fd5b6105388b88838d010161054b565b865250938501939185019160010161050c565b600082601f83011261055c57600080fd5b813567ffffffffffffffff811115610576576105766108d8565b610589601f8201601f191660200161082a565b81815284602083860101111561059e57600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156105cd57600080fd5b5035919050565b60008060008060008060008060006101208a8c0312156105f357600080fd5b893567ffffffffffffffff8082111561060b57600080fd5b6106178d838e0161054b565b9a5060208c013591508082111561062d57600080fd5b6106398d838e0161054b565b995060408c013591508082111561064f57600080fd5b61065b8d838e0161043f565b985060608c013591508082111561067157600080fd5b61067d8d838e016104c7565b975060808c013591508082111561069357600080fd5b506106a08c828d0161054b565b999c989b50969995989760a0870135975060c08701359660e081013596506101000135945092505050565b6000815180845260208085019450848260051b860182860160005b858110156107105783830389526106fe83835161071d565b988501989250908401906001016106e6565b5090979650505050505050565b6000815180845261073581602086016020860161087f565b601f01601f19169290920160200192915050565b6000835161075b81846020880161087f565b83519083019061076f81836020880161087f565b01949350505050565b600061010080835261078c8184018c61071d565b90506020838203818501526107a1828c61071d565b84810360408601528a51808252828c0193509082019060005b818110156107df5784516001600160a01b0316835293830193918301916001016107ba565b505084810360608601526107f3818b6106cb565b925050508281036080840152610809818861071d565b60a0840196909652505060c081019290925260e09091015295945050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610853576108536108d8565b604052919050565b600067ffffffffffffffff821115610875576108756108d8565b5060051b60200190565b60005b8381101561089a578181015183820152602001610882565b838111156108a9576000848401525b50505050565b60006000198214156108d157634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212208003b568cea0616d8bda60d5cb8ffc0e42cc494d9d5e8eeacaa21a842b82d5f564736f6c63430008060033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "RegistryFactory",
    constructorArgs: [_master: AbiParameterToPrimitiveType<{"name":"_master","type":"address"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<RegistryFactory$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/RegistryFactory.sol:RegistryFactory",
    constructorArgs: [_master: AbiParameterToPrimitiveType<{"name":"_master","type":"address"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<RegistryFactory$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "RegistryFactory",
    constructorArgs: [_master: AbiParameterToPrimitiveType<{"name":"_master","type":"address"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<RegistryFactory$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/RegistryFactory.sol:RegistryFactory",
    constructorArgs: [_master: AbiParameterToPrimitiveType<{"name":"_master","type":"address"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<RegistryFactory$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "RegistryFactory",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<RegistryFactory$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/RegistryFactory.sol:RegistryFactory",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<RegistryFactory$Type["abi"]>>;
}
